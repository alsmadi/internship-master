{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get(target, property, receiver || target);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport BasePlugin from '../_base';\nimport { addClass, removeClass } from '../../helpers/dom/element';\nimport { rangeEach } from '../../helpers/number';\nimport { arrayEach, arrayMap } from '../../helpers/array';\nimport { registerPlugin } from '../../plugins';\nimport Hooks from '../../pluginHooks';\nimport hideRowItem from './contextMenuItem/hideRow';\nimport showRowItem from './contextMenuItem/showRow';\nHooks.getSingleton().register('beforeHideRows');\nHooks.getSingleton().register('afterHideRows');\nHooks.getSingleton().register('beforeUnhideRows');\nHooks.getSingleton().register('afterUnhideRows');\n/**\n * @plugin HiddenRows\n *\n * @description\n * Plugin allows to hide certain rows. The hiding is achieved by rendering the rows with height set as 0px.\n * The plugin not modifies the source data and do not participate in data transformation (the shape of data returned\n * by `getData*` methods stays intact).\n *\n * Possible plugin settings:\n *  * `copyPasteEnabled` as `Boolean` (default `true`)\n *  * `rows` as `Array`\n *  * `indicators` as `Boolean` (default `false`)\n *\n * @example\n *\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   date: getData(),\n *   hiddenRows: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     rows: [1, 2, 5]\n *   }\n * });\n *\n * // access to hiddenRows plugin instance\n * const hiddenRowsPlugin = hot.getPlugin('hiddenRows');\n *\n * // show single row\n * hiddenRowsPlugin.showRow(1);\n *\n * // show multiple rows\n * hiddenRowsPlugin.showRow(1, 2, 9);\n *\n * // or as an array\n * hiddenRowsPlugin.showRows([1, 2, 9]);\n *\n * // hide single row\n * hiddenRowsPlugin.hideRow(1);\n *\n * // hide multiple rows\n * hiddenRowsPlugin.hideRow(1, 2, 9);\n *\n * // or as an array\n * hiddenRowsPlugin.hideRows([1, 2, 9]);\n *\n * // rerender the table to see all changes\n * hot.render();\n * ```\n */\n\nvar HiddenRows = /*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(HiddenRows, _BasePlugin);\n  function HiddenRows(hotInstance) {\n    var _this;\n    _classCallCheck(this, HiddenRows);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HiddenRows).call(this, hotInstance));\n    /**\n     * Cached settings from Handsontable settings.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.settings = {};\n    /**\n     * List of hidden rows indexes.\n     *\n     * @private\n     * @type {Number[]}\n     */\n\n    _this.hiddenRows = [];\n    /**\n     * Last selected row index.\n     *\n     * @private\n     * @type {Number}\n     * @default -1\n     */\n\n    _this.lastSelectedRow = -1;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link HiddenRows#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n  _createClass(HiddenRows, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().hiddenRows;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      if (this.hot.hasRowHeaders()) {\n        this.addHook('afterGetRowHeader', function (row, TH) {\n          return _this2.onAfterGetRowHeader(row, TH);\n        });\n      } else {\n        this.addHook('afterRenderer', function (TD, row) {\n          return _this2.onAfterGetRowHeader(row, TD);\n        });\n      }\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.onModifyRowHeight(height, row);\n      });\n      this.addHook('beforeSetRangeStartOnly', function (coords) {\n        return _this2.onBeforeSetRangeStartOnly(coords);\n      });\n      this.addHook('beforeSetRangeStart', function (coords) {\n        return _this2.onBeforeSetRangeStart(coords);\n      });\n      this.addHook('beforeSetRangeEnd', function (coords) {\n        return _this2.onBeforeSetRangeEnd(coords);\n      });\n      this.addHook('hiddenRow', function (row) {\n        return _this2.isHidden(row);\n      });\n      this.addHook('afterCreateRow', function (index, amount) {\n        return _this2.onAfterCreateRow(index, amount);\n      });\n      this.addHook('afterRemoveRow', function (index, amount) {\n        return _this2.onAfterRemoveRow(index, amount);\n      });\n      this.addHook('init', function () {\n        return _this2.onInit();\n      }); // Dirty workaround - the section below runs only if the HOT instance is already prepared.\n\n      if (this.hot.view) {\n        this.onInit();\n      }\n      _get(_getPrototypeOf(HiddenRows.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.onInit();\n      _get(_getPrototypeOf(HiddenRows.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.settings = {};\n      this.hiddenRows = [];\n      this.lastSelectedRow = -1;\n      _get(_getPrototypeOf(HiddenRows.prototype), \"disablePlugin\", this).call(this);\n      this.resetCellsMeta();\n    }\n    /**\n     * Shows the rows provided in the array.\n     *\n     * @param {Number[]} rows Array of visual row indexes.\n     */\n  }, {\n    key: \"showRows\",\n    value: function showRows(rows) {\n      var _this3 = this;\n      var currentHideConfig = this.hiddenRows;\n      var validRows = this.isRowDataValid(rows);\n      var physicalRows = arrayMap(rows, function (visualRowIndex) {\n        return _this3.hot.toPhysicalRow(visualRowIndex);\n      });\n      var destinationHideConfig = currentHideConfig;\n      if (validRows) {\n        destinationHideConfig = this.hiddenRows.filter(function (hiddenRow) {\n          return physicalRows.includes(hiddenRow) === false;\n        });\n      }\n      var continueHiding = this.hot.runHooks('beforeUnhideRows', currentHideConfig, destinationHideConfig, validRows);\n      if (continueHiding === false) {\n        return;\n      }\n      if (validRows) {\n        this.hiddenRows = destinationHideConfig;\n      }\n      this.hot.runHooks('afterUnhideRows', currentHideConfig, destinationHideConfig, validRows, validRows && destinationHideConfig.length < currentHideConfig.length);\n    }\n    /**\n     * Shows the row provided as row index (counting from 0).\n     *\n     * @param {...Number} row Visual row index.\n     */\n  }, {\n    key: \"showRow\",\n    value: function showRow() {\n      for (var _len = arguments.length, row = new Array(_len), _key = 0; _key < _len; _key++) {\n        row[_key] = arguments[_key];\n      }\n      this.showRows(row);\n    }\n    /**\n     * Hides the rows provided in the array.\n     *\n     * @param {Number[]} rows Array of visual row indexes.\n     */\n  }, {\n    key: \"hideRows\",\n    value: function hideRows(rows) {\n      var _this4 = this;\n      var currentHideConfig = this.hiddenRows;\n      var validRows = this.isRowDataValid(rows);\n      var physicalRows = arrayMap(rows, function (visualRowIndex) {\n        return _this4.hot.toPhysicalRow(visualRowIndex);\n      });\n      var destinationHideConfig = currentHideConfig;\n      if (validRows) {\n        // Creating unique list of indexes.\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(physicalRows)));\n      }\n      var continueHiding = this.hot.runHooks('beforeHideRows', currentHideConfig, destinationHideConfig, validRows);\n      if (continueHiding === false) {\n        return;\n      }\n      if (validRows) {\n        this.hiddenRows = destinationHideConfig;\n      }\n      this.hot.runHooks('afterHideRows', currentHideConfig, destinationHideConfig, validRows, validRows && destinationHideConfig.length > currentHideConfig.length);\n    }\n    /**\n     * Hides the row provided as row index (counting from 0).\n     *\n     * @param {...Number} row Visual row index.\n     */\n  }, {\n    key: \"hideRow\",\n    value: function hideRow() {\n      for (var _len2 = arguments.length, row = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        row[_key2] = arguments[_key2];\n      }\n      this.hideRows(row);\n    }\n    /**\n     * Checks if given row is hidden.\n     *\n     * @param {Number} row Row index.\n     * @param {Boolean} isPhysicalIndex flag which determines type of index.\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(row) {\n      var isPhysicalIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var physicalRow = row;\n      if (!isPhysicalIndex) {\n        physicalRow = this.hot.toPhysicalRow(row);\n      }\n      return this.hiddenRows.includes(physicalRow);\n    }\n    /**\n     * Check whether all of the provided row indexes are within the bounds of the table.\n     *\n     * @param {Array} rows Array of visual row indexes.\n     */\n  }, {\n    key: \"isRowDataValid\",\n    value: function isRowDataValid(rows) {\n      var _this5 = this;\n      return rows.every(function (row) {\n        return Number.isInteger(row) && row >= 0 && row < _this5.hot.countRows();\n      });\n    }\n    /**\n     * Resets all rendered cells meta.\n     *\n     * @private\n     */\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipRowOnPaste = false;\n        }\n      });\n    }\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {Number} col Column index.\n     * @param {Object} cellProperties Cell meta object properties.\n     *\n     * @fires Hooks#unmodifyRow\n     */\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, col, cellProperties) {\n      var visualRow = this.hot.runHooks('unmodifyRow', row);\n      if (this.settings.copyPasteEnabled === false && this.isHidden(visualRow)) {\n        cellProperties.skipRowOnPaste = true;\n      } else {\n        cellProperties.skipRowOnPaste = false;\n      }\n      if (this.isHidden(visualRow - 1)) {\n        var firstSectionHidden = true;\n        var i = visualRow - 1;\n        cellProperties.className = cellProperties.className || '';\n        if (cellProperties.className.indexOf('afterHiddenRow') === -1) {\n          cellProperties.className += ' afterHiddenRow';\n        }\n        do {\n          if (!this.isHidden(i)) {\n            firstSectionHidden = false;\n            break;\n          }\n          i -= 1;\n        } while (i >= 0);\n        if (firstSectionHidden && cellProperties.className.indexOf('firstVisibleRow') === -1) {\n          cellProperties.className += ' firstVisibleRow';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n        if (classArr.length) {\n          var containAfterHiddenColumn = classArr.indexOf('afterHiddenRow');\n          if (containAfterHiddenColumn > -1) {\n            classArr.splice(containAfterHiddenColumn, 1);\n          }\n          var containFirstVisible = classArr.indexOf('firstVisibleRow');\n          if (containFirstVisible > -1) {\n            classArr.splice(containFirstVisible, 1);\n          }\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {HTMLElement} th Table header element.\n     */\n  }, {\n    key: \"onAfterGetRowHeader\",\n    value: function onAfterGetRowHeader(row, th) {\n      var tr = th.parentNode;\n      if (tr) {\n        if (this.isHidden(row)) {\n          addClass(tr, 'hide');\n        } else {\n          removeClass(tr, 'hide');\n        }\n      }\n      var firstSectionHidden = true;\n      var i = row - 1;\n      do {\n        if (!this.isHidden(i)) {\n          firstSectionHidden = false;\n          break;\n        }\n        i -= 1;\n      } while (i >= 0);\n      if (firstSectionHidden) {\n        addClass(th, 'firstVisibleRow');\n      }\n      if (this.settings.indicators && this.hot.hasRowHeaders()) {\n        if (this.isHidden(row - 1)) {\n          addClass(th, 'afterHiddenRow');\n        }\n        if (this.isHidden(row + 1)) {\n          addClass(th, 'beforeHiddenRow');\n        }\n      }\n    }\n    /**\n     * Adds the additional row height for the hidden row indicators.\n     *\n     * @private\n     * @param {Number} height Row height.\n     * @param {Number} row Row index.\n     * @returns {Number}\n     */\n  }, {\n    key: \"onModifyRowHeight\",\n    value: function onModifyRowHeight(height, row) {\n      if (this.isHidden(row)) {\n        return 0.1;\n      }\n      return height;\n    }\n    /**\n     * On modify copyable range listener.\n     *\n     * @private\n     * @param {Array} ranges Array of selected copyable text.\n     * @returns {Array} Returns modyfied range.\n     */\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this6 = this;\n      var newRanges = [];\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (_this6.isHidden(row)) {\n            if (!isHidden) {\n              pushRange(rangeStart, row - 1, range.startCol, range.endCol);\n            }\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = row;\n            }\n            if (row === range.endRow) {\n              pushRange(rangeStart, row, range.startCol, range.endCol);\n            }\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n    /**\n     * On before set range start listener, when selection was triggered by the cell.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n  }, {\n    key: \"onBeforeSetRangeStart\",\n    value: function onBeforeSetRangeStart(coords) {\n      var _this7 = this;\n      var actualSelection = this.hot.getSelectedLast() || false;\n      var lastPossibleIndex = this.hot.countRows() - 1;\n      var getNextRow = function getNextRow(row) {\n        var direction = 0;\n        var visualRow = row;\n        if (actualSelection) {\n          direction = visualRow > actualSelection[0] ? 1 : -1;\n          _this7.lastSelectedRow = actualSelection[0];\n        }\n        if (lastPossibleIndex < visualRow || visualRow < 0) {\n          return _this7.lastSelectedRow;\n        }\n        if (_this7.isHidden(visualRow)) {\n          visualRow = getNextRow(visualRow + direction);\n        }\n        return visualRow;\n      };\n      coords.row = getNextRow(coords.row);\n    }\n    /**\n     * On before set range start listener, when selection was triggered by the headers.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n  }, {\n    key: \"onBeforeSetRangeStartOnly\",\n    value: function onBeforeSetRangeStartOnly(coords) {\n      var _this8 = this;\n      if (coords.row > 0) {\n        return;\n      }\n      coords.row = 0;\n      var getNextRow = function getNextRow(row) {\n        var visualRow = row;\n        if (_this8.isHidden(visualRow)) {\n          visualRow += 1;\n          visualRow = getNextRow(visualRow);\n        }\n        return visualRow;\n      };\n      coords.row = getNextRow(coords.row);\n    }\n    /**\n     * On before set range end listener.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n  }, {\n    key: \"onBeforeSetRangeEnd\",\n    value: function onBeforeSetRangeEnd(coords) {\n      var _this9 = this;\n      var rowCount = this.hot.countRows();\n      var getNextRow = function getNextRow(row) {\n        var visualRow = row;\n        if (_this9.isHidden(visualRow)) {\n          if (_this9.lastSelectedRow > visualRow || coords.row === rowCount - 1) {\n            if (visualRow > 0) {\n              visualRow -= 1;\n              visualRow = getNextRow(visualRow);\n            } else {\n              rangeEach(0, _this9.lastSelectedRow, function (i) {\n                if (!_this9.isHidden(i)) {\n                  visualRow = i;\n                  return false;\n                }\n              });\n            }\n          } else {\n            visualRow += 1;\n            visualRow = getNextRow(visualRow);\n          }\n        }\n        return visualRow;\n      };\n      coords.row = getNextRow(coords.row);\n      this.lastSelectedRow = coords.row;\n    }\n    /**\n     * Adds Show-hide columns to context menu.\n     *\n     * @private\n     * @param {Object} options\n     */\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: '---------'\n      }, hideRowItem(this), showRowItem(this));\n    }\n    /**\n     * Recalculates index of hidden rows after add row action\n     *\n     * @private\n     * @param {Number} index\n     * @param {Number} amount\n     */\n  }, {\n    key: \"onAfterCreateRow\",\n    value: function onAfterCreateRow(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenRows, function (row) {\n        var visualRow = row;\n        if (visualRow >= index) {\n          visualRow += amount;\n        }\n        tempHidden.push(visualRow);\n      });\n      this.hiddenRows = tempHidden;\n    }\n    /**\n     * Recalculates index of hidden rows after remove row action\n     *\n     * @private\n     * @param {Number} index\n     * @param {Number} amount\n     */\n  }, {\n    key: \"onAfterRemoveRow\",\n    value: function onAfterRemoveRow(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenRows, function (row) {\n        var visualRow = row;\n        if (visualRow >= index) {\n          visualRow -= amount;\n        }\n        tempHidden.push(visualRow);\n      });\n      this.hiddenRows = tempHidden;\n    }\n    /**\n     * `afterPluginsInitialized` hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onInit\",\n    value: function onInit() {\n      var _this10 = this;\n      var settings = this.hot.getSettings().hiddenRows;\n      if (_typeof(settings) === 'object') {\n        this.settings = settings;\n        if (settings.copyPasteEnabled === void 0) {\n          settings.copyPasteEnabled = true;\n        }\n        if (Array.isArray(settings.rows)) {\n          this.hideRows(settings.rows);\n        }\n        if (!settings.copyPasteEnabled) {\n          this.addHook('modifyCopyableRange', function (ranges) {\n            return _this10.onModifyCopyableRange(ranges);\n          });\n        }\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(HiddenRows.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n  return HiddenRows;\n}(BasePlugin);\nregisterPlugin('hiddenRows', HiddenRows);\nexport default HiddenRows;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","value","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","addClass","removeClass","rangeEach","arrayEach","arrayMap","registerPlugin","Hooks","hideRowItem","showRowItem","getSingleton","register","HiddenRows","_BasePlugin","hotInstance","_this","settings","hiddenRows","lastSelectedRow","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","hasRowHeaders","addHook","row","TH","onAfterGetRowHeader","TD","options","onAfterContextMenuDefaultOptions","col","cellProperties","onAfterGetCellMeta","height","onModifyRowHeight","coords","onBeforeSetRangeStartOnly","onBeforeSetRangeStart","onBeforeSetRangeEnd","isHidden","index","amount","onAfterCreateRow","onAfterRemoveRow","onInit","view","updatePlugin","disablePlugin","resetCellsMeta","showRows","rows","_this3","currentHideConfig","validRows","isRowDataValid","physicalRows","visualRowIndex","toPhysicalRow","destinationHideConfig","filter","hiddenRow","includes","continueHiding","runHooks","showRow","_len","arguments","Array","_key","hideRows","_this4","from","Set","concat","hideRow","_len2","_key2","isPhysicalIndex","undefined","physicalRow","_this5","every","Number","isInteger","countRows","getCellsMeta","meta","skipRowOnPaste","visualRow","copyPasteEnabled","firstSectionHidden","className","indexOf","classArr","split","containAfterHiddenColumn","splice","containFirstVisible","join","th","tr","parentNode","indicators","onModifyCopyableRange","ranges","_this6","newRanges","pushRange","startRow","endRow","startCol","endCol","push","range","rangeStart","_this7","actualSelection","getSelectedLast","lastPossibleIndex","getNextRow","direction","_this8","_this9","rowCount","items","name","tempHidden","_this10","isArray","destroy"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/plugins/hiddenRows/hiddenRows.js"],"sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.every\";\nimport \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.number.constructor\";\nimport \"core-js/modules/es.number.is-integer\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.set\";\nimport \"core-js/modules/es.string.includes\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.string.split\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from '../_base';\nimport { addClass, removeClass } from '../../helpers/dom/element';\nimport { rangeEach } from '../../helpers/number';\nimport { arrayEach, arrayMap } from '../../helpers/array';\nimport { registerPlugin } from '../../plugins';\nimport Hooks from '../../pluginHooks';\nimport hideRowItem from './contextMenuItem/hideRow';\nimport showRowItem from './contextMenuItem/showRow';\nHooks.getSingleton().register('beforeHideRows');\nHooks.getSingleton().register('afterHideRows');\nHooks.getSingleton().register('beforeUnhideRows');\nHooks.getSingleton().register('afterUnhideRows');\n/**\n * @plugin HiddenRows\n *\n * @description\n * Plugin allows to hide certain rows. The hiding is achieved by rendering the rows with height set as 0px.\n * The plugin not modifies the source data and do not participate in data transformation (the shape of data returned\n * by `getData*` methods stays intact).\n *\n * Possible plugin settings:\n *  * `copyPasteEnabled` as `Boolean` (default `true`)\n *  * `rows` as `Array`\n *  * `indicators` as `Boolean` (default `false`)\n *\n * @example\n *\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   date: getData(),\n *   hiddenRows: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     rows: [1, 2, 5]\n *   }\n * });\n *\n * // access to hiddenRows plugin instance\n * const hiddenRowsPlugin = hot.getPlugin('hiddenRows');\n *\n * // show single row\n * hiddenRowsPlugin.showRow(1);\n *\n * // show multiple rows\n * hiddenRowsPlugin.showRow(1, 2, 9);\n *\n * // or as an array\n * hiddenRowsPlugin.showRows([1, 2, 9]);\n *\n * // hide single row\n * hiddenRowsPlugin.hideRow(1);\n *\n * // hide multiple rows\n * hiddenRowsPlugin.hideRow(1, 2, 9);\n *\n * // or as an array\n * hiddenRowsPlugin.hideRows([1, 2, 9]);\n *\n * // rerender the table to see all changes\n * hot.render();\n * ```\n */\n\nvar HiddenRows =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(HiddenRows, _BasePlugin);\n\n  function HiddenRows(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, HiddenRows);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HiddenRows).call(this, hotInstance));\n    /**\n     * Cached settings from Handsontable settings.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.settings = {};\n    /**\n     * List of hidden rows indexes.\n     *\n     * @private\n     * @type {Number[]}\n     */\n\n    _this.hiddenRows = [];\n    /**\n     * Last selected row index.\n     *\n     * @private\n     * @type {Number}\n     * @default -1\n     */\n\n    _this.lastSelectedRow = -1;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link HiddenRows#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(HiddenRows, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().hiddenRows;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      if (this.hot.hasRowHeaders()) {\n        this.addHook('afterGetRowHeader', function (row, TH) {\n          return _this2.onAfterGetRowHeader(row, TH);\n        });\n      } else {\n        this.addHook('afterRenderer', function (TD, row) {\n          return _this2.onAfterGetRowHeader(row, TD);\n        });\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.onModifyRowHeight(height, row);\n      });\n      this.addHook('beforeSetRangeStartOnly', function (coords) {\n        return _this2.onBeforeSetRangeStartOnly(coords);\n      });\n      this.addHook('beforeSetRangeStart', function (coords) {\n        return _this2.onBeforeSetRangeStart(coords);\n      });\n      this.addHook('beforeSetRangeEnd', function (coords) {\n        return _this2.onBeforeSetRangeEnd(coords);\n      });\n      this.addHook('hiddenRow', function (row) {\n        return _this2.isHidden(row);\n      });\n      this.addHook('afterCreateRow', function (index, amount) {\n        return _this2.onAfterCreateRow(index, amount);\n      });\n      this.addHook('afterRemoveRow', function (index, amount) {\n        return _this2.onAfterRemoveRow(index, amount);\n      });\n      this.addHook('init', function () {\n        return _this2.onInit();\n      }); // Dirty workaround - the section below runs only if the HOT instance is already prepared.\n\n      if (this.hot.view) {\n        this.onInit();\n      }\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.onInit();\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.settings = {};\n      this.hiddenRows = [];\n      this.lastSelectedRow = -1;\n\n      _get(_getPrototypeOf(HiddenRows.prototype), \"disablePlugin\", this).call(this);\n\n      this.resetCellsMeta();\n    }\n    /**\n     * Shows the rows provided in the array.\n     *\n     * @param {Number[]} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"showRows\",\n    value: function showRows(rows) {\n      var _this3 = this;\n\n      var currentHideConfig = this.hiddenRows;\n      var validRows = this.isRowDataValid(rows);\n      var physicalRows = arrayMap(rows, function (visualRowIndex) {\n        return _this3.hot.toPhysicalRow(visualRowIndex);\n      });\n      var destinationHideConfig = currentHideConfig;\n\n      if (validRows) {\n        destinationHideConfig = this.hiddenRows.filter(function (hiddenRow) {\n          return physicalRows.includes(hiddenRow) === false;\n        });\n      }\n\n      var continueHiding = this.hot.runHooks('beforeUnhideRows', currentHideConfig, destinationHideConfig, validRows);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (validRows) {\n        this.hiddenRows = destinationHideConfig;\n      }\n\n      this.hot.runHooks('afterUnhideRows', currentHideConfig, destinationHideConfig, validRows, validRows && destinationHideConfig.length < currentHideConfig.length);\n    }\n    /**\n     * Shows the row provided as row index (counting from 0).\n     *\n     * @param {...Number} row Visual row index.\n     */\n\n  }, {\n    key: \"showRow\",\n    value: function showRow() {\n      for (var _len = arguments.length, row = new Array(_len), _key = 0; _key < _len; _key++) {\n        row[_key] = arguments[_key];\n      }\n\n      this.showRows(row);\n    }\n    /**\n     * Hides the rows provided in the array.\n     *\n     * @param {Number[]} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"hideRows\",\n    value: function hideRows(rows) {\n      var _this4 = this;\n\n      var currentHideConfig = this.hiddenRows;\n      var validRows = this.isRowDataValid(rows);\n      var physicalRows = arrayMap(rows, function (visualRowIndex) {\n        return _this4.hot.toPhysicalRow(visualRowIndex);\n      });\n      var destinationHideConfig = currentHideConfig;\n\n      if (validRows) {\n        // Creating unique list of indexes.\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(physicalRows)));\n      }\n\n      var continueHiding = this.hot.runHooks('beforeHideRows', currentHideConfig, destinationHideConfig, validRows);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (validRows) {\n        this.hiddenRows = destinationHideConfig;\n      }\n\n      this.hot.runHooks('afterHideRows', currentHideConfig, destinationHideConfig, validRows, validRows && destinationHideConfig.length > currentHideConfig.length);\n    }\n    /**\n     * Hides the row provided as row index (counting from 0).\n     *\n     * @param {...Number} row Visual row index.\n     */\n\n  }, {\n    key: \"hideRow\",\n    value: function hideRow() {\n      for (var _len2 = arguments.length, row = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        row[_key2] = arguments[_key2];\n      }\n\n      this.hideRows(row);\n    }\n    /**\n     * Checks if given row is hidden.\n     *\n     * @param {Number} row Row index.\n     * @param {Boolean} isPhysicalIndex flag which determines type of index.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(row) {\n      var isPhysicalIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var physicalRow = row;\n\n      if (!isPhysicalIndex) {\n        physicalRow = this.hot.toPhysicalRow(row);\n      }\n\n      return this.hiddenRows.includes(physicalRow);\n    }\n    /**\n     * Check whether all of the provided row indexes are within the bounds of the table.\n     *\n     * @param {Array} rows Array of visual row indexes.\n     */\n\n  }, {\n    key: \"isRowDataValid\",\n    value: function isRowDataValid(rows) {\n      var _this5 = this;\n\n      return rows.every(function (row) {\n        return Number.isInteger(row) && row >= 0 && row < _this5.hot.countRows();\n      });\n    }\n    /**\n     * Resets all rendered cells meta.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipRowOnPaste = false;\n        }\n      });\n    }\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {Number} col Column index.\n     * @param {Object} cellProperties Cell meta object properties.\n     *\n     * @fires Hooks#unmodifyRow\n     */\n\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, col, cellProperties) {\n      var visualRow = this.hot.runHooks('unmodifyRow', row);\n\n      if (this.settings.copyPasteEnabled === false && this.isHidden(visualRow)) {\n        cellProperties.skipRowOnPaste = true;\n      } else {\n        cellProperties.skipRowOnPaste = false;\n      }\n\n      if (this.isHidden(visualRow - 1)) {\n        var firstSectionHidden = true;\n        var i = visualRow - 1;\n        cellProperties.className = cellProperties.className || '';\n\n        if (cellProperties.className.indexOf('afterHiddenRow') === -1) {\n          cellProperties.className += ' afterHiddenRow';\n        }\n\n        do {\n          if (!this.isHidden(i)) {\n            firstSectionHidden = false;\n            break;\n          }\n\n          i -= 1;\n        } while (i >= 0);\n\n        if (firstSectionHidden && cellProperties.className.indexOf('firstVisibleRow') === -1) {\n          cellProperties.className += ' firstVisibleRow';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n\n        if (classArr.length) {\n          var containAfterHiddenColumn = classArr.indexOf('afterHiddenRow');\n\n          if (containAfterHiddenColumn > -1) {\n            classArr.splice(containAfterHiddenColumn, 1);\n          }\n\n          var containFirstVisible = classArr.indexOf('firstVisibleRow');\n\n          if (containFirstVisible > -1) {\n            classArr.splice(containFirstVisible, 1);\n          }\n\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @param {HTMLElement} th Table header element.\n     */\n\n  }, {\n    key: \"onAfterGetRowHeader\",\n    value: function onAfterGetRowHeader(row, th) {\n      var tr = th.parentNode;\n\n      if (tr) {\n        if (this.isHidden(row)) {\n          addClass(tr, 'hide');\n        } else {\n          removeClass(tr, 'hide');\n        }\n      }\n\n      var firstSectionHidden = true;\n      var i = row - 1;\n\n      do {\n        if (!this.isHidden(i)) {\n          firstSectionHidden = false;\n          break;\n        }\n\n        i -= 1;\n      } while (i >= 0);\n\n      if (firstSectionHidden) {\n        addClass(th, 'firstVisibleRow');\n      }\n\n      if (this.settings.indicators && this.hot.hasRowHeaders()) {\n        if (this.isHidden(row - 1)) {\n          addClass(th, 'afterHiddenRow');\n        }\n\n        if (this.isHidden(row + 1)) {\n          addClass(th, 'beforeHiddenRow');\n        }\n      }\n    }\n    /**\n     * Adds the additional row height for the hidden row indicators.\n     *\n     * @private\n     * @param {Number} height Row height.\n     * @param {Number} row Row index.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"onModifyRowHeight\",\n    value: function onModifyRowHeight(height, row) {\n      if (this.isHidden(row)) {\n        return 0.1;\n      }\n\n      return height;\n    }\n    /**\n     * On modify copyable range listener.\n     *\n     * @private\n     * @param {Array} ranges Array of selected copyable text.\n     * @returns {Array} Returns modyfied range.\n     */\n\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this6 = this;\n\n      var newRanges = [];\n\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (_this6.isHidden(row)) {\n            if (!isHidden) {\n              pushRange(rangeStart, row - 1, range.startCol, range.endCol);\n            }\n\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = row;\n            }\n\n            if (row === range.endRow) {\n              pushRange(rangeStart, row, range.startCol, range.endCol);\n            }\n\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n    /**\n     * On before set range start listener, when selection was triggered by the cell.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeStart\",\n    value: function onBeforeSetRangeStart(coords) {\n      var _this7 = this;\n\n      var actualSelection = this.hot.getSelectedLast() || false;\n      var lastPossibleIndex = this.hot.countRows() - 1;\n\n      var getNextRow = function getNextRow(row) {\n        var direction = 0;\n        var visualRow = row;\n\n        if (actualSelection) {\n          direction = visualRow > actualSelection[0] ? 1 : -1;\n          _this7.lastSelectedRow = actualSelection[0];\n        }\n\n        if (lastPossibleIndex < visualRow || visualRow < 0) {\n          return _this7.lastSelectedRow;\n        }\n\n        if (_this7.isHidden(visualRow)) {\n          visualRow = getNextRow(visualRow + direction);\n        }\n\n        return visualRow;\n      };\n\n      coords.row = getNextRow(coords.row);\n    }\n    /**\n     * On before set range start listener, when selection was triggered by the headers.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeStartOnly\",\n    value: function onBeforeSetRangeStartOnly(coords) {\n      var _this8 = this;\n\n      if (coords.row > 0) {\n        return;\n      }\n\n      coords.row = 0;\n\n      var getNextRow = function getNextRow(row) {\n        var visualRow = row;\n\n        if (_this8.isHidden(visualRow)) {\n          visualRow += 1;\n          visualRow = getNextRow(visualRow);\n        }\n\n        return visualRow;\n      };\n\n      coords.row = getNextRow(coords.row);\n    }\n    /**\n     * On before set range end listener.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeEnd\",\n    value: function onBeforeSetRangeEnd(coords) {\n      var _this9 = this;\n\n      var rowCount = this.hot.countRows();\n\n      var getNextRow = function getNextRow(row) {\n        var visualRow = row;\n\n        if (_this9.isHidden(visualRow)) {\n          if (_this9.lastSelectedRow > visualRow || coords.row === rowCount - 1) {\n            if (visualRow > 0) {\n              visualRow -= 1;\n              visualRow = getNextRow(visualRow);\n            } else {\n              rangeEach(0, _this9.lastSelectedRow, function (i) {\n                if (!_this9.isHidden(i)) {\n                  visualRow = i;\n                  return false;\n                }\n              });\n            }\n          } else {\n            visualRow += 1;\n            visualRow = getNextRow(visualRow);\n          }\n        }\n\n        return visualRow;\n      };\n\n      coords.row = getNextRow(coords.row);\n      this.lastSelectedRow = coords.row;\n    }\n    /**\n     * Adds Show-hide columns to context menu.\n     *\n     * @private\n     * @param {Object} options\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: '---------'\n      }, hideRowItem(this), showRowItem(this));\n    }\n    /**\n     * Recalculates index of hidden rows after add row action\n     *\n     * @private\n     * @param {Number} index\n     * @param {Number} amount\n     */\n\n  }, {\n    key: \"onAfterCreateRow\",\n    value: function onAfterCreateRow(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenRows, function (row) {\n        var visualRow = row;\n\n        if (visualRow >= index) {\n          visualRow += amount;\n        }\n\n        tempHidden.push(visualRow);\n      });\n      this.hiddenRows = tempHidden;\n    }\n    /**\n     * Recalculates index of hidden rows after remove row action\n     *\n     * @private\n     * @param {Number} index\n     * @param {Number} amount\n     */\n\n  }, {\n    key: \"onAfterRemoveRow\",\n    value: function onAfterRemoveRow(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenRows, function (row) {\n        var visualRow = row;\n\n        if (visualRow >= index) {\n          visualRow -= amount;\n        }\n\n        tempHidden.push(visualRow);\n      });\n      this.hiddenRows = tempHidden;\n    }\n    /**\n     * `afterPluginsInitialized` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onInit\",\n    value: function onInit() {\n      var _this10 = this;\n\n      var settings = this.hot.getSettings().hiddenRows;\n\n      if (_typeof(settings) === 'object') {\n        this.settings = settings;\n\n        if (settings.copyPasteEnabled === void 0) {\n          settings.copyPasteEnabled = true;\n        }\n\n        if (Array.isArray(settings.rows)) {\n          this.hideRows(settings.rows);\n        }\n\n        if (!settings.copyPasteEnabled) {\n          this.addHook('modifyCopyableRange', function (ranges) {\n            return _this10.onModifyCopyableRange(ranges);\n          });\n        }\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(HiddenRows.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return HiddenRows;\n}(BasePlugin);\n\nregisterPlugin('hiddenRows', HiddenRows);\nexport default HiddenRows;"],"mappings":"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"},"metadata":{},"sourceType":"module"}