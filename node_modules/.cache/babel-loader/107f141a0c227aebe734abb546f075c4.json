{"ast":null,"code":"import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.fill\";\nimport \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.map\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-own-property-descriptors\";\nimport \"core-js/modules/es.object.keys\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.includes\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.for-each\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nimport { createHighlight } from './types';\nimport { arrayEach } from './../../helpers/array';\nexport var ACTIVE_HEADER_TYPE = 'active-header';\nexport var AREA_TYPE = 'area';\nexport var CELL_TYPE = 'cell';\nexport var FILL_TYPE = 'fill';\nexport var HEADER_TYPE = 'header';\nexport var CUSTOM_SELECTION = 'custom-selection';\n/**\n * Highlight class responsible for managing Walkontable Selection classes.\n *\n * With Highlight object you can manipulate four different highlight types:\n *  - `cell` can be added only to a single cell at a time and it defines currently selected cell;\n *  - `fill` can occur only once and its highlight defines selection of autofill functionality (managed by the plugin with the same name);\n *  - `areas` can be added to multiple cells at a time. This type highlights selected cell or multiple cells.\n *    The multiple cells have to be defined as an uninterrupted order (regular shape). Otherwise, the new layer of\n *    that type should be created to manage not-consecutive selection;\n *  - `header` can occur multiple times. This type is designed to highlight only headers. Like `area` type it\n *    can appear with multiple highlights (accessed under different level layers).\n *\n * @class Highlight\n * @util\n */\n\nvar Highlight = /*#__PURE__*/\nfunction () {\n  function Highlight(options) {\n    _classCallCheck(this, Highlight);\n\n    /**\n     * Options consumed by Highlight class and Walkontable Selection classes.\n     *\n     * @type {Object}\n     */\n    this.options = options;\n    /**\n     * The property which describes which layer level of the visual selection will be modified.\n     * This option is valid only for `area` and `header` highlight types which occurs multiple times on\n     * the table (as a non-consecutive selection).\n     *\n     * An order of the layers is the same as the order of added new non-consecutive selections.\n     *\n     * @type {Number}\n     * @default 0\n     */\n\n    this.layerLevel = 0;\n    /**\n     * `cell` highlight object which describes attributes for the currently selected cell.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n\n    this.cell = createHighlight(CELL_TYPE, options);\n    /**\n     * `fill` highlight object which describes attributes for the borders for autofill functionality.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n\n    this.fill = createHighlight(FILL_TYPE, options);\n    /**\n     * Collection of the `area` highlights. That objects describes attributes for the borders and selection of\n     * the multiple selected cells. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.areas = new Map();\n    /**\n     * Collection of the `header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows and columns in the table header. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.headers = new Map();\n    /**\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows and columns in the table header. The table headers which have selected all items in\n     * a row will be marked as `active-header`.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.activeHeaders = new Map();\n    /**\n     * Collection of the `custom-selection`, holder for example borders added through CustomBorders plugin.\n     *\n     * @type {Selection[]}\n     */\n\n    this.customSelections = [];\n  }\n  /**\n   * Check if highlight cell rendering is disabled for specyfied highlight type.\n   *\n   * @param {String} highlightType Highlight type. Possible values are: `cell`, `area`, `fill` or `header`.\n   * @return {Boolean}\n   */\n\n  _createClass(Highlight, [{\n    key: \"isEnabledFor\",\n    value: function isEnabledFor(highlightType) {\n      // Legacy compatibility.\n      var type = highlightType === 'current' ? CELL_TYPE : highlightType;\n      var disableHighlight = this.options.disableHighlight;\n      if (typeof disableHighlight === 'string') {\n        disableHighlight = [disableHighlight];\n      }\n      return disableHighlight === false || Array.isArray(disableHighlight) && !disableHighlight.includes(type);\n    }\n    /**\n     * Set a new layer level to make access to the desire `area` and `header` highlights.\n     *\n     * @param {Number} [level=0] Layer level to use.\n     * @returns {Highlight}\n     */\n  }, {\n    key: \"useLayerLevel\",\n    value: function useLayerLevel() {\n      var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.layerLevel = level;\n      return this;\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the currently selected/edited cell.\n     *\n     * @return {Selection}\n     */\n  }, {\n    key: \"getCell\",\n    value: function getCell() {\n      return this.cell;\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the autofill functionality.\n     *\n     * @return {Selection}\n     */\n  }, {\n    key: \"getFill\",\n    value: function getFill() {\n      return this.fill;\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected cells.\n     *\n     * @return {Selection}\n     */\n  }, {\n    key: \"createOrGetArea\",\n    value: function createOrGetArea() {\n      var layerLevel = this.layerLevel;\n      var area;\n      if (this.areas.has(layerLevel)) {\n        area = this.areas.get(layerLevel);\n      } else {\n        area = createHighlight(AREA_TYPE, _objectSpread({\n          layerLevel: layerLevel\n        }, this.options));\n        this.areas.set(layerLevel, area);\n      }\n      return area;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the cells.\n     *\n     * @return {Selection[]}\n     */\n  }, {\n    key: \"getAreas\",\n    value: function getAreas() {\n      return _toConsumableArray(this.areas.values());\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected header cells.\n     *\n     * @return {Selection}\n     */\n  }, {\n    key: \"createOrGetHeader\",\n    value: function createOrGetHeader() {\n      var layerLevel = this.layerLevel;\n      var header;\n      if (this.headers.has(layerLevel)) {\n        header = this.headers.get(layerLevel);\n      } else {\n        header = createHighlight(HEADER_TYPE, _objectSpread({}, this.options));\n        this.headers.set(layerLevel, header);\n      }\n      return header;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers.\n     *\n     * @return {Selection[]}\n     */\n  }, {\n    key: \"getHeaders\",\n    value: function getHeaders() {\n      return _toConsumableArray(this.headers.values());\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected active header cells.\n     *\n     * @return {Selection}\n     */\n  }, {\n    key: \"createOrGetActiveHeader\",\n    value: function createOrGetActiveHeader() {\n      var layerLevel = this.layerLevel;\n      var header;\n      if (this.activeHeaders.has(layerLevel)) {\n        header = this.activeHeaders.get(layerLevel);\n      } else {\n        header = createHighlight(ACTIVE_HEADER_TYPE, _objectSpread({}, this.options));\n        this.activeHeaders.set(layerLevel, header);\n      }\n      return header;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the active headers.\n     *\n     * @return {Selection[]}\n     */\n  }, {\n    key: \"getActiveHeaders\",\n    value: function getActiveHeaders() {\n      return _toConsumableArray(this.activeHeaders.values());\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the custom selection functionality.\n     *\n     * @return {Selection}\n     */\n  }, {\n    key: \"getCustomSelections\",\n    value: function getCustomSelections() {\n      return _toConsumableArray(this.customSelections.values());\n    }\n    /**\n     * Add selection to the custom selection instance. The new selection are added to the end of the selection collection.\n     *\n     * @param {Object} options\n     */\n  }, {\n    key: \"addCustomSelection\",\n    value: function addCustomSelection(options) {\n      this.customSelections.push(createHighlight(CUSTOM_SELECTION, _objectSpread({}, options)));\n    }\n    /**\n     * Perform cleaning visual highlights for the whole table.\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.cell.clear();\n      this.fill.clear();\n      arrayEach(this.areas.values(), function (highlight) {\n        return void highlight.clear();\n      });\n      arrayEach(this.headers.values(), function (highlight) {\n        return void highlight.clear();\n      });\n      arrayEach(this.activeHeaders.values(), function (highlight) {\n        return void highlight.clear();\n      });\n    }\n    /**\n     * This object can be iterate over using `for of` syntax or using internal `arrayEach` helper.\n     */\n  }, {\n    key: Symbol.iterator,\n    value: function value() {\n      return [this.cell, this.fill].concat(_toConsumableArray(this.areas.values()), _toConsumableArray(this.headers.values()), _toConsumableArray(this.activeHeaders.values()), _toConsumableArray(this.customSelections))[Symbol.iterator]();\n    }\n  }]);\n  return Highlight;\n}();\nexport default Highlight;","map":{"version":3,"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","createHighlight","arrayEach","ACTIVE_HEADER_TYPE","AREA_TYPE","CELL_TYPE","FILL_TYPE","HEADER_TYPE","CUSTOM_SELECTION","Highlight","options","layerLevel","cell","fill","areas","Map","headers","activeHeaders","customSelections","isEnabledFor","highlightType","type","disableHighlight","includes","useLayerLevel","level","undefined","getCell","getFill","createOrGetArea","area","has","get","set","getAreas","values","createOrGetHeader","header","getHeaders","createOrGetActiveHeader","getActiveHeaders","getCustomSelections","addCustomSelection","clear","highlight","concat"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/selection/highlight/highlight.js"],"sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.fill\";\nimport \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.for-each\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.map\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-own-property-descriptors\";\nimport \"core-js/modules/es.object.keys\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.includes\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.for-each\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { createHighlight } from './types';\nimport { arrayEach } from './../../helpers/array';\nexport var ACTIVE_HEADER_TYPE = 'active-header';\nexport var AREA_TYPE = 'area';\nexport var CELL_TYPE = 'cell';\nexport var FILL_TYPE = 'fill';\nexport var HEADER_TYPE = 'header';\nexport var CUSTOM_SELECTION = 'custom-selection';\n/**\n * Highlight class responsible for managing Walkontable Selection classes.\n *\n * With Highlight object you can manipulate four different highlight types:\n *  - `cell` can be added only to a single cell at a time and it defines currently selected cell;\n *  - `fill` can occur only once and its highlight defines selection of autofill functionality (managed by the plugin with the same name);\n *  - `areas` can be added to multiple cells at a time. This type highlights selected cell or multiple cells.\n *    The multiple cells have to be defined as an uninterrupted order (regular shape). Otherwise, the new layer of\n *    that type should be created to manage not-consecutive selection;\n *  - `header` can occur multiple times. This type is designed to highlight only headers. Like `area` type it\n *    can appear with multiple highlights (accessed under different level layers).\n *\n * @class Highlight\n * @util\n */\n\nvar Highlight =\n/*#__PURE__*/\nfunction () {\n  function Highlight(options) {\n    _classCallCheck(this, Highlight);\n\n    /**\n     * Options consumed by Highlight class and Walkontable Selection classes.\n     *\n     * @type {Object}\n     */\n    this.options = options;\n    /**\n     * The property which describes which layer level of the visual selection will be modified.\n     * This option is valid only for `area` and `header` highlight types which occurs multiple times on\n     * the table (as a non-consecutive selection).\n     *\n     * An order of the layers is the same as the order of added new non-consecutive selections.\n     *\n     * @type {Number}\n     * @default 0\n     */\n\n    this.layerLevel = 0;\n    /**\n     * `cell` highlight object which describes attributes for the currently selected cell.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n\n    this.cell = createHighlight(CELL_TYPE, options);\n    /**\n     * `fill` highlight object which describes attributes for the borders for autofill functionality.\n     * It can only occur only once on the table.\n     *\n     * @type {Selection}\n     */\n\n    this.fill = createHighlight(FILL_TYPE, options);\n    /**\n     * Collection of the `area` highlights. That objects describes attributes for the borders and selection of\n     * the multiple selected cells. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.areas = new Map();\n    /**\n     * Collection of the `header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows and columns in the table header. It can occur multiple times on the table.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.headers = new Map();\n    /**\n     * Collection of the `active-header` highlights. That objects describes attributes for the selection of\n     * the multiple selected rows and columns in the table header. The table headers which have selected all items in\n     * a row will be marked as `active-header`.\n     *\n     * @type {Map.<number, Selection>}\n     */\n\n    this.activeHeaders = new Map();\n    /**\n     * Collection of the `custom-selection`, holder for example borders added through CustomBorders plugin.\n     *\n     * @type {Selection[]}\n     */\n\n    this.customSelections = [];\n  }\n  /**\n   * Check if highlight cell rendering is disabled for specyfied highlight type.\n   *\n   * @param {String} highlightType Highlight type. Possible values are: `cell`, `area`, `fill` or `header`.\n   * @return {Boolean}\n   */\n\n\n  _createClass(Highlight, [{\n    key: \"isEnabledFor\",\n    value: function isEnabledFor(highlightType) {\n      // Legacy compatibility.\n      var type = highlightType === 'current' ? CELL_TYPE : highlightType;\n      var disableHighlight = this.options.disableHighlight;\n\n      if (typeof disableHighlight === 'string') {\n        disableHighlight = [disableHighlight];\n      }\n\n      return disableHighlight === false || Array.isArray(disableHighlight) && !disableHighlight.includes(type);\n    }\n    /**\n     * Set a new layer level to make access to the desire `area` and `header` highlights.\n     *\n     * @param {Number} [level=0] Layer level to use.\n     * @returns {Highlight}\n     */\n\n  }, {\n    key: \"useLayerLevel\",\n    value: function useLayerLevel() {\n      var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.layerLevel = level;\n      return this;\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the currently selected/edited cell.\n     *\n     * @return {Selection}\n     */\n\n  }, {\n    key: \"getCell\",\n    value: function getCell() {\n      return this.cell;\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the autofill functionality.\n     *\n     * @return {Selection}\n     */\n\n  }, {\n    key: \"getFill\",\n    value: function getFill() {\n      return this.fill;\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected cells.\n     *\n     * @return {Selection}\n     */\n\n  }, {\n    key: \"createOrGetArea\",\n    value: function createOrGetArea() {\n      var layerLevel = this.layerLevel;\n      var area;\n\n      if (this.areas.has(layerLevel)) {\n        area = this.areas.get(layerLevel);\n      } else {\n        area = createHighlight(AREA_TYPE, _objectSpread({\n          layerLevel: layerLevel\n        }, this.options));\n        this.areas.set(layerLevel, area);\n      }\n\n      return area;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the cells.\n     *\n     * @return {Selection[]}\n     */\n\n  }, {\n    key: \"getAreas\",\n    value: function getAreas() {\n      return _toConsumableArray(this.areas.values());\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected header cells.\n     *\n     * @return {Selection}\n     */\n\n  }, {\n    key: \"createOrGetHeader\",\n    value: function createOrGetHeader() {\n      var layerLevel = this.layerLevel;\n      var header;\n\n      if (this.headers.has(layerLevel)) {\n        header = this.headers.get(layerLevel);\n      } else {\n        header = createHighlight(HEADER_TYPE, _objectSpread({}, this.options));\n        this.headers.set(layerLevel, header);\n      }\n\n      return header;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the headers.\n     *\n     * @return {Selection[]}\n     */\n\n  }, {\n    key: \"getHeaders\",\n    value: function getHeaders() {\n      return _toConsumableArray(this.headers.values());\n    }\n    /**\n     * Get or create (if not exist in the cache) Walkontable Selection instance created for controlling highlight\n     * of the multiple selected active header cells.\n     *\n     * @return {Selection}\n     */\n\n  }, {\n    key: \"createOrGetActiveHeader\",\n    value: function createOrGetActiveHeader() {\n      var layerLevel = this.layerLevel;\n      var header;\n\n      if (this.activeHeaders.has(layerLevel)) {\n        header = this.activeHeaders.get(layerLevel);\n      } else {\n        header = createHighlight(ACTIVE_HEADER_TYPE, _objectSpread({}, this.options));\n        this.activeHeaders.set(layerLevel, header);\n      }\n\n      return header;\n    }\n    /**\n     * Get all Walkontable Selection instances which describes the state of the visual highlight of the active headers.\n     *\n     * @return {Selection[]}\n     */\n\n  }, {\n    key: \"getActiveHeaders\",\n    value: function getActiveHeaders() {\n      return _toConsumableArray(this.activeHeaders.values());\n    }\n    /**\n     * Get Walkontable Selection instance created for controlling highlight of the custom selection functionality.\n     *\n     * @return {Selection}\n     */\n\n  }, {\n    key: \"getCustomSelections\",\n    value: function getCustomSelections() {\n      return _toConsumableArray(this.customSelections.values());\n    }\n    /**\n     * Add selection to the custom selection instance. The new selection are added to the end of the selection collection.\n     *\n     * @param {Object} options\n     */\n\n  }, {\n    key: \"addCustomSelection\",\n    value: function addCustomSelection(options) {\n      this.customSelections.push(createHighlight(CUSTOM_SELECTION, _objectSpread({}, options)));\n    }\n    /**\n     * Perform cleaning visual highlights for the whole table.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.cell.clear();\n      this.fill.clear();\n      arrayEach(this.areas.values(), function (highlight) {\n        return void highlight.clear();\n      });\n      arrayEach(this.headers.values(), function (highlight) {\n        return void highlight.clear();\n      });\n      arrayEach(this.activeHeaders.values(), function (highlight) {\n        return void highlight.clear();\n      });\n    }\n    /**\n     * This object can be iterate over using `for of` syntax or using internal `arrayEach` helper.\n     */\n\n  }, {\n    key: Symbol.iterator,\n    value: function value() {\n      return [this.cell, this.fill].concat(_toConsumableArray(this.areas.values()), _toConsumableArray(this.headers.values()), _toConsumableArray(this.activeHeaders.values()), _toConsumableArray(this.customSelections))[Symbol.iterator]();\n    }\n  }]);\n\n  return Highlight;\n}();\n\nexport default Highlight;"],"mappings":"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"},"metadata":{},"sourceType":"module"}