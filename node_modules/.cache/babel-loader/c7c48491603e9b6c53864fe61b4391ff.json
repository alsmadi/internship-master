{"ast":null,"code":"import numbro from 'numbro';\nimport { getRenderer } from './index';\nimport { isNumeric } from './../helpers/number';\n/**\n * Numeric cell renderer\n *\n * @private\n * @renderer NumericRenderer\n * @param {Object} instance Handsontable instance\n * @param {Element} TD Table cell where to render\n * @param {Number} row\n * @param {Number} col\n * @param {String|Number} prop Row object property name\n * @param value Value to render (remember to escape unsafe HTML before inserting to DOM!)\n * @param {Object} cellProperties Cell properties (shared by cell renderer and editor)\n */\n\nfunction numericRenderer(instance, TD, row, col, prop, value, cellProperties) {\n  var newValue = value;\n  if (isNumeric(newValue)) {\n    var numericFormat = cellProperties.numericFormat;\n    var cellCulture = numericFormat && numericFormat.culture || '-';\n    var cellFormatPattern = numericFormat && numericFormat.pattern;\n    var className = cellProperties.className || '';\n    var classArr = className.length ? className.split(' ') : [];\n    if (typeof cellCulture !== 'undefined' && !numbro.languages()[cellCulture]) {\n      var shortTag = cellCulture.replace('-', '');\n      var langData = numbro.allLanguages ? numbro.allLanguages[cellCulture] : numbro[shortTag];\n      if (langData) {\n        numbro.registerLanguage(langData);\n      }\n    }\n    numbro.setLanguage(cellCulture);\n    newValue = numbro(newValue).format(cellFormatPattern || '0');\n    if (classArr.indexOf('htLeft') < 0 && classArr.indexOf('htCenter') < 0 && classArr.indexOf('htRight') < 0 && classArr.indexOf('htJustify') < 0) {\n      classArr.push('htRight');\n    }\n    if (classArr.indexOf('htNumeric') < 0) {\n      classArr.push('htNumeric');\n    }\n    cellProperties.className = classArr.join(' ');\n  }\n  getRenderer('text')(instance, TD, row, col, prop, newValue, cellProperties);\n}\nexport default numericRenderer;","map":{"version":3,"names":["numbro","getRenderer","isNumeric","numericRenderer","instance","TD","row","col","prop","value","cellProperties","newValue","numericFormat","cellCulture","culture","cellFormatPattern","pattern","className","classArr","length","split","languages","shortTag","replace","langData","allLanguages","registerLanguage","setLanguage","format","indexOf","push","join"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/renderers/numericRenderer.js"],"sourcesContent":["import \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/es.string.split\";\nimport numbro from 'numbro';\nimport { getRenderer } from './index';\nimport { isNumeric } from './../helpers/number';\n/**\n * Numeric cell renderer\n *\n * @private\n * @renderer NumericRenderer\n * @param {Object} instance Handsontable instance\n * @param {Element} TD Table cell where to render\n * @param {Number} row\n * @param {Number} col\n * @param {String|Number} prop Row object property name\n * @param value Value to render (remember to escape unsafe HTML before inserting to DOM!)\n * @param {Object} cellProperties Cell properties (shared by cell renderer and editor)\n */\n\nfunction numericRenderer(instance, TD, row, col, prop, value, cellProperties) {\n  var newValue = value;\n\n  if (isNumeric(newValue)) {\n    var numericFormat = cellProperties.numericFormat;\n    var cellCulture = numericFormat && numericFormat.culture || '-';\n    var cellFormatPattern = numericFormat && numericFormat.pattern;\n    var className = cellProperties.className || '';\n    var classArr = className.length ? className.split(' ') : [];\n\n    if (typeof cellCulture !== 'undefined' && !numbro.languages()[cellCulture]) {\n      var shortTag = cellCulture.replace('-', '');\n      var langData = numbro.allLanguages ? numbro.allLanguages[cellCulture] : numbro[shortTag];\n\n      if (langData) {\n        numbro.registerLanguage(langData);\n      }\n    }\n\n    numbro.setLanguage(cellCulture);\n    newValue = numbro(newValue).format(cellFormatPattern || '0');\n\n    if (classArr.indexOf('htLeft') < 0 && classArr.indexOf('htCenter') < 0 && classArr.indexOf('htRight') < 0 && classArr.indexOf('htJustify') < 0) {\n      classArr.push('htRight');\n    }\n\n    if (classArr.indexOf('htNumeric') < 0) {\n      classArr.push('htNumeric');\n    }\n\n    cellProperties.className = classArr.join(' ');\n  }\n\n  getRenderer('text')(instance, TD, row, col, prop, newValue, cellProperties);\n}\n\nexport default numericRenderer;"],"mappings":"AAKA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,WAAW,QAAQ,SAAS;AACrC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,eAAe,CAACC,QAAQ,EAAEC,EAAE,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,cAAc,EAAE;EAC5E,IAAIC,QAAQ,GAAGF,KAAK;EAEpB,IAAIP,SAAS,CAACS,QAAQ,CAAC,EAAE;IACvB,IAAIC,aAAa,GAAGF,cAAc,CAACE,aAAa;IAChD,IAAIC,WAAW,GAAGD,aAAa,IAAIA,aAAa,CAACE,OAAO,IAAI,GAAG;IAC/D,IAAIC,iBAAiB,GAAGH,aAAa,IAAIA,aAAa,CAACI,OAAO;IAC9D,IAAIC,SAAS,GAAGP,cAAc,CAACO,SAAS,IAAI,EAAE;IAC9C,IAAIC,QAAQ,GAAGD,SAAS,CAACE,MAAM,GAAGF,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;IAE3D,IAAI,OAAOP,WAAW,KAAK,WAAW,IAAI,CAACb,MAAM,CAACqB,SAAS,EAAE,CAACR,WAAW,CAAC,EAAE;MAC1E,IAAIS,QAAQ,GAAGT,WAAW,CAACU,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;MAC3C,IAAIC,QAAQ,GAAGxB,MAAM,CAACyB,YAAY,GAAGzB,MAAM,CAACyB,YAAY,CAACZ,WAAW,CAAC,GAAGb,MAAM,CAACsB,QAAQ,CAAC;MAExF,IAAIE,QAAQ,EAAE;QACZxB,MAAM,CAAC0B,gBAAgB,CAACF,QAAQ,CAAC;MACnC;IACF;IAEAxB,MAAM,CAAC2B,WAAW,CAACd,WAAW,CAAC;IAC/BF,QAAQ,GAAGX,MAAM,CAACW,QAAQ,CAAC,CAACiB,MAAM,CAACb,iBAAiB,IAAI,GAAG,CAAC;IAE5D,IAAIG,QAAQ,CAACW,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAIX,QAAQ,CAACW,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,IAAIX,QAAQ,CAACW,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAIX,QAAQ,CAACW,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;MAC9IX,QAAQ,CAACY,IAAI,CAAC,SAAS,CAAC;IAC1B;IAEA,IAAIZ,QAAQ,CAACW,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;MACrCX,QAAQ,CAACY,IAAI,CAAC,WAAW,CAAC;IAC5B;IAEApB,cAAc,CAACO,SAAS,GAAGC,QAAQ,CAACa,IAAI,CAAC,GAAG,CAAC;EAC/C;EAEA9B,WAAW,CAAC,MAAM,CAAC,CAACG,QAAQ,EAAEC,EAAE,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEG,QAAQ,EAAED,cAAc,CAAC;AAC7E;AAEA,eAAeP,eAAe"},"metadata":{},"sourceType":"module"}