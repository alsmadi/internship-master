{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nimport { getScrollableElement, getScrollbarWidth } from './../../../helpers/dom/element';\nimport { arrayEach } from './../../../helpers/array';\nimport { isKey } from './../../../helpers/unicode';\nimport { isChrome } from './../../../helpers/browser';\nimport EventManager from './../../../eventManager';\nimport Overlay from './overlay/_base';\n/**\n * @class Overlays\n */\n\nvar Overlays = /*#__PURE__*/\nfunction () {\n  /**\n   * @param {Walkontable} wotInstance\n   */\n  function Overlays(wotInstance) {\n    _classCallCheck(this, Overlays);\n\n    /**\n     * Walkontable instance's reference.\n     *\n     * @private\n     * @type {Walkontable}\n     */\n    this.wot = wotInstance;\n    var _this$wot = this.wot,\n      rootDocument = _this$wot.rootDocument,\n      rootWindow = _this$wot.rootWindow,\n      wtTable = _this$wot.wtTable;\n    /**\n     * Sometimes `line-height` might be set to 'normal'. In that case, a default `font-size` should be multiplied by roughly 1.2.\n     * https://developer.mozilla.org/pl/docs/Web/CSS/line-height#Values\n     */\n\n    var BODY_LINE_HEIGHT = parseInt(rootWindow.getComputedStyle(rootDocument.body).lineHeight, 10);\n    var FALLBACK_BODY_LINE_HEIGHT = parseInt(rootWindow.getComputedStyle(rootDocument.body).fontSize, 10) * 1.2; // legacy support\n\n    this.instance = this.wot;\n    this.eventManager = new EventManager(this.wot);\n    this.scrollbarSize = getScrollbarWidth(rootDocument);\n    this.wot.update('scrollbarWidth', this.scrollbarSize);\n    this.wot.update('scrollbarHeight', this.scrollbarSize);\n    var isOverflowHidden = rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden';\n    this.scrollableElement = isOverflowHidden ? wtTable.holder : getScrollableElement(wtTable.TABLE);\n    this.topOverlay = void 0;\n    this.bottomOverlay = void 0;\n    this.leftOverlay = void 0;\n    this.topLeftCornerOverlay = void 0;\n    this.bottomLeftCornerOverlay = void 0;\n    this.prepareOverlays();\n    this.hasScrollbarBottom = false;\n    this.hasScrollbarRight = false;\n    this.destroyed = false;\n    this.keyPressed = false;\n    this.spreaderLastSize = {\n      width: null,\n      height: null\n    };\n    this.verticalScrolling = false;\n    this.horizontalScrolling = false;\n    this.browserLineHeight = BODY_LINE_HEIGHT || FALLBACK_BODY_LINE_HEIGHT;\n    this.registerListeners();\n    this.lastScrollX = rootWindow.scrollX;\n    this.lastScrollY = rootWindow.scrollY;\n  }\n  /**\n   * Prepare overlays based on user settings.\n   *\n   * @returns {Boolean} Returns `true` if changes applied to overlay needs scroll synchronization.\n   */\n\n  _createClass(Overlays, [{\n    key: \"prepareOverlays\",\n    value: function prepareOverlays() {\n      var syncScroll = false;\n      if (this.topOverlay) {\n        syncScroll = this.topOverlay.updateStateOfRendering() || syncScroll;\n      } else {\n        this.topOverlay = Overlay.createOverlay(Overlay.CLONE_TOP, this.wot);\n      }\n      if (!Overlay.hasOverlay(Overlay.CLONE_BOTTOM)) {\n        this.bottomOverlay = {\n          needFullRender: false,\n          updateStateOfRendering: function updateStateOfRendering() {\n            return false;\n          }\n        };\n      }\n      if (!Overlay.hasOverlay(Overlay.CLONE_BOTTOM_LEFT_CORNER)) {\n        this.bottomLeftCornerOverlay = {\n          needFullRender: false,\n          updateStateOfRendering: function updateStateOfRendering() {\n            return false;\n          }\n        };\n      }\n      if (this.bottomOverlay) {\n        syncScroll = this.bottomOverlay.updateStateOfRendering() || syncScroll;\n      } else {\n        this.bottomOverlay = Overlay.createOverlay(Overlay.CLONE_BOTTOM, this.wot);\n      }\n      if (this.leftOverlay) {\n        syncScroll = this.leftOverlay.updateStateOfRendering() || syncScroll;\n      } else {\n        this.leftOverlay = Overlay.createOverlay(Overlay.CLONE_LEFT, this.wot);\n      }\n      if (this.topOverlay.needFullRender && this.leftOverlay.needFullRender) {\n        if (this.topLeftCornerOverlay) {\n          syncScroll = this.topLeftCornerOverlay.updateStateOfRendering() || syncScroll;\n        } else {\n          this.topLeftCornerOverlay = Overlay.createOverlay(Overlay.CLONE_TOP_LEFT_CORNER, this.wot);\n        }\n      }\n      if (this.bottomOverlay.needFullRender && this.leftOverlay.needFullRender) {\n        if (this.bottomLeftCornerOverlay) {\n          syncScroll = this.bottomLeftCornerOverlay.updateStateOfRendering() || syncScroll;\n        } else {\n          this.bottomLeftCornerOverlay = Overlay.createOverlay(Overlay.CLONE_BOTTOM_LEFT_CORNER, this.wot);\n        }\n      }\n      if (this.wot.getSetting('debug') && !this.debug) {\n        this.debug = Overlay.createOverlay(Overlay.CLONE_DEBUG, this.wot);\n      }\n      return syncScroll;\n    }\n    /**\n     * Refresh and redraw table\n     */\n  }, {\n    key: \"refreshAll\",\n    value: function refreshAll() {\n      if (!this.wot.drawn) {\n        return;\n      }\n      if (!this.wot.wtTable.holder.parentNode) {\n        // Walkontable was detached from DOM, but this handler was not removed\n        this.destroy();\n        return;\n      }\n      this.wot.draw(true);\n      if (this.verticalScrolling) {\n        this.leftOverlay.onScroll();\n      }\n      if (this.horizontalScrolling) {\n        this.topOverlay.onScroll();\n      }\n      this.verticalScrolling = false;\n      this.horizontalScrolling = false;\n    }\n    /**\n     * Register all necessary event listeners.\n     */\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this = this;\n      var _this$wot2 = this.wot,\n        rootDocument = _this$wot2.rootDocument,\n        rootWindow = _this$wot2.rootWindow;\n      var topOverlayScrollableElement = this.topOverlay.mainTableScrollableElement;\n      var leftOverlayScrollableElement = this.leftOverlay.mainTableScrollableElement;\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keydown', function (event) {\n        return _this.onKeyDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keyup', function () {\n        return _this.onKeyUp();\n      });\n      this.eventManager.addEventListener(rootDocument, 'visibilitychange', function () {\n        return _this.onKeyUp();\n      });\n      this.eventManager.addEventListener(topOverlayScrollableElement, 'scroll', function (event) {\n        return _this.onTableScroll(event);\n      }, {\n        passive: true\n      });\n      if (topOverlayScrollableElement !== leftOverlayScrollableElement) {\n        this.eventManager.addEventListener(leftOverlayScrollableElement, 'scroll', function (event) {\n          return _this.onTableScroll(event);\n        }, {\n          passive: true\n        });\n      }\n      var isHighPixelRatio = rootWindow.devicePixelRatio && rootWindow.devicePixelRatio > 1;\n      var isScrollOnWindow = this.scrollableElement === rootWindow;\n      var preventWheel = this.wot.wtSettings.getSetting('preventWheel');\n      var wheelEventOptions = {\n        passive: isScrollOnWindow\n      };\n      if (preventWheel || isHighPixelRatio || !isChrome()) {\n        this.eventManager.addEventListener(this.wot.wtTable.wtRootElement, 'wheel', function (event) {\n          return _this.onCloneWheel(event, preventWheel);\n        }, wheelEventOptions);\n      }\n      var overlays = [this.topOverlay, this.bottomOverlay, this.leftOverlay, this.topLeftCornerOverlay, this.bottomLeftCornerOverlay];\n      overlays.forEach(function (overlay) {\n        if (overlay && overlay.needFullRender) {\n          var holder = overlay.clone.wtTable.holder;\n          _this.eventManager.addEventListener(holder, 'wheel', function (event) {\n            return _this.onCloneWheel(event, preventWheel);\n          }, wheelEventOptions);\n        }\n      });\n      var resizeTimeout;\n      this.eventManager.addEventListener(rootWindow, 'resize', function () {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(function () {\n          _this.wot.getSetting('onWindowResize');\n        }, 200);\n      });\n    }\n    /**\n     * Deregister all previously registered listeners.\n     */\n  }, {\n    key: \"deregisterListeners\",\n    value: function deregisterListeners() {\n      this.eventManager.clearEvents(true);\n    }\n    /**\n     * Scroll listener\n     *\n     * @param {Event} event\n     */\n  }, {\n    key: \"onTableScroll\",\n    value: function onTableScroll(event) {\n      // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n      var rootWindow = this.wot.rootWindow;\n      var masterHorizontal = this.leftOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target; // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n\n      if (this.keyPressed) {\n        if (masterVertical !== rootWindow && target !== rootWindow && !event.target.contains(masterVertical) || masterHorizontal !== rootWindow && target !== rootWindow && !event.target.contains(masterHorizontal)) {\n          return;\n        }\n      }\n      this.syncScrollPositions(event);\n    }\n    /**\n     * Wheel listener for cloned overlays.\n     *\n     * @param {Event} event\n     */\n  }, {\n    key: \"onCloneWheel\",\n    value: function onCloneWheel(event, preventDefault) {\n      var rootWindow = this.wot.rootWindow; // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n\n      var masterHorizontal = this.leftOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target; // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n\n      var shouldNotWheelVertically = masterVertical !== rootWindow && target !== rootWindow && !target.contains(masterVertical);\n      var shouldNotWheelHorizontally = masterHorizontal !== rootWindow && target !== rootWindow && !target.contains(masterHorizontal);\n      if (this.keyPressed && (shouldNotWheelVertically || shouldNotWheelHorizontally)) {\n        return;\n      }\n      var isScrollPossible = this.translateMouseWheelToScroll(event);\n      if (preventDefault || this.scrollableElement !== rootWindow && isScrollPossible) {\n        event.preventDefault();\n      }\n    }\n    /**\n     * Key down listener\n     */\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      this.keyPressed = isKey(event.keyCode, 'ARROW_UP|ARROW_RIGHT|ARROW_DOWN|ARROW_LEFT');\n    }\n    /**\n     * Key up listener\n     */\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp() {\n      this.keyPressed = false;\n    }\n    /**\n     * Translate wheel event into scroll event and sync scroll overlays position\n     *\n     * @private\n     * @param {Event} event\n     */\n  }, {\n    key: \"translateMouseWheelToScroll\",\n    value: function translateMouseWheelToScroll(event) {\n      var browserLineHeight = this.browserLineHeight;\n      var deltaY = isNaN(event.deltaY) ? -1 * event.wheelDeltaY : event.deltaY;\n      var deltaX = isNaN(event.deltaX) ? -1 * event.wheelDeltaX : event.deltaX;\n      if (event.deltaMode === 1) {\n        deltaX += deltaX * browserLineHeight;\n        deltaY += deltaY * browserLineHeight;\n      }\n      var isScrollVerticallyPossible = this.scrollVertically(deltaY);\n      var isScrollHorizontallyPossible = this.scrollHorizontally(deltaX);\n      return isScrollVerticallyPossible || isScrollHorizontallyPossible;\n    }\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {Number} delta Relative value to scroll.\n     */\n  }, {\n    key: \"scrollVertically\",\n    value: function scrollVertically(delta) {\n      var previousScroll = this.scrollableElement.scrollTop;\n      this.scrollableElement.scrollTop += delta;\n      return previousScroll !== this.scrollableElement.scrollTop;\n    }\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {Number} delta Relative value to scroll.\n     */\n  }, {\n    key: \"scrollHorizontally\",\n    value: function scrollHorizontally(delta) {\n      var previousScroll = this.scrollableElement.scrollLeft;\n      this.scrollableElement.scrollLeft += delta;\n      return previousScroll !== this.scrollableElement.scrollLeft;\n    }\n    /**\n     * Synchronize scroll position between master table and overlay table.\n     *\n     * @private\n     */\n  }, {\n    key: \"syncScrollPositions\",\n    value: function syncScrollPositions() {\n      if (this.destroyed) {\n        return;\n      }\n      var rootWindow = this.wot.rootWindow;\n      var topHolder = this.topOverlay.clone.wtTable.holder;\n      var leftHolder = this.leftOverlay.clone.wtTable.holder;\n      var _ref = [this.scrollableElement.scrollLeft, this.scrollableElement.scrollTop],\n        scrollLeft = _ref[0],\n        scrollTop = _ref[1];\n      this.horizontalScrolling = topHolder.scrollLeft !== scrollLeft || this.lastScrollX !== rootWindow.scrollX;\n      this.verticalScrolling = leftHolder.scrollTop !== scrollTop || this.lastScrollY !== rootWindow.scrollY;\n      this.lastScrollX = rootWindow.scrollX;\n      this.lastScrollY = rootWindow.scrollY;\n      if (this.horizontalScrolling) {\n        topHolder.scrollLeft = scrollLeft;\n        var bottomHolder = this.bottomOverlay.needFullRender ? this.bottomOverlay.clone.wtTable.holder : null;\n        if (bottomHolder) {\n          bottomHolder.scrollLeft = scrollLeft;\n        }\n      }\n      if (this.verticalScrolling) {\n        leftHolder.scrollTop = scrollTop;\n      }\n      this.refreshAll();\n    }\n    /**\n     * Synchronize overlay scrollbars with the master scrollbar\n     */\n  }, {\n    key: \"syncScrollWithMaster\",\n    value: function syncScrollWithMaster() {\n      var master = this.topOverlay.mainTableScrollableElement;\n      var scrollLeft = master.scrollLeft,\n        scrollTop = master.scrollTop;\n      if (this.topOverlay.needFullRender) {\n        this.topOverlay.clone.wtTable.holder.scrollLeft = scrollLeft;\n      }\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.clone.wtTable.holder.scrollLeft = scrollLeft;\n      }\n      if (this.leftOverlay.needFullRender) {\n        this.leftOverlay.clone.wtTable.holder.scrollTop = scrollTop;\n      }\n    }\n    /**\n     * Update the main scrollable elements for all the overlays.\n     */\n  }, {\n    key: \"updateMainScrollableElements\",\n    value: function updateMainScrollableElements() {\n      this.deregisterListeners();\n      this.leftOverlay.updateMainScrollableElement();\n      this.topOverlay.updateMainScrollableElement();\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.updateMainScrollableElement();\n      }\n      var _this$wot3 = this.wot,\n        rootWindow = _this$wot3.rootWindow,\n        wtTable = _this$wot3.wtTable;\n      if (rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden') {\n        this.scrollableElement = wtTable.holder;\n      } else {\n        this.scrollableElement = getScrollableElement(wtTable.TABLE);\n      }\n      this.registerListeners();\n    }\n    /**\n     *\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.eventManager.destroy();\n      this.topOverlay.destroy();\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.destroy();\n      }\n      this.leftOverlay.destroy();\n      if (this.topLeftCornerOverlay) {\n        this.topLeftCornerOverlay.destroy();\n      }\n      if (this.bottomLeftCornerOverlay && this.bottomLeftCornerOverlay.clone) {\n        this.bottomLeftCornerOverlay.destroy();\n      }\n      if (this.debug) {\n        this.debug.destroy();\n      }\n      this.destroyed = true;\n    }\n    /**\n     * @param {Boolean} [fastDraw=false]\n     */\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (this.topOverlay.areElementSizesAdjusted && this.leftOverlay.areElementSizesAdjusted) {\n        var container = this.wot.wtTable.wtRootElement.parentNode || this.wot.wtTable.wtRootElement;\n        var width = container.clientWidth;\n        var height = container.clientHeight;\n        if (width !== this.spreaderLastSize.width || height !== this.spreaderLastSize.height) {\n          this.spreaderLastSize.width = width;\n          this.spreaderLastSize.height = height;\n          this.adjustElementsSize();\n        }\n      }\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.refresh(fastDraw);\n      }\n      this.leftOverlay.refresh(fastDraw);\n      this.topOverlay.refresh(fastDraw);\n      if (this.topLeftCornerOverlay) {\n        this.topLeftCornerOverlay.refresh(fastDraw);\n      }\n      if (this.bottomLeftCornerOverlay && this.bottomLeftCornerOverlay.clone) {\n        this.bottomLeftCornerOverlay.refresh(fastDraw);\n      }\n      if (this.debug) {\n        this.debug.refresh(fastDraw);\n      }\n    }\n    /**\n     * Adjust overlays elements size and master table size\n     *\n     * @param {Boolean} [force=false]\n     */\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _this$wot4 = this.wot,\n        wtViewport = _this$wot4.wtViewport,\n        wtTable = _this$wot4.wtTable;\n      var totalColumns = this.wot.getSetting('totalColumns');\n      var totalRows = this.wot.getSetting('totalRows');\n      var headerRowSize = wtViewport.getRowHeaderWidth();\n      var headerColumnSize = wtViewport.getColumnHeaderHeight();\n      var hiderStyle = wtTable.hider.style;\n      hiderStyle.width = \"\".concat(headerRowSize + this.leftOverlay.sumCellSizes(0, totalColumns), \"px\");\n      hiderStyle.height = \"\".concat(headerColumnSize + this.topOverlay.sumCellSizes(0, totalRows) + 1, \"px\");\n      if (this.scrollbarSize > 0) {\n        var _wtTable$wtRootElemen = wtTable.wtRootElement,\n          rootElemScrollHeight = _wtTable$wtRootElemen.scrollHeight,\n          rootElemScrollWidth = _wtTable$wtRootElemen.scrollWidth;\n        var _wtTable$holder = wtTable.holder,\n          holderScrollHeight = _wtTable$holder.scrollHeight,\n          holderScrollWidth = _wtTable$holder.scrollWidth;\n        this.hasScrollbarRight = rootElemScrollHeight < holderScrollHeight;\n        this.hasScrollbarBottom = rootElemScrollWidth < holderScrollWidth;\n        if (this.hasScrollbarRight && wtTable.hider.scrollWidth + this.scrollbarSize > rootElemScrollWidth) {\n          this.hasScrollbarBottom = true;\n        } else if (this.hasScrollbarBottom && wtTable.hider.scrollHeight + this.scrollbarSize > rootElemScrollHeight) {\n          this.hasScrollbarRight = true;\n        }\n      }\n      this.topOverlay.adjustElementsSize(force);\n      this.leftOverlay.adjustElementsSize(force);\n      this.bottomOverlay.adjustElementsSize(force);\n    }\n    /**\n     *\n     */\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      var wtTable = this.wot.wtTable;\n      if (!wtTable.isVisible()) {\n        return;\n      }\n      if (!this.topOverlay.areElementSizesAdjusted || !this.leftOverlay.areElementSizesAdjusted) {\n        this.adjustElementsSize();\n      }\n      this.topOverlay.applyToDOM();\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.applyToDOM();\n      }\n      this.leftOverlay.applyToDOM();\n    }\n    /**\n     * Get the parent overlay of the provided element.\n     *\n     * @param {HTMLElement} element\n     * @returns {Object|null}\n     */\n  }, {\n    key: \"getParentOverlay\",\n    value: function getParentOverlay(element) {\n      if (!element) {\n        return null;\n      }\n      var overlays = [this.topOverlay, this.leftOverlay, this.bottomOverlay, this.topLeftCornerOverlay, this.bottomLeftCornerOverlay];\n      var result = null;\n      arrayEach(overlays, function (elem) {\n        if (!elem) {\n          return;\n        }\n        if (elem.clone && elem.clone.wtTable.TABLE.contains(element)) {\n          result = elem.clone;\n        }\n      });\n      return result;\n    }\n  }]);\n  return Overlays;\n}();\nexport default Overlays;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","getScrollableElement","getScrollbarWidth","arrayEach","isKey","isChrome","EventManager","Overlay","Overlays","wotInstance","wot","_this$wot","rootDocument","rootWindow","wtTable","BODY_LINE_HEIGHT","parseInt","getComputedStyle","body","lineHeight","FALLBACK_BODY_LINE_HEIGHT","fontSize","eventManager","scrollbarSize","update","isOverflowHidden","wtRootElement","parentNode","getPropertyValue","scrollableElement","holder","TABLE","topOverlay","bottomOverlay","leftOverlay","topLeftCornerOverlay","bottomLeftCornerOverlay","prepareOverlays","hasScrollbarBottom","hasScrollbarRight","destroyed","keyPressed","spreaderLastSize","width","height","verticalScrolling","horizontalScrolling","browserLineHeight","registerListeners","lastScrollX","scrollX","lastScrollY","scrollY","value","syncScroll","updateStateOfRendering","createOverlay","CLONE_TOP","hasOverlay","CLONE_BOTTOM","needFullRender","CLONE_BOTTOM_LEFT_CORNER","CLONE_LEFT","CLONE_TOP_LEFT_CORNER","getSetting","debug","CLONE_DEBUG","refreshAll","drawn","destroy","draw","onScroll","_this","_this$wot2","topOverlayScrollableElement","mainTableScrollableElement","leftOverlayScrollableElement","addEventListener","documentElement","event","onKeyDown","onKeyUp","onTableScroll","passive","isHighPixelRatio","devicePixelRatio","isScrollOnWindow","preventWheel","wtSettings","wheelEventOptions","onCloneWheel","overlays","forEach","overlay","clone","resizeTimeout","clearTimeout","setTimeout","deregisterListeners","clearEvents","masterHorizontal","masterVertical","contains","syncScrollPositions","preventDefault","shouldNotWheelVertically","shouldNotWheelHorizontally","isScrollPossible","translateMouseWheelToScroll","keyCode","deltaY","isNaN","wheelDeltaY","deltaX","wheelDeltaX","deltaMode","isScrollVerticallyPossible","scrollVertically","isScrollHorizontallyPossible","scrollHorizontally","delta","previousScroll","scrollTop","scrollLeft","topHolder","leftHolder","_ref","bottomHolder","syncScrollWithMaster","master","updateMainScrollableElements","updateMainScrollableElement","_this$wot3","refresh","fastDraw","arguments","undefined","areElementSizesAdjusted","container","clientWidth","clientHeight","adjustElementsSize","force","_this$wot4","wtViewport","totalColumns","totalRows","headerRowSize","getRowHeaderWidth","headerColumnSize","getColumnHeaderHeight","hiderStyle","hider","style","concat","sumCellSizes","_wtTable$wtRootElemen","rootElemScrollHeight","scrollHeight","rootElemScrollWidth","scrollWidth","_wtTable$holder","holderScrollHeight","holderScrollWidth","applyToDOM","isVisible","getParentOverlay","element","result","elem"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/3rdparty/walkontable/src/overlays.js"],"sourcesContent":["import \"core-js/modules/es.array.for-each\";\nimport \"core-js/modules/web.dom-collections.for-each\";\nimport \"core-js/modules/web.timers\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { getScrollableElement, getScrollbarWidth } from './../../../helpers/dom/element';\nimport { arrayEach } from './../../../helpers/array';\nimport { isKey } from './../../../helpers/unicode';\nimport { isChrome } from './../../../helpers/browser';\nimport EventManager from './../../../eventManager';\nimport Overlay from './overlay/_base';\n/**\n * @class Overlays\n */\n\nvar Overlays =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {Walkontable} wotInstance\n   */\n  function Overlays(wotInstance) {\n    _classCallCheck(this, Overlays);\n\n    /**\n     * Walkontable instance's reference.\n     *\n     * @private\n     * @type {Walkontable}\n     */\n    this.wot = wotInstance;\n    var _this$wot = this.wot,\n        rootDocument = _this$wot.rootDocument,\n        rootWindow = _this$wot.rootWindow,\n        wtTable = _this$wot.wtTable;\n    /**\n     * Sometimes `line-height` might be set to 'normal'. In that case, a default `font-size` should be multiplied by roughly 1.2.\n     * https://developer.mozilla.org/pl/docs/Web/CSS/line-height#Values\n     */\n\n    var BODY_LINE_HEIGHT = parseInt(rootWindow.getComputedStyle(rootDocument.body).lineHeight, 10);\n    var FALLBACK_BODY_LINE_HEIGHT = parseInt(rootWindow.getComputedStyle(rootDocument.body).fontSize, 10) * 1.2; // legacy support\n\n    this.instance = this.wot;\n    this.eventManager = new EventManager(this.wot);\n    this.scrollbarSize = getScrollbarWidth(rootDocument);\n    this.wot.update('scrollbarWidth', this.scrollbarSize);\n    this.wot.update('scrollbarHeight', this.scrollbarSize);\n    var isOverflowHidden = rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden';\n    this.scrollableElement = isOverflowHidden ? wtTable.holder : getScrollableElement(wtTable.TABLE);\n    this.topOverlay = void 0;\n    this.bottomOverlay = void 0;\n    this.leftOverlay = void 0;\n    this.topLeftCornerOverlay = void 0;\n    this.bottomLeftCornerOverlay = void 0;\n    this.prepareOverlays();\n    this.hasScrollbarBottom = false;\n    this.hasScrollbarRight = false;\n    this.destroyed = false;\n    this.keyPressed = false;\n    this.spreaderLastSize = {\n      width: null,\n      height: null\n    };\n    this.verticalScrolling = false;\n    this.horizontalScrolling = false;\n    this.browserLineHeight = BODY_LINE_HEIGHT || FALLBACK_BODY_LINE_HEIGHT;\n    this.registerListeners();\n    this.lastScrollX = rootWindow.scrollX;\n    this.lastScrollY = rootWindow.scrollY;\n  }\n  /**\n   * Prepare overlays based on user settings.\n   *\n   * @returns {Boolean} Returns `true` if changes applied to overlay needs scroll synchronization.\n   */\n\n\n  _createClass(Overlays, [{\n    key: \"prepareOverlays\",\n    value: function prepareOverlays() {\n      var syncScroll = false;\n\n      if (this.topOverlay) {\n        syncScroll = this.topOverlay.updateStateOfRendering() || syncScroll;\n      } else {\n        this.topOverlay = Overlay.createOverlay(Overlay.CLONE_TOP, this.wot);\n      }\n\n      if (!Overlay.hasOverlay(Overlay.CLONE_BOTTOM)) {\n        this.bottomOverlay = {\n          needFullRender: false,\n          updateStateOfRendering: function updateStateOfRendering() {\n            return false;\n          }\n        };\n      }\n\n      if (!Overlay.hasOverlay(Overlay.CLONE_BOTTOM_LEFT_CORNER)) {\n        this.bottomLeftCornerOverlay = {\n          needFullRender: false,\n          updateStateOfRendering: function updateStateOfRendering() {\n            return false;\n          }\n        };\n      }\n\n      if (this.bottomOverlay) {\n        syncScroll = this.bottomOverlay.updateStateOfRendering() || syncScroll;\n      } else {\n        this.bottomOverlay = Overlay.createOverlay(Overlay.CLONE_BOTTOM, this.wot);\n      }\n\n      if (this.leftOverlay) {\n        syncScroll = this.leftOverlay.updateStateOfRendering() || syncScroll;\n      } else {\n        this.leftOverlay = Overlay.createOverlay(Overlay.CLONE_LEFT, this.wot);\n      }\n\n      if (this.topOverlay.needFullRender && this.leftOverlay.needFullRender) {\n        if (this.topLeftCornerOverlay) {\n          syncScroll = this.topLeftCornerOverlay.updateStateOfRendering() || syncScroll;\n        } else {\n          this.topLeftCornerOverlay = Overlay.createOverlay(Overlay.CLONE_TOP_LEFT_CORNER, this.wot);\n        }\n      }\n\n      if (this.bottomOverlay.needFullRender && this.leftOverlay.needFullRender) {\n        if (this.bottomLeftCornerOverlay) {\n          syncScroll = this.bottomLeftCornerOverlay.updateStateOfRendering() || syncScroll;\n        } else {\n          this.bottomLeftCornerOverlay = Overlay.createOverlay(Overlay.CLONE_BOTTOM_LEFT_CORNER, this.wot);\n        }\n      }\n\n      if (this.wot.getSetting('debug') && !this.debug) {\n        this.debug = Overlay.createOverlay(Overlay.CLONE_DEBUG, this.wot);\n      }\n\n      return syncScroll;\n    }\n    /**\n     * Refresh and redraw table\n     */\n\n  }, {\n    key: \"refreshAll\",\n    value: function refreshAll() {\n      if (!this.wot.drawn) {\n        return;\n      }\n\n      if (!this.wot.wtTable.holder.parentNode) {\n        // Walkontable was detached from DOM, but this handler was not removed\n        this.destroy();\n        return;\n      }\n\n      this.wot.draw(true);\n\n      if (this.verticalScrolling) {\n        this.leftOverlay.onScroll();\n      }\n\n      if (this.horizontalScrolling) {\n        this.topOverlay.onScroll();\n      }\n\n      this.verticalScrolling = false;\n      this.horizontalScrolling = false;\n    }\n    /**\n     * Register all necessary event listeners.\n     */\n\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this = this;\n\n      var _this$wot2 = this.wot,\n          rootDocument = _this$wot2.rootDocument,\n          rootWindow = _this$wot2.rootWindow;\n      var topOverlayScrollableElement = this.topOverlay.mainTableScrollableElement;\n      var leftOverlayScrollableElement = this.leftOverlay.mainTableScrollableElement;\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keydown', function (event) {\n        return _this.onKeyDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument.documentElement, 'keyup', function () {\n        return _this.onKeyUp();\n      });\n      this.eventManager.addEventListener(rootDocument, 'visibilitychange', function () {\n        return _this.onKeyUp();\n      });\n      this.eventManager.addEventListener(topOverlayScrollableElement, 'scroll', function (event) {\n        return _this.onTableScroll(event);\n      }, {\n        passive: true\n      });\n\n      if (topOverlayScrollableElement !== leftOverlayScrollableElement) {\n        this.eventManager.addEventListener(leftOverlayScrollableElement, 'scroll', function (event) {\n          return _this.onTableScroll(event);\n        }, {\n          passive: true\n        });\n      }\n\n      var isHighPixelRatio = rootWindow.devicePixelRatio && rootWindow.devicePixelRatio > 1;\n      var isScrollOnWindow = this.scrollableElement === rootWindow;\n      var preventWheel = this.wot.wtSettings.getSetting('preventWheel');\n      var wheelEventOptions = {\n        passive: isScrollOnWindow\n      };\n\n      if (preventWheel || isHighPixelRatio || !isChrome()) {\n        this.eventManager.addEventListener(this.wot.wtTable.wtRootElement, 'wheel', function (event) {\n          return _this.onCloneWheel(event, preventWheel);\n        }, wheelEventOptions);\n      }\n\n      var overlays = [this.topOverlay, this.bottomOverlay, this.leftOverlay, this.topLeftCornerOverlay, this.bottomLeftCornerOverlay];\n      overlays.forEach(function (overlay) {\n        if (overlay && overlay.needFullRender) {\n          var holder = overlay.clone.wtTable.holder;\n\n          _this.eventManager.addEventListener(holder, 'wheel', function (event) {\n            return _this.onCloneWheel(event, preventWheel);\n          }, wheelEventOptions);\n        }\n      });\n      var resizeTimeout;\n      this.eventManager.addEventListener(rootWindow, 'resize', function () {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = setTimeout(function () {\n          _this.wot.getSetting('onWindowResize');\n        }, 200);\n      });\n    }\n    /**\n     * Deregister all previously registered listeners.\n     */\n\n  }, {\n    key: \"deregisterListeners\",\n    value: function deregisterListeners() {\n      this.eventManager.clearEvents(true);\n    }\n    /**\n     * Scroll listener\n     *\n     * @param {Event} event\n     */\n\n  }, {\n    key: \"onTableScroll\",\n    value: function onTableScroll(event) {\n      // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n      var rootWindow = this.wot.rootWindow;\n      var masterHorizontal = this.leftOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target; // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n\n      if (this.keyPressed) {\n        if (masterVertical !== rootWindow && target !== rootWindow && !event.target.contains(masterVertical) || masterHorizontal !== rootWindow && target !== rootWindow && !event.target.contains(masterHorizontal)) {\n          return;\n        }\n      }\n\n      this.syncScrollPositions(event);\n    }\n    /**\n     * Wheel listener for cloned overlays.\n     *\n     * @param {Event} event\n     */\n\n  }, {\n    key: \"onCloneWheel\",\n    value: function onCloneWheel(event, preventDefault) {\n      var rootWindow = this.wot.rootWindow; // There was if statement which controlled flow of this function. It avoided the execution of the next lines\n      // on mobile devices. It was changed. Broader description of this case is included within issue #4856.\n\n      var masterHorizontal = this.leftOverlay.mainTableScrollableElement;\n      var masterVertical = this.topOverlay.mainTableScrollableElement;\n      var target = event.target; // For key press, sync only master -> overlay position because while pressing Walkontable.render is triggered\n      // by hot.refreshBorder\n\n      var shouldNotWheelVertically = masterVertical !== rootWindow && target !== rootWindow && !target.contains(masterVertical);\n      var shouldNotWheelHorizontally = masterHorizontal !== rootWindow && target !== rootWindow && !target.contains(masterHorizontal);\n\n      if (this.keyPressed && (shouldNotWheelVertically || shouldNotWheelHorizontally)) {\n        return;\n      }\n\n      var isScrollPossible = this.translateMouseWheelToScroll(event);\n\n      if (preventDefault || this.scrollableElement !== rootWindow && isScrollPossible) {\n        event.preventDefault();\n      }\n    }\n    /**\n     * Key down listener\n     */\n\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      this.keyPressed = isKey(event.keyCode, 'ARROW_UP|ARROW_RIGHT|ARROW_DOWN|ARROW_LEFT');\n    }\n    /**\n     * Key up listener\n     */\n\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp() {\n      this.keyPressed = false;\n    }\n    /**\n     * Translate wheel event into scroll event and sync scroll overlays position\n     *\n     * @private\n     * @param {Event} event\n     */\n\n  }, {\n    key: \"translateMouseWheelToScroll\",\n    value: function translateMouseWheelToScroll(event) {\n      var browserLineHeight = this.browserLineHeight;\n      var deltaY = isNaN(event.deltaY) ? -1 * event.wheelDeltaY : event.deltaY;\n      var deltaX = isNaN(event.deltaX) ? -1 * event.wheelDeltaX : event.deltaX;\n\n      if (event.deltaMode === 1) {\n        deltaX += deltaX * browserLineHeight;\n        deltaY += deltaY * browserLineHeight;\n      }\n\n      var isScrollVerticallyPossible = this.scrollVertically(deltaY);\n      var isScrollHorizontallyPossible = this.scrollHorizontally(deltaX);\n      return isScrollVerticallyPossible || isScrollHorizontallyPossible;\n    }\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {Number} delta Relative value to scroll.\n     */\n\n  }, {\n    key: \"scrollVertically\",\n    value: function scrollVertically(delta) {\n      var previousScroll = this.scrollableElement.scrollTop;\n      this.scrollableElement.scrollTop += delta;\n      return previousScroll !== this.scrollableElement.scrollTop;\n    }\n    /**\n     * Scrolls main scrollable element horizontally.\n     *\n     * @param {Number} delta Relative value to scroll.\n     */\n\n  }, {\n    key: \"scrollHorizontally\",\n    value: function scrollHorizontally(delta) {\n      var previousScroll = this.scrollableElement.scrollLeft;\n      this.scrollableElement.scrollLeft += delta;\n      return previousScroll !== this.scrollableElement.scrollLeft;\n    }\n    /**\n     * Synchronize scroll position between master table and overlay table.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"syncScrollPositions\",\n    value: function syncScrollPositions() {\n      if (this.destroyed) {\n        return;\n      }\n\n      var rootWindow = this.wot.rootWindow;\n      var topHolder = this.topOverlay.clone.wtTable.holder;\n      var leftHolder = this.leftOverlay.clone.wtTable.holder;\n      var _ref = [this.scrollableElement.scrollLeft, this.scrollableElement.scrollTop],\n          scrollLeft = _ref[0],\n          scrollTop = _ref[1];\n      this.horizontalScrolling = topHolder.scrollLeft !== scrollLeft || this.lastScrollX !== rootWindow.scrollX;\n      this.verticalScrolling = leftHolder.scrollTop !== scrollTop || this.lastScrollY !== rootWindow.scrollY;\n      this.lastScrollX = rootWindow.scrollX;\n      this.lastScrollY = rootWindow.scrollY;\n\n      if (this.horizontalScrolling) {\n        topHolder.scrollLeft = scrollLeft;\n        var bottomHolder = this.bottomOverlay.needFullRender ? this.bottomOverlay.clone.wtTable.holder : null;\n\n        if (bottomHolder) {\n          bottomHolder.scrollLeft = scrollLeft;\n        }\n      }\n\n      if (this.verticalScrolling) {\n        leftHolder.scrollTop = scrollTop;\n      }\n\n      this.refreshAll();\n    }\n    /**\n     * Synchronize overlay scrollbars with the master scrollbar\n     */\n\n  }, {\n    key: \"syncScrollWithMaster\",\n    value: function syncScrollWithMaster() {\n      var master = this.topOverlay.mainTableScrollableElement;\n      var scrollLeft = master.scrollLeft,\n          scrollTop = master.scrollTop;\n\n      if (this.topOverlay.needFullRender) {\n        this.topOverlay.clone.wtTable.holder.scrollLeft = scrollLeft;\n      }\n\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.clone.wtTable.holder.scrollLeft = scrollLeft;\n      }\n\n      if (this.leftOverlay.needFullRender) {\n        this.leftOverlay.clone.wtTable.holder.scrollTop = scrollTop;\n      }\n    }\n    /**\n     * Update the main scrollable elements for all the overlays.\n     */\n\n  }, {\n    key: \"updateMainScrollableElements\",\n    value: function updateMainScrollableElements() {\n      this.deregisterListeners();\n      this.leftOverlay.updateMainScrollableElement();\n      this.topOverlay.updateMainScrollableElement();\n\n      if (this.bottomOverlay.needFullRender) {\n        this.bottomOverlay.updateMainScrollableElement();\n      }\n\n      var _this$wot3 = this.wot,\n          rootWindow = _this$wot3.rootWindow,\n          wtTable = _this$wot3.wtTable;\n\n      if (rootWindow.getComputedStyle(wtTable.wtRootElement.parentNode).getPropertyValue('overflow') === 'hidden') {\n        this.scrollableElement = wtTable.holder;\n      } else {\n        this.scrollableElement = getScrollableElement(wtTable.TABLE);\n      }\n\n      this.registerListeners();\n    }\n    /**\n     *\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.eventManager.destroy();\n      this.topOverlay.destroy();\n\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.destroy();\n      }\n\n      this.leftOverlay.destroy();\n\n      if (this.topLeftCornerOverlay) {\n        this.topLeftCornerOverlay.destroy();\n      }\n\n      if (this.bottomLeftCornerOverlay && this.bottomLeftCornerOverlay.clone) {\n        this.bottomLeftCornerOverlay.destroy();\n      }\n\n      if (this.debug) {\n        this.debug.destroy();\n      }\n\n      this.destroyed = true;\n    }\n    /**\n     * @param {Boolean} [fastDraw=false]\n     */\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var fastDraw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.topOverlay.areElementSizesAdjusted && this.leftOverlay.areElementSizesAdjusted) {\n        var container = this.wot.wtTable.wtRootElement.parentNode || this.wot.wtTable.wtRootElement;\n        var width = container.clientWidth;\n        var height = container.clientHeight;\n\n        if (width !== this.spreaderLastSize.width || height !== this.spreaderLastSize.height) {\n          this.spreaderLastSize.width = width;\n          this.spreaderLastSize.height = height;\n          this.adjustElementsSize();\n        }\n      }\n\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.refresh(fastDraw);\n      }\n\n      this.leftOverlay.refresh(fastDraw);\n      this.topOverlay.refresh(fastDraw);\n\n      if (this.topLeftCornerOverlay) {\n        this.topLeftCornerOverlay.refresh(fastDraw);\n      }\n\n      if (this.bottomLeftCornerOverlay && this.bottomLeftCornerOverlay.clone) {\n        this.bottomLeftCornerOverlay.refresh(fastDraw);\n      }\n\n      if (this.debug) {\n        this.debug.refresh(fastDraw);\n      }\n    }\n    /**\n     * Adjust overlays elements size and master table size\n     *\n     * @param {Boolean} [force=false]\n     */\n\n  }, {\n    key: \"adjustElementsSize\",\n    value: function adjustElementsSize() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _this$wot4 = this.wot,\n          wtViewport = _this$wot4.wtViewport,\n          wtTable = _this$wot4.wtTable;\n      var totalColumns = this.wot.getSetting('totalColumns');\n      var totalRows = this.wot.getSetting('totalRows');\n      var headerRowSize = wtViewport.getRowHeaderWidth();\n      var headerColumnSize = wtViewport.getColumnHeaderHeight();\n      var hiderStyle = wtTable.hider.style;\n      hiderStyle.width = \"\".concat(headerRowSize + this.leftOverlay.sumCellSizes(0, totalColumns), \"px\");\n      hiderStyle.height = \"\".concat(headerColumnSize + this.topOverlay.sumCellSizes(0, totalRows) + 1, \"px\");\n\n      if (this.scrollbarSize > 0) {\n        var _wtTable$wtRootElemen = wtTable.wtRootElement,\n            rootElemScrollHeight = _wtTable$wtRootElemen.scrollHeight,\n            rootElemScrollWidth = _wtTable$wtRootElemen.scrollWidth;\n        var _wtTable$holder = wtTable.holder,\n            holderScrollHeight = _wtTable$holder.scrollHeight,\n            holderScrollWidth = _wtTable$holder.scrollWidth;\n        this.hasScrollbarRight = rootElemScrollHeight < holderScrollHeight;\n        this.hasScrollbarBottom = rootElemScrollWidth < holderScrollWidth;\n\n        if (this.hasScrollbarRight && wtTable.hider.scrollWidth + this.scrollbarSize > rootElemScrollWidth) {\n          this.hasScrollbarBottom = true;\n        } else if (this.hasScrollbarBottom && wtTable.hider.scrollHeight + this.scrollbarSize > rootElemScrollHeight) {\n          this.hasScrollbarRight = true;\n        }\n      }\n\n      this.topOverlay.adjustElementsSize(force);\n      this.leftOverlay.adjustElementsSize(force);\n      this.bottomOverlay.adjustElementsSize(force);\n    }\n    /**\n     *\n     */\n\n  }, {\n    key: \"applyToDOM\",\n    value: function applyToDOM() {\n      var wtTable = this.wot.wtTable;\n\n      if (!wtTable.isVisible()) {\n        return;\n      }\n\n      if (!this.topOverlay.areElementSizesAdjusted || !this.leftOverlay.areElementSizesAdjusted) {\n        this.adjustElementsSize();\n      }\n\n      this.topOverlay.applyToDOM();\n\n      if (this.bottomOverlay.clone) {\n        this.bottomOverlay.applyToDOM();\n      }\n\n      this.leftOverlay.applyToDOM();\n    }\n    /**\n     * Get the parent overlay of the provided element.\n     *\n     * @param {HTMLElement} element\n     * @returns {Object|null}\n     */\n\n  }, {\n    key: \"getParentOverlay\",\n    value: function getParentOverlay(element) {\n      if (!element) {\n        return null;\n      }\n\n      var overlays = [this.topOverlay, this.leftOverlay, this.bottomOverlay, this.topLeftCornerOverlay, this.bottomLeftCornerOverlay];\n      var result = null;\n      arrayEach(overlays, function (elem) {\n        if (!elem) {\n          return;\n        }\n\n        if (elem.clone && elem.clone.wtTable.TABLE.contains(element)) {\n          result = elem.clone;\n        }\n      });\n      return result;\n    }\n  }]);\n\n  return Overlays;\n}();\n\nexport default Overlays;"],"mappings":"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"},"metadata":{},"sourceType":"module"}