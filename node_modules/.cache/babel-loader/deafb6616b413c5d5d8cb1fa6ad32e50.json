{"ast":null,"code":"import \"core-js/modules/es.string.trim\";\nimport \"core-js/modules/web.dom-collections.for-each\";\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nimport { addClass, outerHeight, outerWidth } from './../helpers/dom/element';\nimport { arrayEach } from './../helpers/array';\n/**\n * @class GhostTable\n * @util\n */\n\nvar GhostTable = /*#__PURE__*/\nfunction () {\n  function GhostTable(hotInstance) {\n    _classCallCheck(this, GhostTable);\n\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    this.hot = hotInstance;\n    /**\n     * Container element where every table will be injected.\n     *\n     * @type {HTMLElement|null}\n     */\n\n    this.container = null;\n    /**\n     * Flag which determine is table was injected to DOM.\n     *\n     * @type {Boolean}\n     */\n\n    this.injected = false;\n    /**\n     * Added rows collection.\n     *\n     * @type {Array}\n     */\n\n    this.rows = [];\n    /**\n     * Added columns collection.\n     *\n     * @type {Array}\n     */\n\n    this.columns = [];\n    /**\n     * Samples prepared for calculations.\n     *\n     * @type {Map}\n     * @default {null}\n     */\n\n    this.samples = null;\n    /**\n     * Ghost table settings.\n     *\n     * @type {Object}\n     * @default {Object}\n     */\n\n    this.settings = {\n      useHeaders: true\n    };\n  }\n  /**\n   * Add row.\n   *\n   * @param {Number} row Row index.\n   * @param {Map} samples Samples Map object.\n   */\n\n  _createClass(GhostTable, [{\n    key: \"addRow\",\n    value: function addRow(row, samples) {\n      if (this.columns.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n      if (!this.rows.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n      var rowObject = {\n        row: row\n      };\n      this.rows.push(rowObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n      this.table.colGroup.appendChild(this.createColGroupsCol());\n      this.table.tr.appendChild(this.createRow(row));\n      this.container.container.appendChild(this.table.fragment);\n      rowObject.table = this.table.table;\n    }\n    /**\n     * Add a row consisting of the column headers.\n     */\n  }, {\n    key: \"addColumnHeadersRow\",\n    value: function addColumnHeadersRow(samples) {\n      var colHeader = this.hot.getColHeader(0);\n      if (colHeader !== null && colHeader !== void 0) {\n        var rowObject = {\n          row: -1\n        };\n        this.rows.push(rowObject);\n        this.container = this.createContainer(this.hot.rootElement.className);\n        this.samples = samples;\n        this.table = this.createTable(this.hot.table.className);\n        this.table.colGroup.appendChild(this.createColGroupsCol());\n        this.table.tHead.appendChild(this.createColumnHeadersRow());\n        this.container.container.appendChild(this.table.fragment);\n        rowObject.table = this.table.table;\n      }\n    }\n    /**\n     * Add column.\n     *\n     * @param {Number} column Column index.\n     * @param {Map} samples Samples Map object.\n     */\n  }, {\n    key: \"addColumn\",\n    value: function addColumn(column, samples) {\n      if (this.rows.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n      if (!this.columns.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n      var columnObject = {\n        col: column\n      };\n      this.columns.push(columnObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n      if (this.getSetting('useHeaders') && this.hot.getColHeader(column) !== null) {\n        this.hot.view.appendColHeader(column, this.table.th);\n      }\n      this.table.tBody.appendChild(this.createCol(column));\n      this.container.container.appendChild(this.table.fragment);\n      columnObject.table = this.table.table;\n    }\n    /**\n     * Get calculated heights.\n     *\n     * @param {Function} callback Callback which will be fired for each calculated row.\n     */\n  }, {\n    key: \"getHeights\",\n    value: function getHeights(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n      arrayEach(this.rows, function (row) {\n        // -1 <- reduce border-top from table\n        callback(row.row, outerHeight(row.table) - 1);\n      });\n    }\n    /**\n     * Get calculated widths.\n     *\n     * @param {Function} callback Callback which will be fired for each calculated column.\n     */\n  }, {\n    key: \"getWidths\",\n    value: function getWidths(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n      arrayEach(this.columns, function (column) {\n        callback(column.col, outerWidth(column.table));\n      });\n    }\n    /**\n     * Set the Ghost Table settings to the provided object.\n     *\n     * @param {Object} settings New Ghost Table Settings\n     */\n  }, {\n    key: \"setSettings\",\n    value: function setSettings(settings) {\n      this.settings = settings;\n    }\n    /**\n     * Set a single setting of the Ghost Table.\n     *\n     * @param {String} name Setting name.\n     * @param {*} value Setting value.\n     */\n  }, {\n    key: \"setSetting\",\n    value: function setSetting(name, value) {\n      if (!this.settings) {\n        this.settings = {};\n      }\n      this.settings[name] = value;\n    }\n    /**\n     * Get the Ghost Table settings.\n     *\n     * @returns {Object|null}\n     */\n  }, {\n    key: \"getSettings\",\n    value: function getSettings() {\n      return this.settings;\n    }\n    /**\n     * Get a single Ghost Table setting.\n     *\n     * @param {String} name\n     * @returns {Boolean|null}\n     */\n  }, {\n    key: \"getSetting\",\n    value: function getSetting(name) {\n      if (this.settings) {\n        return this.settings[name];\n      }\n      return null;\n    }\n    /**\n     * Create colgroup col elements.\n     *\n     * @returns {DocumentFragment}\n     */\n  }, {\n    key: \"createColGroupsCol\",\n    value: function createColGroupsCol() {\n      var _this = this;\n      var fragment = this.hot.rootDocument.createDocumentFragment();\n      if (this.hot.hasRowHeaders()) {\n        fragment.appendChild(this.createColElement(-1));\n      }\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          fragment.appendChild(_this.createColElement(string.col));\n        });\n      });\n      return fragment;\n    }\n    /**\n     * Create table row element.\n     *\n     * @param {Number} row Row index.\n     * @returns {DocumentFragment} Returns created table row elements.\n     */\n  }, {\n    key: \"createRow\",\n    value: function createRow(row) {\n      var _this2 = this;\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var th = rootDocument.createElement('th');\n      if (this.hot.hasRowHeaders()) {\n        this.hot.view.appendRowHeader(row, th);\n        fragment.appendChild(th);\n      }\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n          var cellProperties = _this2.hot.getCellMeta(row, column);\n          cellProperties.col = column;\n          cellProperties.row = row;\n          var renderer = _this2.hot.getCellRenderer(cellProperties);\n          var td = rootDocument.createElement('td'); // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n\n          td.setAttribute('ghost-table', 1);\n          renderer(_this2.hot, td, row, column, _this2.hot.colToProp(column), string.value, cellProperties);\n          fragment.appendChild(td);\n        });\n      });\n      return fragment;\n    }\n  }, {\n    key: \"createColumnHeadersRow\",\n    value: function createColumnHeadersRow() {\n      var _this3 = this;\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      if (this.hot.hasRowHeaders()) {\n        var th = rootDocument.createElement('th');\n        this.hot.view.appendColHeader(-1, th);\n        fragment.appendChild(th);\n      }\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n          var th = rootDocument.createElement('th');\n          _this3.hot.view.appendColHeader(column, th);\n          fragment.appendChild(th);\n        });\n      });\n      return fragment;\n    }\n    /**\n     * Create table column elements.\n     *\n     * @param {Number} column Column index.\n     * @returns {DocumentFragment} Returns created column table column elements.\n     */\n  }, {\n    key: \"createCol\",\n    value: function createCol(column) {\n      var _this4 = this;\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var row = string.row;\n          var cellProperties = _this4.hot.getCellMeta(row, column);\n          cellProperties.col = column;\n          cellProperties.row = row;\n          var renderer = _this4.hot.getCellRenderer(cellProperties);\n          var td = rootDocument.createElement('td');\n          var tr = rootDocument.createElement('tr'); // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n\n          td.setAttribute('ghost-table', 1);\n          renderer(_this4.hot, td, row, column, _this4.hot.colToProp(column), string.value, cellProperties);\n          tr.appendChild(td);\n          fragment.appendChild(tr);\n        });\n      });\n      return fragment;\n    }\n    /**\n     * Remove table from document and reset internal state.\n     */\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      this.rows.length = 0;\n      this.rows[-1] = void 0;\n      this.columns.length = 0;\n      if (this.samples) {\n        this.samples.clear();\n      }\n      this.samples = null;\n      this.removeTable();\n    }\n    /**\n     * Inject generated table into document.\n     *\n     * @param {HTMLElement} [parent=null]\n     */\n  }, {\n    key: \"injectTable\",\n    value: function injectTable() {\n      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (!this.injected) {\n        (parent || this.hot.rootElement).appendChild(this.container.fragment);\n        this.injected = true;\n      }\n    }\n    /**\n     * Remove table from document.\n     */\n  }, {\n    key: \"removeTable\",\n    value: function removeTable() {\n      if (this.injected && this.container.container.parentNode) {\n        this.container.container.parentNode.removeChild(this.container.container);\n        this.container = null;\n        this.injected = false;\n      }\n    }\n    /**\n     * Create col element.\n     *\n     * @param {Number} column Column index.\n     * @returns {HTMLElement}\n     */\n  }, {\n    key: \"createColElement\",\n    value: function createColElement(column) {\n      var col = this.hot.rootDocument.createElement('col');\n      col.style.width = \"\".concat(this.hot.view.wt.wtTable.getStretchedColumnWidth(column), \"px\");\n      return col;\n    }\n    /**\n     * Create table element.\n     *\n     * @param {String} className\n     * @returns {Object}\n     */\n  }, {\n    key: \"createTable\",\n    value: function createTable() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var table = rootDocument.createElement('table');\n      var tHead = rootDocument.createElement('thead');\n      var tBody = rootDocument.createElement('tbody');\n      var colGroup = rootDocument.createElement('colgroup');\n      var tr = rootDocument.createElement('tr');\n      var th = rootDocument.createElement('th');\n      if (this.isVertical()) {\n        table.appendChild(colGroup);\n      }\n      if (this.isHorizontal()) {\n        tr.appendChild(th);\n        tHead.appendChild(tr);\n        table.style.tableLayout = 'auto';\n        table.style.width = 'auto';\n      }\n      table.appendChild(tHead);\n      if (this.isVertical()) {\n        tBody.appendChild(tr);\n      }\n      table.appendChild(tBody);\n      addClass(table, className);\n      fragment.appendChild(table);\n      return {\n        fragment: fragment,\n        table: table,\n        tHead: tHead,\n        tBody: tBody,\n        colGroup: colGroup,\n        tr: tr,\n        th: th\n      };\n    }\n    /**\n     * Create container for tables.\n     *\n     * @param {String} className\n     * @returns {Object}\n     */\n  }, {\n    key: \"createContainer\",\n    value: function createContainer() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var container = rootDocument.createElement('div');\n      var containerClassName = \"htGhostTable htAutoSize \".concat(className.trim());\n      addClass(container, containerClassName);\n      fragment.appendChild(container);\n      return {\n        fragment: fragment,\n        container: container\n      };\n    }\n    /**\n     * Checks if table is raised vertically (checking rows).\n     *\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"isVertical\",\n    value: function isVertical() {\n      return !!(this.rows.length && !this.columns.length);\n    }\n    /**\n     * Checks if table is raised horizontally (checking columns).\n     *\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return !!(this.columns.length && !this.rows.length);\n    }\n  }]);\n  return GhostTable;\n}();\nexport default GhostTable;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","addClass","outerHeight","outerWidth","arrayEach","GhostTable","hotInstance","hot","container","injected","rows","columns","samples","settings","useHeaders","value","addRow","row","Error","createContainer","rootElement","className","rowObject","push","table","createTable","colGroup","appendChild","createColGroupsCol","tr","createRow","fragment","addColumnHeadersRow","colHeader","getColHeader","tHead","createColumnHeadersRow","addColumn","column","columnObject","col","getSetting","view","appendColHeader","th","tBody","createCol","getHeights","callback","injectTable","getWidths","setSettings","setSetting","name","getSettings","_this","rootDocument","createDocumentFragment","hasRowHeaders","createColElement","forEach","sample","strings","string","_this2","createElement","appendRowHeader","cellProperties","getCellMeta","renderer","getCellRenderer","td","setAttribute","colToProp","_this3","_this4","clean","clear","removeTable","parent","arguments","undefined","parentNode","removeChild","style","width","concat","wt","wtTable","getStretchedColumnWidth","isVertical","isHorizontal","tableLayout","containerClassName","trim"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/utils/ghostTable.js"],"sourcesContent":["import \"core-js/modules/es.array.for-each\";\nimport \"core-js/modules/es.string.trim\";\nimport \"core-js/modules/web.dom-collections.for-each\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { addClass, outerHeight, outerWidth } from './../helpers/dom/element';\nimport { arrayEach } from './../helpers/array';\n/**\n * @class GhostTable\n * @util\n */\n\nvar GhostTable =\n/*#__PURE__*/\nfunction () {\n  function GhostTable(hotInstance) {\n    _classCallCheck(this, GhostTable);\n\n    /**\n     * Handsontable instance.\n     *\n     * @type {Core}\n     */\n    this.hot = hotInstance;\n    /**\n     * Container element where every table will be injected.\n     *\n     * @type {HTMLElement|null}\n     */\n\n    this.container = null;\n    /**\n     * Flag which determine is table was injected to DOM.\n     *\n     * @type {Boolean}\n     */\n\n    this.injected = false;\n    /**\n     * Added rows collection.\n     *\n     * @type {Array}\n     */\n\n    this.rows = [];\n    /**\n     * Added columns collection.\n     *\n     * @type {Array}\n     */\n\n    this.columns = [];\n    /**\n     * Samples prepared for calculations.\n     *\n     * @type {Map}\n     * @default {null}\n     */\n\n    this.samples = null;\n    /**\n     * Ghost table settings.\n     *\n     * @type {Object}\n     * @default {Object}\n     */\n\n    this.settings = {\n      useHeaders: true\n    };\n  }\n  /**\n   * Add row.\n   *\n   * @param {Number} row Row index.\n   * @param {Map} samples Samples Map object.\n   */\n\n\n  _createClass(GhostTable, [{\n    key: \"addRow\",\n    value: function addRow(row, samples) {\n      if (this.columns.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n\n      if (!this.rows.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n\n      var rowObject = {\n        row: row\n      };\n      this.rows.push(rowObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n      this.table.colGroup.appendChild(this.createColGroupsCol());\n      this.table.tr.appendChild(this.createRow(row));\n      this.container.container.appendChild(this.table.fragment);\n      rowObject.table = this.table.table;\n    }\n    /**\n     * Add a row consisting of the column headers.\n     */\n\n  }, {\n    key: \"addColumnHeadersRow\",\n    value: function addColumnHeadersRow(samples) {\n      var colHeader = this.hot.getColHeader(0);\n\n      if (colHeader !== null && colHeader !== void 0) {\n        var rowObject = {\n          row: -1\n        };\n        this.rows.push(rowObject);\n        this.container = this.createContainer(this.hot.rootElement.className);\n        this.samples = samples;\n        this.table = this.createTable(this.hot.table.className);\n        this.table.colGroup.appendChild(this.createColGroupsCol());\n        this.table.tHead.appendChild(this.createColumnHeadersRow());\n        this.container.container.appendChild(this.table.fragment);\n        rowObject.table = this.table.table;\n      }\n    }\n    /**\n     * Add column.\n     *\n     * @param {Number} column Column index.\n     * @param {Map} samples Samples Map object.\n     */\n\n  }, {\n    key: \"addColumn\",\n    value: function addColumn(column, samples) {\n      if (this.rows.length) {\n        throw new Error('Doesn\\'t support multi-dimensional table');\n      }\n\n      if (!this.columns.length) {\n        this.container = this.createContainer(this.hot.rootElement.className);\n      }\n\n      var columnObject = {\n        col: column\n      };\n      this.columns.push(columnObject);\n      this.samples = samples;\n      this.table = this.createTable(this.hot.table.className);\n\n      if (this.getSetting('useHeaders') && this.hot.getColHeader(column) !== null) {\n        this.hot.view.appendColHeader(column, this.table.th);\n      }\n\n      this.table.tBody.appendChild(this.createCol(column));\n      this.container.container.appendChild(this.table.fragment);\n      columnObject.table = this.table.table;\n    }\n    /**\n     * Get calculated heights.\n     *\n     * @param {Function} callback Callback which will be fired for each calculated row.\n     */\n\n  }, {\n    key: \"getHeights\",\n    value: function getHeights(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n\n      arrayEach(this.rows, function (row) {\n        // -1 <- reduce border-top from table\n        callback(row.row, outerHeight(row.table) - 1);\n      });\n    }\n    /**\n     * Get calculated widths.\n     *\n     * @param {Function} callback Callback which will be fired for each calculated column.\n     */\n\n  }, {\n    key: \"getWidths\",\n    value: function getWidths(callback) {\n      if (!this.injected) {\n        this.injectTable();\n      }\n\n      arrayEach(this.columns, function (column) {\n        callback(column.col, outerWidth(column.table));\n      });\n    }\n    /**\n     * Set the Ghost Table settings to the provided object.\n     *\n     * @param {Object} settings New Ghost Table Settings\n     */\n\n  }, {\n    key: \"setSettings\",\n    value: function setSettings(settings) {\n      this.settings = settings;\n    }\n    /**\n     * Set a single setting of the Ghost Table.\n     *\n     * @param {String} name Setting name.\n     * @param {*} value Setting value.\n     */\n\n  }, {\n    key: \"setSetting\",\n    value: function setSetting(name, value) {\n      if (!this.settings) {\n        this.settings = {};\n      }\n\n      this.settings[name] = value;\n    }\n    /**\n     * Get the Ghost Table settings.\n     *\n     * @returns {Object|null}\n     */\n\n  }, {\n    key: \"getSettings\",\n    value: function getSettings() {\n      return this.settings;\n    }\n    /**\n     * Get a single Ghost Table setting.\n     *\n     * @param {String} name\n     * @returns {Boolean|null}\n     */\n\n  }, {\n    key: \"getSetting\",\n    value: function getSetting(name) {\n      if (this.settings) {\n        return this.settings[name];\n      }\n\n      return null;\n    }\n    /**\n     * Create colgroup col elements.\n     *\n     * @returns {DocumentFragment}\n     */\n\n  }, {\n    key: \"createColGroupsCol\",\n    value: function createColGroupsCol() {\n      var _this = this;\n\n      var fragment = this.hot.rootDocument.createDocumentFragment();\n\n      if (this.hot.hasRowHeaders()) {\n        fragment.appendChild(this.createColElement(-1));\n      }\n\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          fragment.appendChild(_this.createColElement(string.col));\n        });\n      });\n      return fragment;\n    }\n    /**\n     * Create table row element.\n     *\n     * @param {Number} row Row index.\n     * @returns {DocumentFragment} Returns created table row elements.\n     */\n\n  }, {\n    key: \"createRow\",\n    value: function createRow(row) {\n      var _this2 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var th = rootDocument.createElement('th');\n\n      if (this.hot.hasRowHeaders()) {\n        this.hot.view.appendRowHeader(row, th);\n        fragment.appendChild(th);\n      }\n\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n\n          var cellProperties = _this2.hot.getCellMeta(row, column);\n\n          cellProperties.col = column;\n          cellProperties.row = row;\n\n          var renderer = _this2.hot.getCellRenderer(cellProperties);\n\n          var td = rootDocument.createElement('td'); // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n\n          td.setAttribute('ghost-table', 1);\n          renderer(_this2.hot, td, row, column, _this2.hot.colToProp(column), string.value, cellProperties);\n          fragment.appendChild(td);\n        });\n      });\n      return fragment;\n    }\n  }, {\n    key: \"createColumnHeadersRow\",\n    value: function createColumnHeadersRow() {\n      var _this3 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n\n      if (this.hot.hasRowHeaders()) {\n        var th = rootDocument.createElement('th');\n        this.hot.view.appendColHeader(-1, th);\n        fragment.appendChild(th);\n      }\n\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var column = string.col;\n          var th = rootDocument.createElement('th');\n\n          _this3.hot.view.appendColHeader(column, th);\n\n          fragment.appendChild(th);\n        });\n      });\n      return fragment;\n    }\n    /**\n     * Create table column elements.\n     *\n     * @param {Number} column Column index.\n     * @returns {DocumentFragment} Returns created column table column elements.\n     */\n\n  }, {\n    key: \"createCol\",\n    value: function createCol(column) {\n      var _this4 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      this.samples.forEach(function (sample) {\n        arrayEach(sample.strings, function (string) {\n          var row = string.row;\n\n          var cellProperties = _this4.hot.getCellMeta(row, column);\n\n          cellProperties.col = column;\n          cellProperties.row = row;\n\n          var renderer = _this4.hot.getCellRenderer(cellProperties);\n\n          var td = rootDocument.createElement('td');\n          var tr = rootDocument.createElement('tr'); // Indicate that this element is created and supported by GhostTable. It can be useful to\n          // exclude rendering performance costly logic or exclude logic which doesn't work within a hidden table.\n\n          td.setAttribute('ghost-table', 1);\n          renderer(_this4.hot, td, row, column, _this4.hot.colToProp(column), string.value, cellProperties);\n          tr.appendChild(td);\n          fragment.appendChild(tr);\n        });\n      });\n      return fragment;\n    }\n    /**\n     * Remove table from document and reset internal state.\n     */\n\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      this.rows.length = 0;\n      this.rows[-1] = void 0;\n      this.columns.length = 0;\n\n      if (this.samples) {\n        this.samples.clear();\n      }\n\n      this.samples = null;\n      this.removeTable();\n    }\n    /**\n     * Inject generated table into document.\n     *\n     * @param {HTMLElement} [parent=null]\n     */\n\n  }, {\n    key: \"injectTable\",\n    value: function injectTable() {\n      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (!this.injected) {\n        (parent || this.hot.rootElement).appendChild(this.container.fragment);\n        this.injected = true;\n      }\n    }\n    /**\n     * Remove table from document.\n     */\n\n  }, {\n    key: \"removeTable\",\n    value: function removeTable() {\n      if (this.injected && this.container.container.parentNode) {\n        this.container.container.parentNode.removeChild(this.container.container);\n        this.container = null;\n        this.injected = false;\n      }\n    }\n    /**\n     * Create col element.\n     *\n     * @param {Number} column Column index.\n     * @returns {HTMLElement}\n     */\n\n  }, {\n    key: \"createColElement\",\n    value: function createColElement(column) {\n      var col = this.hot.rootDocument.createElement('col');\n      col.style.width = \"\".concat(this.hot.view.wt.wtTable.getStretchedColumnWidth(column), \"px\");\n      return col;\n    }\n    /**\n     * Create table element.\n     *\n     * @param {String} className\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"createTable\",\n    value: function createTable() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var table = rootDocument.createElement('table');\n      var tHead = rootDocument.createElement('thead');\n      var tBody = rootDocument.createElement('tbody');\n      var colGroup = rootDocument.createElement('colgroup');\n      var tr = rootDocument.createElement('tr');\n      var th = rootDocument.createElement('th');\n\n      if (this.isVertical()) {\n        table.appendChild(colGroup);\n      }\n\n      if (this.isHorizontal()) {\n        tr.appendChild(th);\n        tHead.appendChild(tr);\n        table.style.tableLayout = 'auto';\n        table.style.width = 'auto';\n      }\n\n      table.appendChild(tHead);\n\n      if (this.isVertical()) {\n        tBody.appendChild(tr);\n      }\n\n      table.appendChild(tBody);\n      addClass(table, className);\n      fragment.appendChild(table);\n      return {\n        fragment: fragment,\n        table: table,\n        tHead: tHead,\n        tBody: tBody,\n        colGroup: colGroup,\n        tr: tr,\n        th: th\n      };\n    }\n    /**\n     * Create container for tables.\n     *\n     * @param {String} className\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"createContainer\",\n    value: function createContainer() {\n      var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var rootDocument = this.hot.rootDocument;\n      var fragment = rootDocument.createDocumentFragment();\n      var container = rootDocument.createElement('div');\n      var containerClassName = \"htGhostTable htAutoSize \".concat(className.trim());\n      addClass(container, containerClassName);\n      fragment.appendChild(container);\n      return {\n        fragment: fragment,\n        container: container\n      };\n    }\n    /**\n     * Checks if table is raised vertically (checking rows).\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isVertical\",\n    value: function isVertical() {\n      return !!(this.rows.length && !this.columns.length);\n    }\n    /**\n     * Checks if table is raised horizontally (checking columns).\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return !!(this.columns.length && !this.rows.length);\n    }\n  }]);\n\n  return GhostTable;\n}();\n\nexport default GhostTable;"],"mappings":"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"},"metadata":{},"sourceType":"module"}