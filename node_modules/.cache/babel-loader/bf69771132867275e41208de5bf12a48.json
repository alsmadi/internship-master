{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nimport jsonpatch from './../../../lib/jsonpatch/json-patch-duplex';\nimport localHooks from '../../mixins/localHooks';\nimport { mixin } from '../../helpers/object';\nimport { cleanPatches } from './utils';\n/**\n * @class DataObserver\n * @plugin ObserveChanges\n */\n\nvar DataObserver = /*#__PURE__*/\nfunction () {\n  function DataObserver(observedData) {\n    _classCallCheck(this, DataObserver);\n\n    /**\n     * Observed source data.\n     *\n     * @type {Array}\n     */\n    this.observedData = null;\n    /**\n     * JsonPatch observer.\n     *\n     * @type {Object}\n     */\n\n    this.observer = null;\n    /**\n     * Flag which determines if observer is paused or not. Paused observer doesn't emit `change` hooks.\n     *\n     * @type {Boolean}\n     * @default false\n     */\n\n    this.paused = false;\n    this.setObservedData(observedData);\n  }\n  /**\n   * Set data to observe.\n   *\n   * @param {*} observedData\n   */\n\n  _createClass(DataObserver, [{\n    key: \"setObservedData\",\n    value: function setObservedData(observedData) {\n      var _this = this;\n      if (this.observer) {\n        jsonpatch.unobserve(this.observedData, this.observer);\n      }\n      this.observedData = observedData;\n      this.observer = jsonpatch.observe(this.observedData, function (patches) {\n        return _this.onChange(patches);\n      });\n    }\n    /**\n     * Check if observer was paused.\n     *\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"isPaused\",\n    value: function isPaused() {\n      return this.paused;\n    }\n    /**\n     * Pause observer (stop emitting all detected changes).\n     */\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.paused = true;\n    }\n    /**\n     * Resume observer (emit all detected changes).\n     */\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.paused = false;\n    }\n    /**\n     * JsonPatch on change listener.\n     *\n     * @private\n     * @param {Array} patches An array of object passed from jsonpatch.\n     */\n  }, {\n    key: \"onChange\",\n    value: function onChange(patches) {\n      this.runLocalHooks('change', cleanPatches(patches));\n    }\n    /**\n     * Destroy observer instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      jsonpatch.unobserve(this.observedData, this.observer);\n      this.observedData = null;\n      this.observer = null;\n    }\n  }]);\n  return DataObserver;\n}();\nmixin(DataObserver, localHooks);\nexport default DataObserver;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","jsonpatch","localHooks","mixin","cleanPatches","DataObserver","observedData","observer","paused","setObservedData","value","_this","unobserve","observe","patches","onChange","isPaused","pause","resume","runLocalHooks","destroy"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/plugins/observeChanges/dataObserver.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport jsonpatch from './../../../lib/jsonpatch/json-patch-duplex';\nimport localHooks from '../../mixins/localHooks';\nimport { mixin } from '../../helpers/object';\nimport { cleanPatches } from './utils';\n/**\n * @class DataObserver\n * @plugin ObserveChanges\n */\n\nvar DataObserver =\n/*#__PURE__*/\nfunction () {\n  function DataObserver(observedData) {\n    _classCallCheck(this, DataObserver);\n\n    /**\n     * Observed source data.\n     *\n     * @type {Array}\n     */\n    this.observedData = null;\n    /**\n     * JsonPatch observer.\n     *\n     * @type {Object}\n     */\n\n    this.observer = null;\n    /**\n     * Flag which determines if observer is paused or not. Paused observer doesn't emit `change` hooks.\n     *\n     * @type {Boolean}\n     * @default false\n     */\n\n    this.paused = false;\n    this.setObservedData(observedData);\n  }\n  /**\n   * Set data to observe.\n   *\n   * @param {*} observedData\n   */\n\n\n  _createClass(DataObserver, [{\n    key: \"setObservedData\",\n    value: function setObservedData(observedData) {\n      var _this = this;\n\n      if (this.observer) {\n        jsonpatch.unobserve(this.observedData, this.observer);\n      }\n\n      this.observedData = observedData;\n      this.observer = jsonpatch.observe(this.observedData, function (patches) {\n        return _this.onChange(patches);\n      });\n    }\n    /**\n     * Check if observer was paused.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isPaused\",\n    value: function isPaused() {\n      return this.paused;\n    }\n    /**\n     * Pause observer (stop emitting all detected changes).\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.paused = true;\n    }\n    /**\n     * Resume observer (emit all detected changes).\n     */\n\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.paused = false;\n    }\n    /**\n     * JsonPatch on change listener.\n     *\n     * @private\n     * @param {Array} patches An array of object passed from jsonpatch.\n     */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(patches) {\n      this.runLocalHooks('change', cleanPatches(patches));\n    }\n    /**\n     * Destroy observer instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      jsonpatch.unobserve(this.observedData, this.observer);\n      this.observedData = null;\n      this.observer = null;\n    }\n  }]);\n\n  return DataObserver;\n}();\n\nmixin(DataObserver, localHooks);\nexport default DataObserver;"],"mappings":"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"},"metadata":{},"sourceType":"module"}