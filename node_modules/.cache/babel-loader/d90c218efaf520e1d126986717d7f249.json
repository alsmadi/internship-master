{"ast":null,"code":"import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get(target, property, receiver || target);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport BasePlugin from './../_base';\nimport { arrayEach, arrayFilter } from './../../helpers/array';\nimport { cancelAnimationFrame, requestAnimationFrame } from './../../helpers/feature';\nimport { isVisible } from './../../helpers/dom/element';\nimport GhostTable from './../../utils/ghostTable';\nimport { isObject, hasOwnProperty } from './../../helpers/object';\nimport { valueAccordingPercent, rangeEach } from './../../helpers/number';\nimport { registerPlugin } from './../../plugins';\nimport SamplesGenerator from './../../utils/samplesGenerator';\nimport { isPercentValue } from './../../helpers/string';\n/**\n * @plugin AutoRowSize\n *\n * @description\n * This plugin allows to set row heights based on their highest cells.\n *\n * By default, the plugin is declared as `undefined`, which makes it disabled (same as if it was declared as `false`).\n * Enabling this plugin may decrease the overall table performance, as it needs to calculate the heights of all cells to\n * resize the rows accordingly.\n * If you experience problems with the performance, try turning this feature off and declaring the row heights manually.\n *\n * Row height calculations are divided into sync and async part. Each of this parts has their own advantages and\n * disadvantages. Synchronous calculations are faster but they block the browser UI, while the slower asynchronous\n * operations don't block the browser UI.\n *\n * To configure the sync/async distribution, you can pass an absolute value (number of columns) or a percentage value to a config object:\n * ```js\n * // as a number (300 columns in sync, rest async)\n * autoRowSize: {syncLimit: 300},\n *\n * // as a string (percent)\n * autoRowSize: {syncLimit: '40%'},\n *\n * // allow sample duplication\n * autoRowSize: {syncLimit: '40%', allowSampleDuplicates: true},\n * ```\n *\n * You can also use the `allowSampleDuplicates` option to allow sampling duplicate values when calculating the row\n * height. __Note__, that this might have a negative impact on performance.\n *\n * To configure this plugin see {@link Options#autoRowSize}.\n *\n * @example\n *\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   date: getData(),\n *   autoRowSize: true\n * });\n * // Access to plugin instance:\n * const plugin = hot.getPlugin('autoRowSize');\n *\n * plugin.getRowHeight(4);\n *\n * if (plugin.isEnabled()) {\n *   // code...\n * }\n * ```\n */\n\nvar AutoRowSize = /*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(AutoRowSize, _BasePlugin);\n  _createClass(AutoRowSize, null, [{\n    key: \"CALCULATION_STEP\",\n    get: function get() {\n      return 50;\n    }\n  }, {\n    key: \"SYNC_CALCULATION_LIMIT\",\n    get: function get() {\n      return 500;\n    }\n  }]);\n  function AutoRowSize(hotInstance) {\n    var _this;\n    _classCallCheck(this, AutoRowSize);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AutoRowSize).call(this, hotInstance));\n    /**\n     * Cached rows heights.\n     *\n     * @type {Number[]}\n     */\n\n    _this.heights = [];\n    /**\n     * Instance of {@link GhostTable} for rows and columns size calculations.\n     *\n     * @private\n     * @type {GhostTable}\n     */\n\n    _this.ghostTable = new GhostTable(_this.hot);\n    /**\n     * Instance of {@link SamplesGenerator} for generating samples necessary for rows height calculations.\n     *\n     * @private\n     * @type {SamplesGenerator}\n     */\n\n    _this.samplesGenerator = new SamplesGenerator(function (row, col) {\n      var cellValue;\n      if (row >= 0) {\n        cellValue = _this.hot.getDataAtCell(row, col);\n      } else if (row === -1) {\n        cellValue = _this.hot.getColHeader(col);\n      }\n      return {\n        value: cellValue\n      };\n    });\n    /**\n     * `true` if only the first calculation was performed.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.firstCalculation = true;\n    /**\n     * `true` if the size calculation is in progress.\n     *\n     * @type {Boolean}\n     */\n\n    _this.inProgress = false; // moved to constructor to allow auto-sizing the rows when the plugin is disabled\n\n    _this.addHook('beforeRowResize', function (row, size, isDblClick) {\n      return _this.onBeforeRowResize(row, size, isDblClick);\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link AutoRowSize#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n  _createClass(AutoRowSize, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.hot.getSettings().autoRowSize === true || isObject(this.hot.getSettings().autoRowSize);\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      this.setSamplingOptions();\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData();\n      });\n      this.addHook('beforeChange', function (changes) {\n        return _this2.onBeforeChange(changes);\n      });\n      this.addHook('beforeColumnMove', function () {\n        return _this2.recalculateAllRowsHeight();\n      });\n      this.addHook('beforeColumnResize', function () {\n        return _this2.recalculateAllRowsHeight();\n      });\n      this.addHook('beforeColumnSort', function () {\n        return _this2.clearCache();\n      });\n      this.addHook('beforeRender', function (force) {\n        return _this2.onBeforeRender(force);\n      });\n      this.addHook('beforeRowMove', function (rowStart, rowEnd) {\n        return _this2.onBeforeRowMove(rowStart, rowEnd);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.getRowHeight(row, height);\n      });\n      this.addHook('modifyColumnHeaderHeight', function () {\n        return _this2.getColumnHeaderHeight();\n      });\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Calculate a given rows height.\n     *\n     * @param {Number|Object} rowRange Row index or an object with `from` and `to` indexes as a range.\n     * @param {Number|Object} colRange Column index or an object with `from` and `to` indexes as a range.\n     * @param {Boolean} [force=false] If `true` the calculation will be processed regardless of whether the width exists in the cache.\n     */\n  }, {\n    key: \"calculateRowsHeight\",\n    value: function calculateRowsHeight() {\n      var _this3 = this;\n      var rowRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countRows() - 1\n      };\n      var colRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsRange = typeof rowRange === 'number' ? {\n        from: rowRange,\n        to: rowRange\n      } : rowRange;\n      var columnsRange = typeof colRange === 'number' ? {\n        from: colRange,\n        to: colRange\n      } : colRange;\n      if (this.hot.getColHeader(0) !== null) {\n        var samples = this.samplesGenerator.generateRowSamples(-1, columnsRange);\n        this.ghostTable.addColumnHeadersRow(samples.get(-1));\n      }\n      rangeEach(rowsRange.from, rowsRange.to, function (row) {\n        // For rows we must calculate row height even when user had set height value manually.\n        // We can shrink column but cannot shrink rows!\n        if (force || _this3.heights[row] === void 0) {\n          var _samples = _this3.samplesGenerator.generateRowSamples(row, columnsRange);\n          arrayEach(_samples, function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n              rowIndex = _ref2[0],\n              sample = _ref2[1];\n            return _this3.ghostTable.addRow(rowIndex, sample);\n          });\n        }\n      });\n      if (this.ghostTable.rows.length) {\n        this.ghostTable.getHeights(function (row, height) {\n          _this3.heights[row] = height;\n        });\n        this.ghostTable.clean();\n      }\n    }\n    /**\n     * Calculate all rows heights. The calculated row will be cached in the {@link AutoRowSize#heights} property.\n     * To retrieve height for specyfied row use {@link AutoRowSize#getRowHeight} method.\n     *\n     * @param {Object|Number} rowRange Row index or an object with `from` and `to` properties which define row range.\n     */\n  }, {\n    key: \"calculateAllRowsHeight\",\n    value: function calculateAllRowsHeight() {\n      var _this4 = this;\n      var colRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var current = 0;\n      var length = this.hot.countRows() - 1;\n      var timer = null;\n      this.inProgress = true;\n      var loop = function loop() {\n        // When hot was destroyed after calculating finished cancel frame\n        if (!_this4.hot) {\n          cancelAnimationFrame(timer);\n          _this4.inProgress = false;\n          return;\n        }\n        _this4.calculateRowsHeight({\n          from: current,\n          to: Math.min(current + AutoRowSize.CALCULATION_STEP, length)\n        }, colRange);\n        current = current + AutoRowSize.CALCULATION_STEP + 1;\n        if (current < length) {\n          timer = requestAnimationFrame(loop);\n        } else {\n          cancelAnimationFrame(timer);\n          _this4.inProgress = false; // @TODO Should call once per render cycle, currently fired separately in different plugins\n\n          _this4.hot.view.wt.wtOverlays.adjustElementsSize(true); // tmp\n\n          if (_this4.hot.view.wt.wtOverlays.leftOverlay.needFullRender) {\n            _this4.hot.view.wt.wtOverlays.leftOverlay.clone.draw();\n          }\n        }\n      };\n      var syncLimit = this.getSyncCalculationLimit(); // sync\n\n      if (this.firstCalculation && syncLimit >= 0) {\n        this.calculateRowsHeight({\n          from: 0,\n          to: syncLimit\n        }, colRange);\n        this.firstCalculation = false;\n        current = syncLimit + 1;\n      } // async\n\n      if (current < length) {\n        loop();\n      } else {\n        this.inProgress = false;\n        this.hot.view.wt.wtOverlays.adjustElementsSize(false);\n      }\n    }\n    /**\n     * Sets the sampling options.\n     *\n     * @private\n     */\n  }, {\n    key: \"setSamplingOptions\",\n    value: function setSamplingOptions() {\n      var setting = this.hot.getSettings().autoRowSize;\n      var samplingRatio = setting && hasOwnProperty(setting, 'samplingRatio') ? this.hot.getSettings().autoRowSize.samplingRatio : void 0;\n      var allowSampleDuplicates = setting && hasOwnProperty(setting, 'allowSampleDuplicates') ? this.hot.getSettings().autoRowSize.allowSampleDuplicates : void 0;\n      if (samplingRatio && !isNaN(samplingRatio)) {\n        this.samplesGenerator.setSampleCount(parseInt(samplingRatio, 10));\n      }\n      if (allowSampleDuplicates) {\n        this.samplesGenerator.setAllowDuplicates(allowSampleDuplicates);\n      }\n    }\n    /**\n     * Recalculates all rows height (overwrite cache values).\n     */\n  }, {\n    key: \"recalculateAllRowsHeight\",\n    value: function recalculateAllRowsHeight() {\n      if (isVisible(this.hot.view.wt.wtTable.TABLE)) {\n        this.clearCache();\n        this.calculateAllRowsHeight();\n      }\n    }\n    /**\n     * Gets value which tells how many rows should be calculated synchronously (rest of the rows will be calculated\n     * asynchronously). The limit is calculated based on `syncLimit` set to autoRowSize option (see {@link Options#autoRowSize}).\n     *\n     * @returns {Number}\n     */\n  }, {\n    key: \"getSyncCalculationLimit\",\n    value: function getSyncCalculationLimit() {\n      /* eslint-disable no-bitwise */\n      var limit = AutoRowSize.SYNC_CALCULATION_LIMIT;\n      var rowsLimit = this.hot.countRows() - 1;\n      if (isObject(this.hot.getSettings().autoRowSize)) {\n        limit = this.hot.getSettings().autoRowSize.syncLimit;\n        if (isPercentValue(limit)) {\n          limit = valueAccordingPercent(rowsLimit, limit);\n        } else {\n          // Force to Number\n          limit >>= 0;\n        }\n      }\n      return Math.min(limit, rowsLimit);\n    }\n    /**\n     * Gets the calculated row height.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} [defaultHeight] Default row height. It will be picked up if no calculated height found.\n     * @returns {Number}\n     */\n  }, {\n    key: \"getRowHeight\",\n    value: function getRowHeight(row) {\n      var defaultHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : void 0;\n      var height = defaultHeight;\n      if (this.heights[row] !== void 0 && this.heights[row] > (defaultHeight || 0)) {\n        height = this.heights[row];\n      }\n      return height;\n    }\n    /**\n     * Get the calculated column header height.\n     *\n     * @returns {Number|undefined}\n     */\n  }, {\n    key: \"getColumnHeaderHeight\",\n    value: function getColumnHeaderHeight() {\n      return this.heights[-1];\n    }\n    /**\n     * Get the first visible row.\n     *\n     * @returns {Number} Returns row index, -1 if table is not rendered or if there are no rows to base the the calculations on.\n     */\n  }, {\n    key: \"getFirstVisibleRow\",\n    value: function getFirstVisibleRow() {\n      var wot = this.hot.view.wt;\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getFirstVisibleRow();\n      }\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getFirstRenderedRow();\n      }\n      return -1;\n    }\n    /**\n     * Gets the last visible row.\n     *\n     * @returns {Number} Returns row index or -1 if table is not rendered.\n     */\n  }, {\n    key: \"getLastVisibleRow\",\n    value: function getLastVisibleRow() {\n      var wot = this.hot.view.wt;\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getLastVisibleRow();\n      }\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getLastRenderedRow();\n      }\n      return -1;\n    }\n    /**\n     * Clears cached heights.\n     */\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.heights.length = 0;\n      this.heights[-1] = void 0;\n    }\n    /**\n     * Clears cache by range.\n     *\n     * @param {Object|Number} range Row index or an object with `from` and `to` properties which define row range.\n     */\n  }, {\n    key: \"clearCacheByRange\",\n    value: function clearCacheByRange(range) {\n      var _this5 = this;\n      var _ref3 = typeof range === 'number' ? {\n          from: range,\n          to: range\n        } : range,\n        from = _ref3.from,\n        to = _ref3.to;\n      rangeEach(Math.min(from, to), Math.max(from, to), function (row) {\n        _this5.heights[row] = void 0;\n      });\n    }\n    /**\n     * Checks if all heights were calculated. If not then return `true` (need recalculate).\n     *\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"isNeedRecalculate\",\n    value: function isNeedRecalculate() {\n      return !!arrayFilter(this.heights, function (item) {\n        return item === void 0;\n      }).length;\n    }\n    /**\n     * On before render listener.\n     *\n     * @private\n     */\n  }, {\n    key: \"onBeforeRender\",\n    value: function onBeforeRender() {\n      var force = this.hot.renderCall;\n      var fixedRowsBottom = this.hot.getSettings().fixedRowsBottom;\n      var firstVisibleRow = this.getFirstVisibleRow();\n      var lastVisibleRow = this.getLastVisibleRow();\n      if (firstVisibleRow === -1 || lastVisibleRow === -1) {\n        return;\n      }\n      this.calculateRowsHeight({\n        from: firstVisibleRow,\n        to: lastVisibleRow\n      }, void 0, force); // Calculate rows height synchronously for bottom overlay\n\n      if (fixedRowsBottom) {\n        var totalRows = this.hot.countRows() - 1;\n        this.calculateRowsHeight({\n          from: totalRows - fixedRowsBottom,\n          to: totalRows\n        });\n      }\n      if (this.isNeedRecalculate() && !this.inProgress) {\n        this.calculateAllRowsHeight();\n      }\n    }\n    /**\n     * On before row move listener.\n     *\n     * @private\n     * @param {Number} from Row index where was grabbed.\n     * @param {Number} to Destination row index.\n     */\n  }, {\n    key: \"onBeforeRowMove\",\n    value: function onBeforeRowMove(from, to) {\n      this.clearCacheByRange({\n        from: from,\n        to: to\n      });\n      this.calculateAllRowsHeight();\n    }\n    /**\n     * On before row resize listener.\n     *\n     * @private\n     * @param {Number} row\n     * @param {Number} size\n     * @param {Boolean} isDblClick\n     * @returns {Number}\n     */\n  }, {\n    key: \"onBeforeRowResize\",\n    value: function onBeforeRowResize(row, size, isDblClick) {\n      var newSize = size;\n      if (isDblClick) {\n        this.calculateRowsHeight(row, void 0, true);\n        newSize = this.getRowHeight(row);\n      }\n      return newSize;\n    }\n    /**\n     * On after load data listener.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData() {\n      var _this6 = this;\n      if (this.hot.view) {\n        this.recalculateAllRowsHeight();\n      } else {\n        // first load - initialization\n        setTimeout(function () {\n          if (_this6.hot) {\n            _this6.recalculateAllRowsHeight();\n          }\n        }, 0);\n      }\n    }\n    /**\n     * On before change listener.\n     *\n     * @private\n     * @param {Array} changes\n     */\n  }, {\n    key: \"onBeforeChange\",\n    value: function onBeforeChange(changes) {\n      var range = null;\n      if (changes.length === 1) {\n        range = changes[0][0];\n      } else if (changes.length > 1) {\n        range = {\n          from: changes[0][0],\n          to: changes[changes.length - 1][0]\n        };\n      }\n      if (range !== null) {\n        this.clearCacheByRange(range);\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.ghostTable.clean();\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n  return AutoRowSize;\n}(BasePlugin);\nregisterPlugin('autoRowSize', AutoRowSize);\nexport default AutoRowSize;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Object","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_get","target","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","arrayEach","arrayFilter","cancelAnimationFrame","requestAnimationFrame","isVisible","GhostTable","isObject","valueAccordingPercent","rangeEach","registerPlugin","SamplesGenerator","isPercentValue","AutoRowSize","_BasePlugin","hotInstance","_this","heights","ghostTable","hot","samplesGenerator","row","col","cellValue","getDataAtCell","getColHeader","firstCalculation","inProgress","addHook","size","isDblClick","onBeforeRowResize","isEnabled","getSettings","autoRowSize","enablePlugin","_this2","enabled","setSamplingOptions","onAfterLoadData","changes","onBeforeChange","recalculateAllRowsHeight","clearCache","force","onBeforeRender","rowStart","rowEnd","onBeforeRowMove","height","getRowHeight","getColumnHeaderHeight","disablePlugin","calculateRowsHeight","_this3","rowRange","arguments","from","to","countRows","colRange","countCols","rowsRange","columnsRange","samples","generateRowSamples","addColumnHeadersRow","_samples","_ref","_ref2","rowIndex","sample","addRow","rows","getHeights","clean","calculateAllRowsHeight","_this4","current","timer","loop","Math","min","CALCULATION_STEP","view","wt","wtOverlays","adjustElementsSize","leftOverlay","needFullRender","clone","draw","syncLimit","getSyncCalculationLimit","setting","samplingRatio","allowSampleDuplicates","isNaN","setSampleCount","parseInt","setAllowDuplicates","wtTable","TABLE","limit","SYNC_CALCULATION_LIMIT","rowsLimit","defaultHeight","getFirstVisibleRow","wot","wtViewport","rowsVisibleCalculator","rowsRenderCalculator","getFirstRenderedRow","getLastVisibleRow","getLastRenderedRow","clearCacheByRange","range","_this5","_ref3","max","isNeedRecalculate","item","renderCall","fixedRowsBottom","firstVisibleRow","lastVisibleRow","totalRows","newSize","_this6","setTimeout","destroy"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/plugins/autoRowSize/autoRowSize.js"],"sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/web.timers\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from './../_base';\nimport { arrayEach, arrayFilter } from './../../helpers/array';\nimport { cancelAnimationFrame, requestAnimationFrame } from './../../helpers/feature';\nimport { isVisible } from './../../helpers/dom/element';\nimport GhostTable from './../../utils/ghostTable';\nimport { isObject, hasOwnProperty } from './../../helpers/object';\nimport { valueAccordingPercent, rangeEach } from './../../helpers/number';\nimport { registerPlugin } from './../../plugins';\nimport SamplesGenerator from './../../utils/samplesGenerator';\nimport { isPercentValue } from './../../helpers/string';\n/**\n * @plugin AutoRowSize\n *\n * @description\n * This plugin allows to set row heights based on their highest cells.\n *\n * By default, the plugin is declared as `undefined`, which makes it disabled (same as if it was declared as `false`).\n * Enabling this plugin may decrease the overall table performance, as it needs to calculate the heights of all cells to\n * resize the rows accordingly.\n * If you experience problems with the performance, try turning this feature off and declaring the row heights manually.\n *\n * Row height calculations are divided into sync and async part. Each of this parts has their own advantages and\n * disadvantages. Synchronous calculations are faster but they block the browser UI, while the slower asynchronous\n * operations don't block the browser UI.\n *\n * To configure the sync/async distribution, you can pass an absolute value (number of columns) or a percentage value to a config object:\n * ```js\n * // as a number (300 columns in sync, rest async)\n * autoRowSize: {syncLimit: 300},\n *\n * // as a string (percent)\n * autoRowSize: {syncLimit: '40%'},\n *\n * // allow sample duplication\n * autoRowSize: {syncLimit: '40%', allowSampleDuplicates: true},\n * ```\n *\n * You can also use the `allowSampleDuplicates` option to allow sampling duplicate values when calculating the row\n * height. __Note__, that this might have a negative impact on performance.\n *\n * To configure this plugin see {@link Options#autoRowSize}.\n *\n * @example\n *\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   date: getData(),\n *   autoRowSize: true\n * });\n * // Access to plugin instance:\n * const plugin = hot.getPlugin('autoRowSize');\n *\n * plugin.getRowHeight(4);\n *\n * if (plugin.isEnabled()) {\n *   // code...\n * }\n * ```\n */\n\nvar AutoRowSize =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(AutoRowSize, _BasePlugin);\n\n  _createClass(AutoRowSize, null, [{\n    key: \"CALCULATION_STEP\",\n    get: function get() {\n      return 50;\n    }\n  }, {\n    key: \"SYNC_CALCULATION_LIMIT\",\n    get: function get() {\n      return 500;\n    }\n  }]);\n\n  function AutoRowSize(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, AutoRowSize);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AutoRowSize).call(this, hotInstance));\n    /**\n     * Cached rows heights.\n     *\n     * @type {Number[]}\n     */\n\n    _this.heights = [];\n    /**\n     * Instance of {@link GhostTable} for rows and columns size calculations.\n     *\n     * @private\n     * @type {GhostTable}\n     */\n\n    _this.ghostTable = new GhostTable(_this.hot);\n    /**\n     * Instance of {@link SamplesGenerator} for generating samples necessary for rows height calculations.\n     *\n     * @private\n     * @type {SamplesGenerator}\n     */\n\n    _this.samplesGenerator = new SamplesGenerator(function (row, col) {\n      var cellValue;\n\n      if (row >= 0) {\n        cellValue = _this.hot.getDataAtCell(row, col);\n      } else if (row === -1) {\n        cellValue = _this.hot.getColHeader(col);\n      }\n\n      return {\n        value: cellValue\n      };\n    });\n    /**\n     * `true` if only the first calculation was performed.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.firstCalculation = true;\n    /**\n     * `true` if the size calculation is in progress.\n     *\n     * @type {Boolean}\n     */\n\n    _this.inProgress = false; // moved to constructor to allow auto-sizing the rows when the plugin is disabled\n\n    _this.addHook('beforeRowResize', function (row, size, isDblClick) {\n      return _this.onBeforeRowResize(row, size, isDblClick);\n    });\n\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link AutoRowSize#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(AutoRowSize, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.hot.getSettings().autoRowSize === true || isObject(this.hot.getSettings().autoRowSize);\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.setSamplingOptions();\n      this.addHook('afterLoadData', function () {\n        return _this2.onAfterLoadData();\n      });\n      this.addHook('beforeChange', function (changes) {\n        return _this2.onBeforeChange(changes);\n      });\n      this.addHook('beforeColumnMove', function () {\n        return _this2.recalculateAllRowsHeight();\n      });\n      this.addHook('beforeColumnResize', function () {\n        return _this2.recalculateAllRowsHeight();\n      });\n      this.addHook('beforeColumnSort', function () {\n        return _this2.clearCache();\n      });\n      this.addHook('beforeRender', function (force) {\n        return _this2.onBeforeRender(force);\n      });\n      this.addHook('beforeRowMove', function (rowStart, rowEnd) {\n        return _this2.onBeforeRowMove(rowStart, rowEnd);\n      });\n      this.addHook('modifyRowHeight', function (height, row) {\n        return _this2.getRowHeight(row, height);\n      });\n      this.addHook('modifyColumnHeaderHeight', function () {\n        return _this2.getColumnHeaderHeight();\n      });\n\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Calculate a given rows height.\n     *\n     * @param {Number|Object} rowRange Row index or an object with `from` and `to` indexes as a range.\n     * @param {Number|Object} colRange Column index or an object with `from` and `to` indexes as a range.\n     * @param {Boolean} [force=false] If `true` the calculation will be processed regardless of whether the width exists in the cache.\n     */\n\n  }, {\n    key: \"calculateRowsHeight\",\n    value: function calculateRowsHeight() {\n      var _this3 = this;\n\n      var rowRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countRows() - 1\n      };\n      var colRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsRange = typeof rowRange === 'number' ? {\n        from: rowRange,\n        to: rowRange\n      } : rowRange;\n      var columnsRange = typeof colRange === 'number' ? {\n        from: colRange,\n        to: colRange\n      } : colRange;\n\n      if (this.hot.getColHeader(0) !== null) {\n        var samples = this.samplesGenerator.generateRowSamples(-1, columnsRange);\n        this.ghostTable.addColumnHeadersRow(samples.get(-1));\n      }\n\n      rangeEach(rowsRange.from, rowsRange.to, function (row) {\n        // For rows we must calculate row height even when user had set height value manually.\n        // We can shrink column but cannot shrink rows!\n        if (force || _this3.heights[row] === void 0) {\n          var _samples = _this3.samplesGenerator.generateRowSamples(row, columnsRange);\n\n          arrayEach(_samples, function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                rowIndex = _ref2[0],\n                sample = _ref2[1];\n\n            return _this3.ghostTable.addRow(rowIndex, sample);\n          });\n        }\n      });\n\n      if (this.ghostTable.rows.length) {\n        this.ghostTable.getHeights(function (row, height) {\n          _this3.heights[row] = height;\n        });\n        this.ghostTable.clean();\n      }\n    }\n    /**\n     * Calculate all rows heights. The calculated row will be cached in the {@link AutoRowSize#heights} property.\n     * To retrieve height for specyfied row use {@link AutoRowSize#getRowHeight} method.\n     *\n     * @param {Object|Number} rowRange Row index or an object with `from` and `to` properties which define row range.\n     */\n\n  }, {\n    key: \"calculateAllRowsHeight\",\n    value: function calculateAllRowsHeight() {\n      var _this4 = this;\n\n      var colRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        from: 0,\n        to: this.hot.countCols() - 1\n      };\n      var current = 0;\n      var length = this.hot.countRows() - 1;\n      var timer = null;\n      this.inProgress = true;\n\n      var loop = function loop() {\n        // When hot was destroyed after calculating finished cancel frame\n        if (!_this4.hot) {\n          cancelAnimationFrame(timer);\n          _this4.inProgress = false;\n          return;\n        }\n\n        _this4.calculateRowsHeight({\n          from: current,\n          to: Math.min(current + AutoRowSize.CALCULATION_STEP, length)\n        }, colRange);\n\n        current = current + AutoRowSize.CALCULATION_STEP + 1;\n\n        if (current < length) {\n          timer = requestAnimationFrame(loop);\n        } else {\n          cancelAnimationFrame(timer);\n          _this4.inProgress = false; // @TODO Should call once per render cycle, currently fired separately in different plugins\n\n          _this4.hot.view.wt.wtOverlays.adjustElementsSize(true); // tmp\n\n\n          if (_this4.hot.view.wt.wtOverlays.leftOverlay.needFullRender) {\n            _this4.hot.view.wt.wtOverlays.leftOverlay.clone.draw();\n          }\n        }\n      };\n\n      var syncLimit = this.getSyncCalculationLimit(); // sync\n\n      if (this.firstCalculation && syncLimit >= 0) {\n        this.calculateRowsHeight({\n          from: 0,\n          to: syncLimit\n        }, colRange);\n        this.firstCalculation = false;\n        current = syncLimit + 1;\n      } // async\n\n\n      if (current < length) {\n        loop();\n      } else {\n        this.inProgress = false;\n        this.hot.view.wt.wtOverlays.adjustElementsSize(false);\n      }\n    }\n    /**\n     * Sets the sampling options.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"setSamplingOptions\",\n    value: function setSamplingOptions() {\n      var setting = this.hot.getSettings().autoRowSize;\n      var samplingRatio = setting && hasOwnProperty(setting, 'samplingRatio') ? this.hot.getSettings().autoRowSize.samplingRatio : void 0;\n      var allowSampleDuplicates = setting && hasOwnProperty(setting, 'allowSampleDuplicates') ? this.hot.getSettings().autoRowSize.allowSampleDuplicates : void 0;\n\n      if (samplingRatio && !isNaN(samplingRatio)) {\n        this.samplesGenerator.setSampleCount(parseInt(samplingRatio, 10));\n      }\n\n      if (allowSampleDuplicates) {\n        this.samplesGenerator.setAllowDuplicates(allowSampleDuplicates);\n      }\n    }\n    /**\n     * Recalculates all rows height (overwrite cache values).\n     */\n\n  }, {\n    key: \"recalculateAllRowsHeight\",\n    value: function recalculateAllRowsHeight() {\n      if (isVisible(this.hot.view.wt.wtTable.TABLE)) {\n        this.clearCache();\n        this.calculateAllRowsHeight();\n      }\n    }\n    /**\n     * Gets value which tells how many rows should be calculated synchronously (rest of the rows will be calculated\n     * asynchronously). The limit is calculated based on `syncLimit` set to autoRowSize option (see {@link Options#autoRowSize}).\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"getSyncCalculationLimit\",\n    value: function getSyncCalculationLimit() {\n      /* eslint-disable no-bitwise */\n      var limit = AutoRowSize.SYNC_CALCULATION_LIMIT;\n      var rowsLimit = this.hot.countRows() - 1;\n\n      if (isObject(this.hot.getSettings().autoRowSize)) {\n        limit = this.hot.getSettings().autoRowSize.syncLimit;\n\n        if (isPercentValue(limit)) {\n          limit = valueAccordingPercent(rowsLimit, limit);\n        } else {\n          // Force to Number\n          limit >>= 0;\n        }\n      }\n\n      return Math.min(limit, rowsLimit);\n    }\n    /**\n     * Gets the calculated row height.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} [defaultHeight] Default row height. It will be picked up if no calculated height found.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"getRowHeight\",\n    value: function getRowHeight(row) {\n      var defaultHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : void 0;\n      var height = defaultHeight;\n\n      if (this.heights[row] !== void 0 && this.heights[row] > (defaultHeight || 0)) {\n        height = this.heights[row];\n      }\n\n      return height;\n    }\n    /**\n     * Get the calculated column header height.\n     *\n     * @returns {Number|undefined}\n     */\n\n  }, {\n    key: \"getColumnHeaderHeight\",\n    value: function getColumnHeaderHeight() {\n      return this.heights[-1];\n    }\n    /**\n     * Get the first visible row.\n     *\n     * @returns {Number} Returns row index, -1 if table is not rendered or if there are no rows to base the the calculations on.\n     */\n\n  }, {\n    key: \"getFirstVisibleRow\",\n    value: function getFirstVisibleRow() {\n      var wot = this.hot.view.wt;\n\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getFirstVisibleRow();\n      }\n\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getFirstRenderedRow();\n      }\n\n      return -1;\n    }\n    /**\n     * Gets the last visible row.\n     *\n     * @returns {Number} Returns row index or -1 if table is not rendered.\n     */\n\n  }, {\n    key: \"getLastVisibleRow\",\n    value: function getLastVisibleRow() {\n      var wot = this.hot.view.wt;\n\n      if (wot.wtViewport.rowsVisibleCalculator) {\n        return wot.wtTable.getLastVisibleRow();\n      }\n\n      if (wot.wtViewport.rowsRenderCalculator) {\n        return wot.wtTable.getLastRenderedRow();\n      }\n\n      return -1;\n    }\n    /**\n     * Clears cached heights.\n     */\n\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this.heights.length = 0;\n      this.heights[-1] = void 0;\n    }\n    /**\n     * Clears cache by range.\n     *\n     * @param {Object|Number} range Row index or an object with `from` and `to` properties which define row range.\n     */\n\n  }, {\n    key: \"clearCacheByRange\",\n    value: function clearCacheByRange(range) {\n      var _this5 = this;\n\n      var _ref3 = typeof range === 'number' ? {\n        from: range,\n        to: range\n      } : range,\n          from = _ref3.from,\n          to = _ref3.to;\n\n      rangeEach(Math.min(from, to), Math.max(from, to), function (row) {\n        _this5.heights[row] = void 0;\n      });\n    }\n    /**\n     * Checks if all heights were calculated. If not then return `true` (need recalculate).\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isNeedRecalculate\",\n    value: function isNeedRecalculate() {\n      return !!arrayFilter(this.heights, function (item) {\n        return item === void 0;\n      }).length;\n    }\n    /**\n     * On before render listener.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onBeforeRender\",\n    value: function onBeforeRender() {\n      var force = this.hot.renderCall;\n      var fixedRowsBottom = this.hot.getSettings().fixedRowsBottom;\n      var firstVisibleRow = this.getFirstVisibleRow();\n      var lastVisibleRow = this.getLastVisibleRow();\n\n      if (firstVisibleRow === -1 || lastVisibleRow === -1) {\n        return;\n      }\n\n      this.calculateRowsHeight({\n        from: firstVisibleRow,\n        to: lastVisibleRow\n      }, void 0, force); // Calculate rows height synchronously for bottom overlay\n\n      if (fixedRowsBottom) {\n        var totalRows = this.hot.countRows() - 1;\n        this.calculateRowsHeight({\n          from: totalRows - fixedRowsBottom,\n          to: totalRows\n        });\n      }\n\n      if (this.isNeedRecalculate() && !this.inProgress) {\n        this.calculateAllRowsHeight();\n      }\n    }\n    /**\n     * On before row move listener.\n     *\n     * @private\n     * @param {Number} from Row index where was grabbed.\n     * @param {Number} to Destination row index.\n     */\n\n  }, {\n    key: \"onBeforeRowMove\",\n    value: function onBeforeRowMove(from, to) {\n      this.clearCacheByRange({\n        from: from,\n        to: to\n      });\n      this.calculateAllRowsHeight();\n    }\n    /**\n     * On before row resize listener.\n     *\n     * @private\n     * @param {Number} row\n     * @param {Number} size\n     * @param {Boolean} isDblClick\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"onBeforeRowResize\",\n    value: function onBeforeRowResize(row, size, isDblClick) {\n      var newSize = size;\n\n      if (isDblClick) {\n        this.calculateRowsHeight(row, void 0, true);\n        newSize = this.getRowHeight(row);\n      }\n\n      return newSize;\n    }\n    /**\n     * On after load data listener.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterLoadData\",\n    value: function onAfterLoadData() {\n      var _this6 = this;\n\n      if (this.hot.view) {\n        this.recalculateAllRowsHeight();\n      } else {\n        // first load - initialization\n        setTimeout(function () {\n          if (_this6.hot) {\n            _this6.recalculateAllRowsHeight();\n          }\n        }, 0);\n      }\n    }\n    /**\n     * On before change listener.\n     *\n     * @private\n     * @param {Array} changes\n     */\n\n  }, {\n    key: \"onBeforeChange\",\n    value: function onBeforeChange(changes) {\n      var range = null;\n\n      if (changes.length === 1) {\n        range = changes[0][0];\n      } else if (changes.length > 1) {\n        range = {\n          from: changes[0][0],\n          to: changes[changes.length - 1][0]\n        };\n      }\n\n      if (range !== null) {\n        this.clearCacheByRange(range);\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.ghostTable.clean();\n\n      _get(_getPrototypeOf(AutoRowSize.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return AutoRowSize;\n}(BasePlugin);\n\nregisterPlugin('autoRowSize', AutoRowSize);\nexport default AutoRowSize;"],"mappings":"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"},"metadata":{},"sourceType":"module"}