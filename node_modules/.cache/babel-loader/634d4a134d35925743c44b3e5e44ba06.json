{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get(target, property, receiver || target);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport BasePlugin from './../_base';\nimport Hooks from './../../pluginHooks';\nimport { offset, outerHeight, outerWidth } from './../../helpers/dom/element';\nimport { arrayEach } from './../../helpers/array';\nimport { rangeEach } from './../../helpers/number';\nimport EventManager from './../../eventManager';\nimport { registerPlugin } from './../../plugins';\nimport { CellCoords } from './../../3rdparty/walkontable/src';\nimport { getDeltas, getDragDirectionAndRange, DIRECTIONS, getMappedFillHandleSetting } from './utils';\nHooks.getSingleton().register('modifyAutofillRange');\nHooks.getSingleton().register('beforeAutofill');\nvar INSERT_ROW_ALTER_ACTION_NAME = 'insert_row';\nvar INTERVAL_FOR_ADDING_ROW = 200;\n/**\n * This plugin provides \"drag-down\" and \"copy-down\" functionalities, both operated using the small square in the right\n * bottom of the cell selection.\n *\n * \"Drag-down\" expands the value of the selected cells to the neighbouring cells when you drag the small square in the corner.\n *\n * \"Copy-down\" copies the value of the selection to all empty cells below when you double click the small square.\n *\n * @class Autofill\n * @plugin Autofill\n */\n\nvar Autofill = /*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(Autofill, _BasePlugin);\n  function Autofill(hotInstance) {\n    var _this;\n    _classCallCheck(this, Autofill);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Autofill).call(this, hotInstance));\n    /**\n     * Event manager instance.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    _this.eventManager = new EventManager(_assertThisInitialized(_this));\n    /**\n     * Specifies if adding new row started.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.addingStarted = false;\n    /**\n     * Specifies if there was mouse down on the cell corner.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.mouseDownOnCellCorner = false;\n    /**\n     * Specifies if mouse was dragged outside Handsontable.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.mouseDragOutside = false;\n    /**\n     * Specifies how many cell levels were dragged using the handle.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.handleDraggedCells = 0;\n    /**\n     * Specifies allowed directions of drag (`'horizontal'` or '`vertical`').\n     *\n     * @private\n     * @type {String[]}\n     */\n\n    _this.directions = [];\n    /**\n     * Specifies if can insert new rows if needed.\n     *\n     * @type {Boolean}\n     */\n\n    _this.autoInsertRow = false;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the Handsontable settings.\n   *\n   * @returns {Boolean}\n   */\n\n  _createClass(Autofill, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.hot.getSettings().fillHandle;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      this.mapSettings();\n      this.registerEvents();\n      this.addHook('afterOnCellCornerMouseDown', function (event) {\n        return _this2.onAfterCellCornerMouseDown(event);\n      });\n      this.addHook('afterOnCellCornerDblClick', function (event) {\n        return _this2.onCellCornerDblClick(event);\n      });\n      this.addHook('beforeOnCellMouseOver', function (event, coords) {\n        return _this2.onBeforeCellMouseOver(coords);\n      });\n      _get(_getPrototypeOf(Autofill.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      _get(_getPrototypeOf(Autofill.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.clearMappedSettings();\n      _get(_getPrototypeOf(Autofill.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Prepares copyable ranges from the cells selection.\n     *\n     * @private\n     * @returns {Object[]} ranges Array of objects with properties `startRow`, `startCol`, `endRow` and `endCol`.\n     */\n  }, {\n    key: \"getCopyableRanges\",\n    value: function getCopyableRanges() {\n      var selRange = this.hot.getSelectedRangeLast();\n      var topLeft = selRange.getTopLeftCorner();\n      var bottomRight = selRange.getBottomRightCorner();\n      var startRow = topLeft.row;\n      var startCol = topLeft.col;\n      var endRow = bottomRight.row;\n      var endCol = bottomRight.col;\n      var copyableRanges = [];\n      copyableRanges.push({\n        startRow: startRow,\n        startCol: startCol,\n        endRow: endRow,\n        endCol: endCol\n      });\n      copyableRanges = this.hot.runHooks('modifyCopyableRange', copyableRanges);\n      return copyableRanges;\n    }\n    /**\n     * Gets selection data\n     *\n     * @private\n     * @returns {Array} Array with the data.\n     */\n  }, {\n    key: \"getSelectionData\",\n    value: function getSelectionData() {\n      var _this3 = this;\n      var copyableRanges = this.getCopyableRanges();\n      var copyableRows = [];\n      var copyableColumns = [];\n      var data = [];\n      arrayEach(copyableRanges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      });\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this3.hot.getCopyableData(row, column));\n        });\n        data.push(rowSet);\n      });\n      return data;\n    }\n    /**\n     * Try to apply fill values to the area in fill border, omitting the selection border.\n     *\n     * @private\n     * @returns {Boolean} reports if fill was applied.\n     *\n     * @fires Hooks#modifyAutofillRange\n     * @fires Hooks#beforeAutofill\n     */\n  }, {\n    key: \"fillIn\",\n    value: function fillIn() {\n      if (this.hot.selection.highlight.getFill().isEmpty()) {\n        return false;\n      }\n      var cornersOfSelectionAndDragAreas = this.hot.selection.highlight.getFill().getCorners();\n      this.resetSelectionOfDraggedArea();\n      var cornersOfSelectedCells = this.getCornersOfSelectedCells();\n      cornersOfSelectionAndDragAreas = this.hot.runHooks('modifyAutofillRange', cornersOfSelectionAndDragAreas, cornersOfSelectedCells);\n      var _getDragDirectionAndR = getDragDirectionAndRange(cornersOfSelectedCells, cornersOfSelectionAndDragAreas),\n        directionOfDrag = _getDragDirectionAndR.directionOfDrag,\n        startOfDragCoords = _getDragDirectionAndR.startOfDragCoords,\n        endOfDragCoords = _getDragDirectionAndR.endOfDragCoords;\n      if (startOfDragCoords && startOfDragCoords.row > -1 && startOfDragCoords.col > -1) {\n        var selectionData = this.getSelectionData();\n        this.hot.runHooks('beforeAutofill', startOfDragCoords, endOfDragCoords, selectionData);\n        var deltas = getDeltas(startOfDragCoords, endOfDragCoords, selectionData, directionOfDrag);\n        var fillData = selectionData;\n        if (['up', 'left'].indexOf(directionOfDrag) > -1) {\n          fillData = [];\n          var dragLength = null;\n          var fillOffset = null;\n          if (directionOfDrag === 'up') {\n            dragLength = endOfDragCoords.row - startOfDragCoords.row + 1;\n            fillOffset = dragLength % selectionData.length;\n            for (var i = 0; i < dragLength; i++) {\n              fillData.push(selectionData[(i + (selectionData.length - fillOffset)) % selectionData.length]);\n            }\n          } else {\n            dragLength = endOfDragCoords.col - startOfDragCoords.col + 1;\n            fillOffset = dragLength % selectionData[0].length;\n            for (var _i = 0; _i < selectionData.length; _i++) {\n              fillData.push([]);\n              for (var j = 0; j < dragLength; j++) {\n                fillData[_i].push(selectionData[_i][(j + (selectionData[_i].length - fillOffset)) % selectionData[_i].length]);\n              }\n            }\n          }\n        }\n        this.hot.populateFromArray(startOfDragCoords.row, startOfDragCoords.col, fillData, endOfDragCoords.row, endOfDragCoords.col, \"\".concat(this.pluginName, \".fill\"), null, directionOfDrag, deltas);\n        this.setSelection(cornersOfSelectionAndDragAreas);\n      } else {\n        // reset to avoid some range bug\n        this.hot._refreshBorders();\n      }\n      return true;\n    }\n    /**\n     * Reduces the selection area if the handle was dragged outside of the table or on headers.\n     *\n     * @private\n     * @param {CellCoords} coords indexes of selection corners.\n     * @returns {CellCoords}\n     */\n  }, {\n    key: \"reduceSelectionAreaIfNeeded\",\n    value: function reduceSelectionAreaIfNeeded(coords) {\n      if (coords.row < 0) {\n        coords.row = 0;\n      }\n      if (coords.col < 0) {\n        coords.col = 0;\n      }\n      return coords;\n    }\n    /**\n     * Gets the coordinates of the drag & drop borders.\n     *\n     * @private\n     * @param {CellCoords} coordsOfSelection `CellCoords` coord object.\n     * @returns {Array}\n     */\n  }, {\n    key: \"getCoordsOfDragAndDropBorders\",\n    value: function getCoordsOfDragAndDropBorders(coordsOfSelection) {\n      var topLeftCorner = this.hot.getSelectedRangeLast().getTopLeftCorner();\n      var bottomRightCorner = this.hot.getSelectedRangeLast().getBottomRightCorner();\n      var coords;\n      if (this.directions.includes(DIRECTIONS.vertical) && (bottomRightCorner.row < coordsOfSelection.row || topLeftCorner.row > coordsOfSelection.row)) {\n        coords = new CellCoords(coordsOfSelection.row, bottomRightCorner.col);\n      } else if (this.directions.includes(DIRECTIONS.horizontal)) {\n        coords = new CellCoords(bottomRightCorner.row, coordsOfSelection.col);\n      } else {\n        // wrong direction\n        return;\n      }\n      return this.reduceSelectionAreaIfNeeded(coords);\n    }\n    /**\n     * Show the fill border.\n     *\n     * @private\n     * @param {CellCoords} coordsOfSelection `CellCoords` coord object.\n     */\n  }, {\n    key: \"showBorder\",\n    value: function showBorder(coordsOfSelection) {\n      var coordsOfDragAndDropBorders = this.getCoordsOfDragAndDropBorders(coordsOfSelection);\n      if (coordsOfDragAndDropBorders) {\n        this.redrawBorders(coordsOfDragAndDropBorders);\n      }\n    }\n    /**\n     * Add new row\n     *\n     * @private\n     */\n  }, {\n    key: \"addRow\",\n    value: function addRow() {\n      var _this4 = this;\n      this.hot._registerTimeout(setTimeout(function () {\n        _this4.hot.alter(INSERT_ROW_ALTER_ACTION_NAME, void 0, 1, \"\".concat(_this4.pluginName, \".fill\"));\n        _this4.addingStarted = false;\n      }, INTERVAL_FOR_ADDING_ROW));\n    }\n    /**\n     * Add new rows if they are needed to continue auto-filling values.\n     *\n     * @private\n     */\n  }, {\n    key: \"addNewRowIfNeeded\",\n    value: function addNewRowIfNeeded() {\n      if (this.hot.selection.highlight.getFill().cellRange && this.addingStarted === false && this.autoInsertRow) {\n        var cornersOfSelectedCells = this.hot.getSelectedLast();\n        var cornersOfSelectedDragArea = this.hot.selection.highlight.getFill().getCorners();\n        var nrOfTableRows = this.hot.countRows();\n        if (cornersOfSelectedCells[2] < nrOfTableRows - 1 && cornersOfSelectedDragArea[2] === nrOfTableRows - 1) {\n          this.addingStarted = true;\n          this.addRow();\n        }\n      }\n    }\n    /**\n     * Get corners of selected cells.\n     *\n     * @private\n     * @returns {Array}\n     */\n  }, {\n    key: \"getCornersOfSelectedCells\",\n    value: function getCornersOfSelectedCells() {\n      if (this.hot.selection.isMultiple()) {\n        return this.hot.selection.highlight.createOrGetArea().getCorners();\n      }\n      return this.hot.selection.highlight.getCell().getCorners();\n    }\n    /**\n     * Get index of last adjacent filled in row\n     *\n     * @private\n     * @param {Array} cornersOfSelectedCells indexes of selection corners.\n     * @returns {Number} gives number greater than or equal to zero when selection adjacent can be applied.\n     * or -1 when selection adjacent can't be applied\n     */\n  }, {\n    key: \"getIndexOfLastAdjacentFilledInRow\",\n    value: function getIndexOfLastAdjacentFilledInRow(cornersOfSelectedCells) {\n      var data = this.hot.getData();\n      var nrOfTableRows = this.hot.countRows();\n      var lastFilledInRowIndex;\n      for (var rowIndex = cornersOfSelectedCells[2] + 1; rowIndex < nrOfTableRows; rowIndex++) {\n        for (var columnIndex = cornersOfSelectedCells[1]; columnIndex <= cornersOfSelectedCells[3]; columnIndex++) {\n          var dataInCell = data[rowIndex][columnIndex];\n          if (dataInCell) {\n            return -1;\n          }\n        }\n        var dataInNextLeftCell = data[rowIndex][cornersOfSelectedCells[1] - 1];\n        var dataInNextRightCell = data[rowIndex][cornersOfSelectedCells[3] + 1];\n        if (!!dataInNextLeftCell || !!dataInNextRightCell) {\n          lastFilledInRowIndex = rowIndex;\n        }\n      }\n      return lastFilledInRowIndex;\n    }\n    /**\n     * Adds a selection from the start area to the specific row index.\n     *\n     * @private\n     * @param {Array} selectStartArea selection area from which we start to create more comprehensive selection.\n     * @param {Number} rowIndex\n     */\n  }, {\n    key: \"addSelectionFromStartAreaToSpecificRowIndex\",\n    value: function addSelectionFromStartAreaToSpecificRowIndex(selectStartArea, rowIndex) {\n      this.hot.selection.highlight.getFill().clear().add(new CellCoords(selectStartArea[0], selectStartArea[1])).add(new CellCoords(rowIndex, selectStartArea[3]));\n    }\n    /**\n     * Sets selection based on passed corners.\n     *\n     * @private\n     * @param {Array} cornersOfArea\n     */\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(cornersOfArea) {\n      var _this$hot;\n      (_this$hot = this.hot).selectCell.apply(_this$hot, _toConsumableArray(cornersOfArea).concat([false, false]));\n    }\n    /**\n     * Try to select cells down to the last row in the left column and then returns if selection was applied.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"selectAdjacent\",\n    value: function selectAdjacent() {\n      var cornersOfSelectedCells = this.getCornersOfSelectedCells();\n      var lastFilledInRowIndex = this.getIndexOfLastAdjacentFilledInRow(cornersOfSelectedCells);\n      if (lastFilledInRowIndex === -1 || lastFilledInRowIndex === void 0) {\n        return false;\n      }\n      this.addSelectionFromStartAreaToSpecificRowIndex(cornersOfSelectedCells, lastFilledInRowIndex);\n      return true;\n    }\n    /**\n     * Resets selection of dragged area.\n     *\n     * @private\n     */\n  }, {\n    key: \"resetSelectionOfDraggedArea\",\n    value: function resetSelectionOfDraggedArea() {\n      this.handleDraggedCells = 0;\n      this.hot.selection.highlight.getFill().clear();\n    }\n    /**\n     * Redraws borders.\n     *\n     * @private\n     * @param {CellCoords} coords `CellCoords` coord object.\n     */\n  }, {\n    key: \"redrawBorders\",\n    value: function redrawBorders(coords) {\n      this.hot.selection.highlight.getFill().clear().add(this.hot.getSelectedRangeLast().from).add(this.hot.getSelectedRangeLast().to).add(coords);\n      this.hot.view.render();\n    }\n    /**\n     * Get if mouse was dragged outside.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"getIfMouseWasDraggedOutside\",\n    value: function getIfMouseWasDraggedOutside(event) {\n      var documentElement = this.hot.rootDocument.documentElement;\n      var tableBottom = offset(this.hot.table).top - (this.hot.rootWindow.pageYOffset || documentElement.scrollTop) + outerHeight(this.hot.table);\n      var tableRight = offset(this.hot.table).left - (this.hot.rootWindow.pageXOffset || documentElement.scrollLeft) + outerWidth(this.hot.table);\n      return event.clientY > tableBottom && event.clientX <= tableRight;\n    }\n    /**\n     * Bind the events used by the plugin.\n     *\n     * @private\n     */\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this5 = this;\n      var documentElement = this.hot.rootDocument.documentElement;\n      this.eventManager.addEventListener(documentElement, 'mouseup', function () {\n        return _this5.onMouseUp();\n      });\n      this.eventManager.addEventListener(documentElement, 'mousemove', function (event) {\n        return _this5.onMouseMove(event);\n      });\n    }\n    /**\n     * On cell corner double click callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onCellCornerDblClick\",\n    value: function onCellCornerDblClick() {\n      var selectionApplied = this.selectAdjacent();\n      if (selectionApplied) {\n        this.fillIn();\n      }\n    }\n    /**\n     * On after cell corner mouse down listener.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterCellCornerMouseDown\",\n    value: function onAfterCellCornerMouseDown() {\n      this.handleDraggedCells = 1;\n      this.mouseDownOnCellCorner = true;\n    }\n    /**\n     * On before cell mouse over listener.\n     *\n     * @private\n     * @param {CellCoords} coords `CellCoords` coord object.\n     */\n  }, {\n    key: \"onBeforeCellMouseOver\",\n    value: function onBeforeCellMouseOver(coords) {\n      if (this.mouseDownOnCellCorner && !this.hot.view.isMouseDown() && this.handleDraggedCells) {\n        this.handleDraggedCells += 1;\n        this.showBorder(coords);\n        this.addNewRowIfNeeded();\n      }\n    }\n    /**\n     * On mouse up listener.\n     *\n     * @private\n     */\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      if (this.handleDraggedCells) {\n        if (this.handleDraggedCells > 1) {\n          this.fillIn();\n        }\n        this.handleDraggedCells = 0;\n        this.mouseDownOnCellCorner = false;\n      }\n    }\n    /**\n     * On mouse move listener.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      var mouseWasDraggedOutside = this.getIfMouseWasDraggedOutside(event);\n      if (this.addingStarted === false && this.handleDraggedCells > 0 && mouseWasDraggedOutside) {\n        this.mouseDragOutside = true;\n        this.addingStarted = true;\n      } else {\n        this.mouseDragOutside = false;\n      }\n      if (this.mouseDragOutside && this.autoInsertRow) {\n        this.addRow();\n      }\n    }\n    /**\n     * Clears mapped settings.\n     *\n     * @private\n     */\n  }, {\n    key: \"clearMappedSettings\",\n    value: function clearMappedSettings() {\n      this.directions.length = 0;\n      this.autoInsertRow = false;\n    }\n    /**\n     * Map settings.\n     *\n     * @private\n     */\n  }, {\n    key: \"mapSettings\",\n    value: function mapSettings() {\n      var mappedSettings = getMappedFillHandleSetting(this.hot.getSettings().fillHandle);\n      this.directions = mappedSettings.directions;\n      this.autoInsertRow = mappedSettings.autoInsertRow;\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(Autofill.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n  return Autofill;\n}(BasePlugin);\nregisterPlugin('autofill', Autofill);\nexport default Autofill;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Object","toString","call","Array","from","isArray","i","arr2","length","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","value","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","Hooks","offset","outerHeight","outerWidth","arrayEach","rangeEach","EventManager","registerPlugin","CellCoords","getDeltas","getDragDirectionAndRange","DIRECTIONS","getMappedFillHandleSetting","getSingleton","register","INSERT_ROW_ALTER_ACTION_NAME","INTERVAL_FOR_ADDING_ROW","Autofill","_BasePlugin","hotInstance","_this","eventManager","addingStarted","mouseDownOnCellCorner","mouseDragOutside","handleDraggedCells","directions","autoInsertRow","isEnabled","hot","getSettings","fillHandle","enablePlugin","_this2","enabled","mapSettings","registerEvents","addHook","event","onAfterCellCornerMouseDown","onCellCornerDblClick","coords","onBeforeCellMouseOver","updatePlugin","disablePlugin","clearMappedSettings","getCopyableRanges","selRange","getSelectedRangeLast","topLeft","getTopLeftCorner","bottomRight","getBottomRightCorner","startRow","row","startCol","col","endRow","endCol","copyableRanges","push","runHooks","getSelectionData","_this3","copyableRows","copyableColumns","data","range","indexOf","column","rowSet","getCopyableData","fillIn","selection","highlight","getFill","isEmpty","cornersOfSelectionAndDragAreas","getCorners","resetSelectionOfDraggedArea","cornersOfSelectedCells","getCornersOfSelectedCells","_getDragDirectionAndR","directionOfDrag","startOfDragCoords","endOfDragCoords","selectionData","deltas","fillData","dragLength","fillOffset","_i","j","populateFromArray","concat","pluginName","setSelection","_refreshBorders","reduceSelectionAreaIfNeeded","getCoordsOfDragAndDropBorders","coordsOfSelection","topLeftCorner","bottomRightCorner","includes","vertical","horizontal","showBorder","coordsOfDragAndDropBorders","redrawBorders","addRow","_this4","_registerTimeout","setTimeout","alter","addNewRowIfNeeded","cellRange","getSelectedLast","cornersOfSelectedDragArea","nrOfTableRows","countRows","isMultiple","createOrGetArea","getCell","getIndexOfLastAdjacentFilledInRow","getData","lastFilledInRowIndex","rowIndex","columnIndex","dataInCell","dataInNextLeftCell","dataInNextRightCell","addSelectionFromStartAreaToSpecificRowIndex","selectStartArea","clear","add","cornersOfArea","_this$hot","selectCell","apply","selectAdjacent","to","view","render","getIfMouseWasDraggedOutside","documentElement","rootDocument","tableBottom","table","top","rootWindow","pageYOffset","scrollTop","tableRight","left","pageXOffset","scrollLeft","clientY","clientX","_this5","addEventListener","onMouseUp","onMouseMove","selectionApplied","isMouseDown","mouseWasDraggedOutside","mappedSettings","destroy"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/plugins/autofill/autofill.js"],"sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.includes\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/web.timers\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from './../_base';\nimport Hooks from './../../pluginHooks';\nimport { offset, outerHeight, outerWidth } from './../../helpers/dom/element';\nimport { arrayEach } from './../../helpers/array';\nimport { rangeEach } from './../../helpers/number';\nimport EventManager from './../../eventManager';\nimport { registerPlugin } from './../../plugins';\nimport { CellCoords } from './../../3rdparty/walkontable/src';\nimport { getDeltas, getDragDirectionAndRange, DIRECTIONS, getMappedFillHandleSetting } from './utils';\nHooks.getSingleton().register('modifyAutofillRange');\nHooks.getSingleton().register('beforeAutofill');\nvar INSERT_ROW_ALTER_ACTION_NAME = 'insert_row';\nvar INTERVAL_FOR_ADDING_ROW = 200;\n/**\n * This plugin provides \"drag-down\" and \"copy-down\" functionalities, both operated using the small square in the right\n * bottom of the cell selection.\n *\n * \"Drag-down\" expands the value of the selected cells to the neighbouring cells when you drag the small square in the corner.\n *\n * \"Copy-down\" copies the value of the selection to all empty cells below when you double click the small square.\n *\n * @class Autofill\n * @plugin Autofill\n */\n\nvar Autofill =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(Autofill, _BasePlugin);\n\n  function Autofill(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, Autofill);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Autofill).call(this, hotInstance));\n    /**\n     * Event manager instance.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    _this.eventManager = new EventManager(_assertThisInitialized(_this));\n    /**\n     * Specifies if adding new row started.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.addingStarted = false;\n    /**\n     * Specifies if there was mouse down on the cell corner.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.mouseDownOnCellCorner = false;\n    /**\n     * Specifies if mouse was dragged outside Handsontable.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.mouseDragOutside = false;\n    /**\n     * Specifies how many cell levels were dragged using the handle.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.handleDraggedCells = 0;\n    /**\n     * Specifies allowed directions of drag (`'horizontal'` or '`vertical`').\n     *\n     * @private\n     * @type {String[]}\n     */\n\n    _this.directions = [];\n    /**\n     * Specifies if can insert new rows if needed.\n     *\n     * @type {Boolean}\n     */\n\n    _this.autoInsertRow = false;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the Handsontable settings.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(Autofill, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.hot.getSettings().fillHandle;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.mapSettings();\n      this.registerEvents();\n      this.addHook('afterOnCellCornerMouseDown', function (event) {\n        return _this2.onAfterCellCornerMouseDown(event);\n      });\n      this.addHook('afterOnCellCornerDblClick', function (event) {\n        return _this2.onCellCornerDblClick(event);\n      });\n      this.addHook('beforeOnCellMouseOver', function (event, coords) {\n        return _this2.onBeforeCellMouseOver(coords);\n      });\n\n      _get(_getPrototypeOf(Autofill.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(Autofill.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.clearMappedSettings();\n\n      _get(_getPrototypeOf(Autofill.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Prepares copyable ranges from the cells selection.\n     *\n     * @private\n     * @returns {Object[]} ranges Array of objects with properties `startRow`, `startCol`, `endRow` and `endCol`.\n     */\n\n  }, {\n    key: \"getCopyableRanges\",\n    value: function getCopyableRanges() {\n      var selRange = this.hot.getSelectedRangeLast();\n      var topLeft = selRange.getTopLeftCorner();\n      var bottomRight = selRange.getBottomRightCorner();\n      var startRow = topLeft.row;\n      var startCol = topLeft.col;\n      var endRow = bottomRight.row;\n      var endCol = bottomRight.col;\n      var copyableRanges = [];\n      copyableRanges.push({\n        startRow: startRow,\n        startCol: startCol,\n        endRow: endRow,\n        endCol: endCol\n      });\n      copyableRanges = this.hot.runHooks('modifyCopyableRange', copyableRanges);\n      return copyableRanges;\n    }\n    /**\n     * Gets selection data\n     *\n     * @private\n     * @returns {Array} Array with the data.\n     */\n\n  }, {\n    key: \"getSelectionData\",\n    value: function getSelectionData() {\n      var _this3 = this;\n\n      var copyableRanges = this.getCopyableRanges();\n      var copyableRows = [];\n      var copyableColumns = [];\n      var data = [];\n      arrayEach(copyableRanges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      });\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this3.hot.getCopyableData(row, column));\n        });\n        data.push(rowSet);\n      });\n      return data;\n    }\n    /**\n     * Try to apply fill values to the area in fill border, omitting the selection border.\n     *\n     * @private\n     * @returns {Boolean} reports if fill was applied.\n     *\n     * @fires Hooks#modifyAutofillRange\n     * @fires Hooks#beforeAutofill\n     */\n\n  }, {\n    key: \"fillIn\",\n    value: function fillIn() {\n      if (this.hot.selection.highlight.getFill().isEmpty()) {\n        return false;\n      }\n\n      var cornersOfSelectionAndDragAreas = this.hot.selection.highlight.getFill().getCorners();\n      this.resetSelectionOfDraggedArea();\n      var cornersOfSelectedCells = this.getCornersOfSelectedCells();\n      cornersOfSelectionAndDragAreas = this.hot.runHooks('modifyAutofillRange', cornersOfSelectionAndDragAreas, cornersOfSelectedCells);\n\n      var _getDragDirectionAndR = getDragDirectionAndRange(cornersOfSelectedCells, cornersOfSelectionAndDragAreas),\n          directionOfDrag = _getDragDirectionAndR.directionOfDrag,\n          startOfDragCoords = _getDragDirectionAndR.startOfDragCoords,\n          endOfDragCoords = _getDragDirectionAndR.endOfDragCoords;\n\n      if (startOfDragCoords && startOfDragCoords.row > -1 && startOfDragCoords.col > -1) {\n        var selectionData = this.getSelectionData();\n        this.hot.runHooks('beforeAutofill', startOfDragCoords, endOfDragCoords, selectionData);\n        var deltas = getDeltas(startOfDragCoords, endOfDragCoords, selectionData, directionOfDrag);\n        var fillData = selectionData;\n\n        if (['up', 'left'].indexOf(directionOfDrag) > -1) {\n          fillData = [];\n          var dragLength = null;\n          var fillOffset = null;\n\n          if (directionOfDrag === 'up') {\n            dragLength = endOfDragCoords.row - startOfDragCoords.row + 1;\n            fillOffset = dragLength % selectionData.length;\n\n            for (var i = 0; i < dragLength; i++) {\n              fillData.push(selectionData[(i + (selectionData.length - fillOffset)) % selectionData.length]);\n            }\n          } else {\n            dragLength = endOfDragCoords.col - startOfDragCoords.col + 1;\n            fillOffset = dragLength % selectionData[0].length;\n\n            for (var _i = 0; _i < selectionData.length; _i++) {\n              fillData.push([]);\n\n              for (var j = 0; j < dragLength; j++) {\n                fillData[_i].push(selectionData[_i][(j + (selectionData[_i].length - fillOffset)) % selectionData[_i].length]);\n              }\n            }\n          }\n        }\n\n        this.hot.populateFromArray(startOfDragCoords.row, startOfDragCoords.col, fillData, endOfDragCoords.row, endOfDragCoords.col, \"\".concat(this.pluginName, \".fill\"), null, directionOfDrag, deltas);\n        this.setSelection(cornersOfSelectionAndDragAreas);\n      } else {\n        // reset to avoid some range bug\n        this.hot._refreshBorders();\n      }\n\n      return true;\n    }\n    /**\n     * Reduces the selection area if the handle was dragged outside of the table or on headers.\n     *\n     * @private\n     * @param {CellCoords} coords indexes of selection corners.\n     * @returns {CellCoords}\n     */\n\n  }, {\n    key: \"reduceSelectionAreaIfNeeded\",\n    value: function reduceSelectionAreaIfNeeded(coords) {\n      if (coords.row < 0) {\n        coords.row = 0;\n      }\n\n      if (coords.col < 0) {\n        coords.col = 0;\n      }\n\n      return coords;\n    }\n    /**\n     * Gets the coordinates of the drag & drop borders.\n     *\n     * @private\n     * @param {CellCoords} coordsOfSelection `CellCoords` coord object.\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getCoordsOfDragAndDropBorders\",\n    value: function getCoordsOfDragAndDropBorders(coordsOfSelection) {\n      var topLeftCorner = this.hot.getSelectedRangeLast().getTopLeftCorner();\n      var bottomRightCorner = this.hot.getSelectedRangeLast().getBottomRightCorner();\n      var coords;\n\n      if (this.directions.includes(DIRECTIONS.vertical) && (bottomRightCorner.row < coordsOfSelection.row || topLeftCorner.row > coordsOfSelection.row)) {\n        coords = new CellCoords(coordsOfSelection.row, bottomRightCorner.col);\n      } else if (this.directions.includes(DIRECTIONS.horizontal)) {\n        coords = new CellCoords(bottomRightCorner.row, coordsOfSelection.col);\n      } else {\n        // wrong direction\n        return;\n      }\n\n      return this.reduceSelectionAreaIfNeeded(coords);\n    }\n    /**\n     * Show the fill border.\n     *\n     * @private\n     * @param {CellCoords} coordsOfSelection `CellCoords` coord object.\n     */\n\n  }, {\n    key: \"showBorder\",\n    value: function showBorder(coordsOfSelection) {\n      var coordsOfDragAndDropBorders = this.getCoordsOfDragAndDropBorders(coordsOfSelection);\n\n      if (coordsOfDragAndDropBorders) {\n        this.redrawBorders(coordsOfDragAndDropBorders);\n      }\n    }\n    /**\n     * Add new row\n     *\n     * @private\n     */\n\n  }, {\n    key: \"addRow\",\n    value: function addRow() {\n      var _this4 = this;\n\n      this.hot._registerTimeout(setTimeout(function () {\n        _this4.hot.alter(INSERT_ROW_ALTER_ACTION_NAME, void 0, 1, \"\".concat(_this4.pluginName, \".fill\"));\n\n        _this4.addingStarted = false;\n      }, INTERVAL_FOR_ADDING_ROW));\n    }\n    /**\n     * Add new rows if they are needed to continue auto-filling values.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"addNewRowIfNeeded\",\n    value: function addNewRowIfNeeded() {\n      if (this.hot.selection.highlight.getFill().cellRange && this.addingStarted === false && this.autoInsertRow) {\n        var cornersOfSelectedCells = this.hot.getSelectedLast();\n        var cornersOfSelectedDragArea = this.hot.selection.highlight.getFill().getCorners();\n        var nrOfTableRows = this.hot.countRows();\n\n        if (cornersOfSelectedCells[2] < nrOfTableRows - 1 && cornersOfSelectedDragArea[2] === nrOfTableRows - 1) {\n          this.addingStarted = true;\n          this.addRow();\n        }\n      }\n    }\n    /**\n     * Get corners of selected cells.\n     *\n     * @private\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getCornersOfSelectedCells\",\n    value: function getCornersOfSelectedCells() {\n      if (this.hot.selection.isMultiple()) {\n        return this.hot.selection.highlight.createOrGetArea().getCorners();\n      }\n\n      return this.hot.selection.highlight.getCell().getCorners();\n    }\n    /**\n     * Get index of last adjacent filled in row\n     *\n     * @private\n     * @param {Array} cornersOfSelectedCells indexes of selection corners.\n     * @returns {Number} gives number greater than or equal to zero when selection adjacent can be applied.\n     * or -1 when selection adjacent can't be applied\n     */\n\n  }, {\n    key: \"getIndexOfLastAdjacentFilledInRow\",\n    value: function getIndexOfLastAdjacentFilledInRow(cornersOfSelectedCells) {\n      var data = this.hot.getData();\n      var nrOfTableRows = this.hot.countRows();\n      var lastFilledInRowIndex;\n\n      for (var rowIndex = cornersOfSelectedCells[2] + 1; rowIndex < nrOfTableRows; rowIndex++) {\n        for (var columnIndex = cornersOfSelectedCells[1]; columnIndex <= cornersOfSelectedCells[3]; columnIndex++) {\n          var dataInCell = data[rowIndex][columnIndex];\n\n          if (dataInCell) {\n            return -1;\n          }\n        }\n\n        var dataInNextLeftCell = data[rowIndex][cornersOfSelectedCells[1] - 1];\n        var dataInNextRightCell = data[rowIndex][cornersOfSelectedCells[3] + 1];\n\n        if (!!dataInNextLeftCell || !!dataInNextRightCell) {\n          lastFilledInRowIndex = rowIndex;\n        }\n      }\n\n      return lastFilledInRowIndex;\n    }\n    /**\n     * Adds a selection from the start area to the specific row index.\n     *\n     * @private\n     * @param {Array} selectStartArea selection area from which we start to create more comprehensive selection.\n     * @param {Number} rowIndex\n     */\n\n  }, {\n    key: \"addSelectionFromStartAreaToSpecificRowIndex\",\n    value: function addSelectionFromStartAreaToSpecificRowIndex(selectStartArea, rowIndex) {\n      this.hot.selection.highlight.getFill().clear().add(new CellCoords(selectStartArea[0], selectStartArea[1])).add(new CellCoords(rowIndex, selectStartArea[3]));\n    }\n    /**\n     * Sets selection based on passed corners.\n     *\n     * @private\n     * @param {Array} cornersOfArea\n     */\n\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(cornersOfArea) {\n      var _this$hot;\n\n      (_this$hot = this.hot).selectCell.apply(_this$hot, _toConsumableArray(cornersOfArea).concat([false, false]));\n    }\n    /**\n     * Try to select cells down to the last row in the left column and then returns if selection was applied.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"selectAdjacent\",\n    value: function selectAdjacent() {\n      var cornersOfSelectedCells = this.getCornersOfSelectedCells();\n      var lastFilledInRowIndex = this.getIndexOfLastAdjacentFilledInRow(cornersOfSelectedCells);\n\n      if (lastFilledInRowIndex === -1 || lastFilledInRowIndex === void 0) {\n        return false;\n      }\n\n      this.addSelectionFromStartAreaToSpecificRowIndex(cornersOfSelectedCells, lastFilledInRowIndex);\n      return true;\n    }\n    /**\n     * Resets selection of dragged area.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"resetSelectionOfDraggedArea\",\n    value: function resetSelectionOfDraggedArea() {\n      this.handleDraggedCells = 0;\n      this.hot.selection.highlight.getFill().clear();\n    }\n    /**\n     * Redraws borders.\n     *\n     * @private\n     * @param {CellCoords} coords `CellCoords` coord object.\n     */\n\n  }, {\n    key: \"redrawBorders\",\n    value: function redrawBorders(coords) {\n      this.hot.selection.highlight.getFill().clear().add(this.hot.getSelectedRangeLast().from).add(this.hot.getSelectedRangeLast().to).add(coords);\n      this.hot.view.render();\n    }\n    /**\n     * Get if mouse was dragged outside.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"getIfMouseWasDraggedOutside\",\n    value: function getIfMouseWasDraggedOutside(event) {\n      var documentElement = this.hot.rootDocument.documentElement;\n      var tableBottom = offset(this.hot.table).top - (this.hot.rootWindow.pageYOffset || documentElement.scrollTop) + outerHeight(this.hot.table);\n      var tableRight = offset(this.hot.table).left - (this.hot.rootWindow.pageXOffset || documentElement.scrollLeft) + outerWidth(this.hot.table);\n      return event.clientY > tableBottom && event.clientX <= tableRight;\n    }\n    /**\n     * Bind the events used by the plugin.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerEvents\",\n    value: function registerEvents() {\n      var _this5 = this;\n\n      var documentElement = this.hot.rootDocument.documentElement;\n      this.eventManager.addEventListener(documentElement, 'mouseup', function () {\n        return _this5.onMouseUp();\n      });\n      this.eventManager.addEventListener(documentElement, 'mousemove', function (event) {\n        return _this5.onMouseMove(event);\n      });\n    }\n    /**\n     * On cell corner double click callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onCellCornerDblClick\",\n    value: function onCellCornerDblClick() {\n      var selectionApplied = this.selectAdjacent();\n\n      if (selectionApplied) {\n        this.fillIn();\n      }\n    }\n    /**\n     * On after cell corner mouse down listener.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterCellCornerMouseDown\",\n    value: function onAfterCellCornerMouseDown() {\n      this.handleDraggedCells = 1;\n      this.mouseDownOnCellCorner = true;\n    }\n    /**\n     * On before cell mouse over listener.\n     *\n     * @private\n     * @param {CellCoords} coords `CellCoords` coord object.\n     */\n\n  }, {\n    key: \"onBeforeCellMouseOver\",\n    value: function onBeforeCellMouseOver(coords) {\n      if (this.mouseDownOnCellCorner && !this.hot.view.isMouseDown() && this.handleDraggedCells) {\n        this.handleDraggedCells += 1;\n        this.showBorder(coords);\n        this.addNewRowIfNeeded();\n      }\n    }\n    /**\n     * On mouse up listener.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      if (this.handleDraggedCells) {\n        if (this.handleDraggedCells > 1) {\n          this.fillIn();\n        }\n\n        this.handleDraggedCells = 0;\n        this.mouseDownOnCellCorner = false;\n      }\n    }\n    /**\n     * On mouse move listener.\n     *\n     * @private\n     * @param {MouseEvent} event `mousemove` event properties.\n     */\n\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      var mouseWasDraggedOutside = this.getIfMouseWasDraggedOutside(event);\n\n      if (this.addingStarted === false && this.handleDraggedCells > 0 && mouseWasDraggedOutside) {\n        this.mouseDragOutside = true;\n        this.addingStarted = true;\n      } else {\n        this.mouseDragOutside = false;\n      }\n\n      if (this.mouseDragOutside && this.autoInsertRow) {\n        this.addRow();\n      }\n    }\n    /**\n     * Clears mapped settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"clearMappedSettings\",\n    value: function clearMappedSettings() {\n      this.directions.length = 0;\n      this.autoInsertRow = false;\n    }\n    /**\n     * Map settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"mapSettings\",\n    value: function mapSettings() {\n      var mappedSettings = getMappedFillHandleSetting(this.hot.getSettings().fillHandle);\n      this.directions = mappedSettings.directions;\n      this.autoInsertRow = mappedSettings.autoInsertRow;\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(Autofill.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return Autofill;\n}(BasePlugin);\n\nregisterPlugin('autofill', Autofill);\nexport default Autofill;"],"mappings":"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"},"metadata":{},"sourceType":"module"}