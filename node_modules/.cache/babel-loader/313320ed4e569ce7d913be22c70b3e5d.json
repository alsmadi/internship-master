{"ast":null,"code":"import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.weak-map\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get(target, property, receiver || target);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport BasePlugin from './../_base';\nimport Hooks from './../../pluginHooks';\nimport SheetClip from './../../../lib/SheetClip/SheetClip';\nimport { arrayEach } from './../../helpers/array';\nimport { rangeEach } from './../../helpers/number';\nimport { getSelectionText } from './../../helpers/dom/element';\nimport { registerPlugin } from './../../plugins';\nimport copyItem from './contextMenuItem/copy';\nimport cutItem from './contextMenuItem/cut';\nimport PasteEvent from './pasteEvent';\nimport { createElement, destroyElement } from './focusableElement';\nimport { _dataToHTML, htmlToGridSettings } from './../../utils/parseTable';\nHooks.getSingleton().register('afterCopyLimit');\nHooks.getSingleton().register('modifyCopyableRange');\nHooks.getSingleton().register('beforeCut');\nHooks.getSingleton().register('afterCut');\nHooks.getSingleton().register('beforePaste');\nHooks.getSingleton().register('afterPaste');\nHooks.getSingleton().register('beforeCopy');\nHooks.getSingleton().register('afterCopy');\nvar ROWS_LIMIT = 1000;\nvar COLUMNS_LIMIT = 1000;\nvar privatePool = new WeakMap();\nvar META_HEAD = ['<meta name=\"generator\" content=\"Handsontable\"/>', '<style type=\"text/css\">td{white-space:normal}br{mso-data-placement:same-cell}</style>'].join('');\n/**\n * @description\n * This plugin enables the copy/paste functionality in the Handsontable. The functionality works for API, Context Menu,\n * using keyboard shortcuts and menu bar from the browser.\n * Possible values:\n * * `true` (to enable default options),\n * * `false` (to disable completely)\n *\n * or an object with values:\n * * `'columnsLimit'` (see {@link CopyPaste#columnsLimit})\n * * `'rowsLimit'` (see {@link CopyPaste#rowsLimit})\n * * `'pasteMode'` (see {@link CopyPaste#pasteMode})\n * * `'uiContainer'` (see {@link CopyPaste#uiContainer})\n *\n * See [the copy/paste demo](https://handsontable.com/docs/demo-copy-paste.html) for examples.\n *\n * @example\n * ```js\n * // Enables the plugin with default values\n * copyPaste: true,\n * // Enables the plugin with custom values\n * copyPaste: {\n *   columnsLimit: 25,\n *   rowsLimit: 50,\n *   pasteMode: 'shift_down',\n *   uiContainer: document.body,\n * },\n * ```\n * @class CopyPaste\n * @plugin CopyPaste\n */\n\nvar CopyPaste = /*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(CopyPaste, _BasePlugin);\n  function CopyPaste(hotInstance) {\n    var _this;\n    _classCallCheck(this, CopyPaste);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CopyPaste).call(this, hotInstance));\n    /**\n     * Maximum number of columns than can be copied to clipboard using <kbd>CTRL</kbd> + <kbd>C</kbd>.\n     *\n     * @type {Number}\n     * @default 1000\n     */\n\n    _this.columnsLimit = COLUMNS_LIMIT;\n    /**\n     * Ranges of the cells coordinates, which should be used to copy/cut/paste actions.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.copyableRanges = [];\n    /**\n     * Provides focusable element to support IME and copy/paste/cut actions.\n     *\n     * @type {FocusableWrapper}\n     */\n\n    _this.focusableElement = void 0;\n    /**\n     * Defines paste (<kbd>CTRL</kbd> + <kbd>V</kbd>) behavior.\n     * * Default value `\"overwrite\"` will paste clipboard value over current selection.\n     * * When set to `\"shift_down\"`, clipboard data will be pasted in place of current selection, while all selected cells are moved down.\n     * * When set to `\"shift_right\"`, clipboard data will be pasted in place of current selection, while all selected cells are moved right.\n     *\n     * @type {String}\n     * @default 'overwrite'\n     */\n\n    _this.pasteMode = 'overwrite';\n    /**\n     * Maximum number of rows than can be copied to clipboard using <kbd>CTRL</kbd> + <kbd>C</kbd>.\n     *\n     * @type {Number}\n     * @default 1000\n     */\n\n    _this.rowsLimit = ROWS_LIMIT;\n    /**\n     * UI container for the secondary focusable element.\n     *\n     * @type {HTMLElement}\n     */\n\n    _this.uiContainer = _this.hot.rootDocument.body;\n    privatePool.set(_assertThisInitialized(_this), {\n      isTriggeredByCopy: false,\n      isTriggeredByCut: false,\n      isBeginEditing: false,\n      isFragmentSelectionEnabled: false\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link CopyPaste#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n  _createClass(CopyPaste, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().copyPaste;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      var _this$hot$getSettings = this.hot.getSettings(),\n        settings = _this$hot$getSettings.copyPaste,\n        fragmentSelection = _this$hot$getSettings.fragmentSelection;\n      var priv = privatePool.get(this);\n      priv.isFragmentSelectionEnabled = !!fragmentSelection;\n      if (_typeof(settings) === 'object') {\n        this.pasteMode = settings.pasteMode || this.pasteMode;\n        this.rowsLimit = isNaN(settings.rowsLimit) ? this.rowsLimit : settings.rowsLimit;\n        this.columnsLimit = isNaN(settings.columnsLimit) ? this.columnsLimit : settings.columnsLimit;\n        this.uiContainer = settings.uiContainer || this.uiContainer;\n      }\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterOnCellMouseUp', function () {\n        return _this2.onAfterOnCellMouseUp();\n      });\n      this.addHook('afterSelectionEnd', function () {\n        return _this2.onAfterSelectionEnd();\n      });\n      this.addHook('beforeKeyDown', function () {\n        return _this2.onBeforeKeyDown();\n      });\n      this.focusableElement = createElement(this.uiContainer);\n      this.focusableElement.addLocalHook('copy', function (event) {\n        return _this2.onCopy(event);\n      }).addLocalHook('cut', function (event) {\n        return _this2.onCut(event);\n      }).addLocalHook('paste', function (event) {\n        return _this2.onPaste(event);\n      });\n      _get(_getPrototypeOf(CopyPaste.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.getOrCreateFocusableElement();\n      _get(_getPrototypeOf(CopyPaste.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      if (this.focusableElement) {\n        destroyElement(this.focusableElement);\n      }\n      _get(_getPrototypeOf(CopyPaste.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Copies the selected cell into the clipboard.\n     */\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      var priv = privatePool.get(this);\n      priv.isTriggeredByCopy = true;\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n      this.hot.rootDocument.execCommand('copy');\n    }\n    /**\n     * Cuts the selected cell into the clipboard.\n     */\n  }, {\n    key: \"cut\",\n    value: function cut() {\n      var priv = privatePool.get(this);\n      priv.isTriggeredByCut = true;\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n      this.hot.rootDocument.execCommand('cut');\n    }\n    /**\n     * Creates copyable text releated to range objects.\n     *\n     * @param {Object[]} ranges Array of objects with properties `startRow`, `endRow`, `startCol` and `endCol`.\n     * @returns {String} Returns string which will be copied into clipboard.\n     */\n  }, {\n    key: \"getRangedCopyableData\",\n    value: function getRangedCopyableData(ranges) {\n      var _this3 = this;\n      var dataSet = [];\n      var copyableRows = [];\n      var copyableColumns = []; // Count all copyable rows and columns\n\n      arrayEach(ranges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      }); // Concat all rows and columns data defined in ranges into one copyable string\n\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this3.hot.getCopyableData(row, column));\n        });\n        dataSet.push(rowSet);\n      });\n      return SheetClip.stringify(dataSet);\n    }\n    /**\n     * Creates copyable text releated to range objects.\n     *\n     * @param {Object[]} ranges Array of objects with properties `startRow`, `startCol`, `endRow` and `endCol`.\n     * @returns {Array[]} Returns array of arrays which will be copied into clipboard.\n     */\n  }, {\n    key: \"getRangedData\",\n    value: function getRangedData(ranges) {\n      var _this4 = this;\n      var dataSet = [];\n      var copyableRows = [];\n      var copyableColumns = []; // Count all copyable rows and columns\n\n      arrayEach(ranges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      }); // Concat all rows and columns data defined in ranges into one copyable string\n\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this4.hot.getCopyableData(row, column));\n        });\n        dataSet.push(rowSet);\n      });\n      return dataSet;\n    }\n    /**\n     * Simulates the paste action.\n     *\n     * @param {String} [value] Value to paste.\n     */\n  }, {\n    key: \"paste\",\n    value: function paste() {\n      var pastableText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var pastableHtml = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pastableText;\n      if (!pastableText && !pastableHtml) {\n        return;\n      }\n      var pasteData = new PasteEvent();\n      if (pastableText) {\n        pasteData.clipboardData.setData('text/plain', pastableText);\n      }\n      if (pastableHtml) {\n        pasteData.clipboardData.setData('text/html', pastableHtml);\n      }\n      this.getOrCreateFocusableElement();\n      this.onPaste(pasteData);\n    }\n    /**\n     * Prepares copyable text from the cells selection in the invisible textarea.\n     */\n  }, {\n    key: \"setCopyableText\",\n    value: function setCopyableText() {\n      var selRange = this.hot.getSelectedRangeLast();\n      if (!selRange) {\n        return;\n      }\n      var topLeft = selRange.getTopLeftCorner();\n      var bottomRight = selRange.getBottomRightCorner();\n      var startRow = topLeft.row;\n      var startCol = topLeft.col;\n      var endRow = bottomRight.row;\n      var endCol = bottomRight.col;\n      var finalEndRow = Math.min(endRow, startRow + this.rowsLimit - 1);\n      var finalEndCol = Math.min(endCol, startCol + this.columnsLimit - 1);\n      this.copyableRanges.length = 0;\n      this.copyableRanges.push({\n        startRow: startRow,\n        startCol: startCol,\n        endRow: finalEndRow,\n        endCol: finalEndCol\n      });\n      this.copyableRanges = this.hot.runHooks('modifyCopyableRange', this.copyableRanges);\n      if (endRow !== finalEndRow || endCol !== finalEndCol) {\n        this.hot.runHooks('afterCopyLimit', endRow - startRow + 1, endCol - startCol + 1, this.rowsLimit, this.columnsLimit);\n      }\n    }\n    /**\n     * Force focus on editable element.\n     *\n     * @private\n     */\n  }, {\n    key: \"getOrCreateFocusableElement\",\n    value: function getOrCreateFocusableElement() {\n      var editor = this.hot.getActiveEditor();\n      var editableElement = editor ? editor.TEXTAREA : void 0;\n      if (editableElement) {\n        this.focusableElement.setFocusableElement(editableElement);\n      } else {\n        this.focusableElement.useSecondaryElement();\n      }\n    }\n    /**\n     * Verifies if editor exists and is open.\n     *\n     * @private\n     */\n  }, {\n    key: \"isEditorOpened\",\n    value: function isEditorOpened() {\n      var editor = this.hot.getActiveEditor();\n      return editor && editor.isOpened();\n    }\n    /**\n     * Prepares new values to populate them into datasource.\n     *\n     * @private\n     * @param {Array} inputArray\n     * @param {Array} selection\n     * @returns {Array} Range coordinates after populate data\n     */\n  }, {\n    key: \"populateValues\",\n    value: function populateValues(inputArray) {\n      var selection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.hot.getSelectedLast();\n      if (!inputArray.length) {\n        return;\n      }\n      var newValuesMaxRow = inputArray.length - 1;\n      var newValuesMaxColumn = inputArray[0].length - 1;\n      var startRow = Math.min(selection[0], selection[2]);\n      var endRow = Math.max(selection[0], selection[2], newValuesMaxRow + startRow);\n      var startColumn = Math.min(selection[1], selection[3]);\n      var endColumn = Math.max(selection[1], selection[3], newValuesMaxColumn + startColumn);\n      var newValues = [];\n      for (var row = startRow, valuesRow = 0; row <= endRow; row += 1) {\n        var newRow = [];\n        for (var column = startColumn, valuesColumn = 0; column <= endColumn; column += 1) {\n          newRow.push(inputArray[valuesRow][valuesColumn]);\n          valuesColumn = valuesColumn === newValuesMaxColumn ? 0 : valuesColumn += 1;\n        }\n        newValues.push(newRow);\n        valuesRow = valuesRow === newValuesMaxRow ? 0 : valuesRow += 1;\n      }\n      this.hot.populateFromArray(startRow, startColumn, newValues, void 0, void 0, 'CopyPaste.paste', this.pasteMode);\n      return [startRow, startColumn, endRow, endColumn];\n    }\n    /**\n     * `copy` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent.\n     * @private\n     */\n  }, {\n    key: \"onCopy\",\n    value: function onCopy(event) {\n      var priv = privatePool.get(this);\n      if (!this.hot.isListening() && !priv.isTriggeredByCopy || this.isEditorOpened()) {\n        return;\n      }\n      this.setCopyableText();\n      priv.isTriggeredByCopy = false;\n      var rangedData = this.getRangedData(this.copyableRanges);\n      var allowCopying = !!this.hot.runHooks('beforeCopy', rangedData, this.copyableRanges);\n      if (allowCopying) {\n        var textPlain = SheetClip.stringify(rangedData);\n        if (event && event.clipboardData) {\n          var textHTML = _dataToHTML(rangedData, this.hot.rootDocument);\n          event.clipboardData.setData('text/plain', textPlain);\n          event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n        } else if (typeof ClipboardEvent === 'undefined') {\n          this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n        }\n        this.hot.runHooks('afterCopy', rangedData, this.copyableRanges);\n      }\n      event.preventDefault();\n    }\n    /**\n     * `cut` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent.\n     * @private\n     */\n  }, {\n    key: \"onCut\",\n    value: function onCut(event) {\n      var priv = privatePool.get(this);\n      if (!this.hot.isListening() && !priv.isTriggeredByCut || this.isEditorOpened()) {\n        return;\n      }\n      this.setCopyableText();\n      priv.isTriggeredByCut = false;\n      var rangedData = this.getRangedData(this.copyableRanges);\n      var allowCuttingOut = !!this.hot.runHooks('beforeCut', rangedData, this.copyableRanges);\n      if (allowCuttingOut) {\n        var textPlain = SheetClip.stringify(rangedData);\n        if (event && event.clipboardData) {\n          var textHTML = _dataToHTML(rangedData, this.hot.rootDocument);\n          event.clipboardData.setData('text/plain', textPlain);\n          event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n        } else if (typeof ClipboardEvent === 'undefined') {\n          this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n        }\n        this.hot.emptySelectedCells('CopyPaste.cut');\n        this.hot.runHooks('afterCut', rangedData, this.copyableRanges);\n      }\n      event.preventDefault();\n    }\n    /**\n     * `paste` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent or pseudo ClipboardEvent, if paste was called manually.\n     * @private\n     */\n  }, {\n    key: \"onPaste\",\n    value: function onPaste(event) {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      var pastedData;\n      if (event && typeof event.clipboardData !== 'undefined') {\n        var textHTML = event.clipboardData.getData('text/html');\n        if (textHTML && /(<table)|(<TABLE)/g.test(textHTML)) {\n          var parsedConfig = htmlToGridSettings(textHTML, this.hot.rootDocument);\n          pastedData = parsedConfig.data;\n        } else {\n          pastedData = event.clipboardData.getData('text/plain');\n        }\n      } else if (typeof ClipboardEvent === 'undefined' && typeof this.hot.rootWindow.clipboardData !== 'undefined') {\n        pastedData = this.hot.rootWindow.clipboardData.getData('Text');\n      }\n      if (typeof pastedData === 'string') {\n        pastedData = SheetClip.parse(pastedData);\n      }\n      if (pastedData && pastedData.length === 0) {\n        return;\n      }\n      if (this.hot.runHooks('beforePaste', pastedData, this.copyableRanges) === false) {\n        return;\n      }\n      var _this$populateValues = this.populateValues(pastedData),\n        _this$populateValues2 = _slicedToArray(_this$populateValues, 4),\n        startRow = _this$populateValues2[0],\n        startColumn = _this$populateValues2[1],\n        endRow = _this$populateValues2[2],\n        endColumn = _this$populateValues2[3];\n      this.hot.selectCell(startRow, startColumn, Math.min(this.hot.countRows() - 1, endRow), Math.min(this.hot.countCols() - 1, endColumn));\n      this.hot.runHooks('afterPaste', pastedData, this.copyableRanges);\n    }\n    /**\n     * Add copy, cut and paste options to the Context Menu.\n     *\n     * @private\n     * @param {Object} options Contains default added options of the Context Menu.\n     */\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: '---------'\n      }, copyItem(this), cutItem(this));\n    }\n    /**\n     * Force focus on focusableElement.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterOnCellMouseUp\",\n    value: function onAfterOnCellMouseUp() {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n    }\n    /**\n     * Force focus on focusableElement after end of the selection.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterSelectionEnd\",\n    value: function onAfterSelectionEnd() {\n      var _privatePool$get = privatePool.get(this),\n        isFragmentSelectionEnabled = _privatePool$get.isFragmentSelectionEnabled;\n      if (this.isEditorOpened()) {\n        return;\n      }\n      this.getOrCreateFocusableElement();\n      if (isFragmentSelectionEnabled && this.focusableElement.getFocusableElement() !== this.hot.rootDocument.activeElement && getSelectionText()) {\n        return;\n      }\n      this.setCopyableText();\n      this.focusableElement.focus();\n    }\n    /**\n     * `beforeKeyDown` listener to force focus of focusableElement.\n     *\n     * @private\n     */\n  }, {\n    key: \"onBeforeKeyDown\",\n    value: function onBeforeKeyDown() {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n      var activeElement = this.hot.rootDocument.activeElement;\n      var activeEditor = this.hot.getActiveEditor();\n      if (!activeEditor || activeElement !== this.focusableElement.getFocusableElement() && activeElement !== activeEditor.select) {\n        return;\n      }\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.focusableElement) {\n        destroyElement(this.focusableElement);\n        this.focusableElement = null;\n      }\n      _get(_getPrototypeOf(CopyPaste.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n  return CopyPaste;\n}(BasePlugin);\nregisterPlugin('CopyPaste', CopyPaste);\nexport default CopyPaste;","map":{"version":3,"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","_typeof","obj","constructor","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","Hooks","SheetClip","arrayEach","rangeEach","getSelectionText","registerPlugin","copyItem","cutItem","PasteEvent","createElement","destroyElement","_dataToHTML","htmlToGridSettings","getSingleton","register","ROWS_LIMIT","COLUMNS_LIMIT","privatePool","WeakMap","META_HEAD","join","CopyPaste","_BasePlugin","hotInstance","_this","columnsLimit","copyableRanges","focusableElement","pasteMode","rowsLimit","uiContainer","hot","rootDocument","body","set","isTriggeredByCopy","isTriggeredByCut","isBeginEditing","isFragmentSelectionEnabled","isEnabled","getSettings","copyPaste","enablePlugin","_this2","enabled","_this$hot$getSettings","settings","fragmentSelection","priv","isNaN","addHook","options","onAfterContextMenuDefaultOptions","onAfterOnCellMouseUp","onAfterSelectionEnd","onBeforeKeyDown","addLocalHook","event","onCopy","onCut","onPaste","updatePlugin","disablePlugin","getOrCreateFocusableElement","copy","focus","execCommand","cut","getRangedCopyableData","ranges","_this3","dataSet","copyableRows","copyableColumns","range","startRow","endRow","row","indexOf","startCol","endCol","column","rowSet","getCopyableData","stringify","getRangedData","_this4","paste","pastableText","arguments","pastableHtml","pasteData","clipboardData","setData","setCopyableText","selRange","getSelectedRangeLast","topLeft","getTopLeftCorner","bottomRight","getBottomRightCorner","col","finalEndRow","Math","min","finalEndCol","runHooks","editor","getActiveEditor","editableElement","TEXTAREA","setFocusableElement","useSecondaryElement","isEditorOpened","isOpened","populateValues","inputArray","selection","getSelectedLast","newValuesMaxRow","newValuesMaxColumn","max","startColumn","endColumn","newValues","valuesRow","newRow","valuesColumn","populateFromArray","isListening","rangedData","allowCopying","textPlain","textHTML","ClipboardEvent","rootWindow","preventDefault","allowCuttingOut","emptySelectedCells","pastedData","getData","test","parsedConfig","data","parse","_this$populateValues","_this$populateValues2","selectCell","countRows","countCols","items","name","_privatePool$get","getFocusableElement","activeElement","activeEditor","select","destroy"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/plugins/copyPaste/copyPaste.js"],"sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.weak-map\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from './../_base';\nimport Hooks from './../../pluginHooks';\nimport SheetClip from './../../../lib/SheetClip/SheetClip';\nimport { arrayEach } from './../../helpers/array';\nimport { rangeEach } from './../../helpers/number';\nimport { getSelectionText } from './../../helpers/dom/element';\nimport { registerPlugin } from './../../plugins';\nimport copyItem from './contextMenuItem/copy';\nimport cutItem from './contextMenuItem/cut';\nimport PasteEvent from './pasteEvent';\nimport { createElement, destroyElement } from './focusableElement';\nimport { _dataToHTML, htmlToGridSettings } from './../../utils/parseTable';\nHooks.getSingleton().register('afterCopyLimit');\nHooks.getSingleton().register('modifyCopyableRange');\nHooks.getSingleton().register('beforeCut');\nHooks.getSingleton().register('afterCut');\nHooks.getSingleton().register('beforePaste');\nHooks.getSingleton().register('afterPaste');\nHooks.getSingleton().register('beforeCopy');\nHooks.getSingleton().register('afterCopy');\nvar ROWS_LIMIT = 1000;\nvar COLUMNS_LIMIT = 1000;\nvar privatePool = new WeakMap();\nvar META_HEAD = ['<meta name=\"generator\" content=\"Handsontable\"/>', '<style type=\"text/css\">td{white-space:normal}br{mso-data-placement:same-cell}</style>'].join('');\n/**\n * @description\n * This plugin enables the copy/paste functionality in the Handsontable. The functionality works for API, Context Menu,\n * using keyboard shortcuts and menu bar from the browser.\n * Possible values:\n * * `true` (to enable default options),\n * * `false` (to disable completely)\n *\n * or an object with values:\n * * `'columnsLimit'` (see {@link CopyPaste#columnsLimit})\n * * `'rowsLimit'` (see {@link CopyPaste#rowsLimit})\n * * `'pasteMode'` (see {@link CopyPaste#pasteMode})\n * * `'uiContainer'` (see {@link CopyPaste#uiContainer})\n *\n * See [the copy/paste demo](https://handsontable.com/docs/demo-copy-paste.html) for examples.\n *\n * @example\n * ```js\n * // Enables the plugin with default values\n * copyPaste: true,\n * // Enables the plugin with custom values\n * copyPaste: {\n *   columnsLimit: 25,\n *   rowsLimit: 50,\n *   pasteMode: 'shift_down',\n *   uiContainer: document.body,\n * },\n * ```\n * @class CopyPaste\n * @plugin CopyPaste\n */\n\nvar CopyPaste =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(CopyPaste, _BasePlugin);\n\n  function CopyPaste(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, CopyPaste);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CopyPaste).call(this, hotInstance));\n    /**\n     * Maximum number of columns than can be copied to clipboard using <kbd>CTRL</kbd> + <kbd>C</kbd>.\n     *\n     * @type {Number}\n     * @default 1000\n     */\n\n    _this.columnsLimit = COLUMNS_LIMIT;\n    /**\n     * Ranges of the cells coordinates, which should be used to copy/cut/paste actions.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.copyableRanges = [];\n    /**\n     * Provides focusable element to support IME and copy/paste/cut actions.\n     *\n     * @type {FocusableWrapper}\n     */\n\n    _this.focusableElement = void 0;\n    /**\n     * Defines paste (<kbd>CTRL</kbd> + <kbd>V</kbd>) behavior.\n     * * Default value `\"overwrite\"` will paste clipboard value over current selection.\n     * * When set to `\"shift_down\"`, clipboard data will be pasted in place of current selection, while all selected cells are moved down.\n     * * When set to `\"shift_right\"`, clipboard data will be pasted in place of current selection, while all selected cells are moved right.\n     *\n     * @type {String}\n     * @default 'overwrite'\n     */\n\n    _this.pasteMode = 'overwrite';\n    /**\n     * Maximum number of rows than can be copied to clipboard using <kbd>CTRL</kbd> + <kbd>C</kbd>.\n     *\n     * @type {Number}\n     * @default 1000\n     */\n\n    _this.rowsLimit = ROWS_LIMIT;\n    /**\n     * UI container for the secondary focusable element.\n     *\n     * @type {HTMLElement}\n     */\n\n    _this.uiContainer = _this.hot.rootDocument.body;\n    privatePool.set(_assertThisInitialized(_this), {\n      isTriggeredByCopy: false,\n      isTriggeredByCut: false,\n      isBeginEditing: false,\n      isFragmentSelectionEnabled: false\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link CopyPaste#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(CopyPaste, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().copyPaste;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      var _this$hot$getSettings = this.hot.getSettings(),\n          settings = _this$hot$getSettings.copyPaste,\n          fragmentSelection = _this$hot$getSettings.fragmentSelection;\n\n      var priv = privatePool.get(this);\n      priv.isFragmentSelectionEnabled = !!fragmentSelection;\n\n      if (_typeof(settings) === 'object') {\n        this.pasteMode = settings.pasteMode || this.pasteMode;\n        this.rowsLimit = isNaN(settings.rowsLimit) ? this.rowsLimit : settings.rowsLimit;\n        this.columnsLimit = isNaN(settings.columnsLimit) ? this.columnsLimit : settings.columnsLimit;\n        this.uiContainer = settings.uiContainer || this.uiContainer;\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterOnCellMouseUp', function () {\n        return _this2.onAfterOnCellMouseUp();\n      });\n      this.addHook('afterSelectionEnd', function () {\n        return _this2.onAfterSelectionEnd();\n      });\n      this.addHook('beforeKeyDown', function () {\n        return _this2.onBeforeKeyDown();\n      });\n      this.focusableElement = createElement(this.uiContainer);\n      this.focusableElement.addLocalHook('copy', function (event) {\n        return _this2.onCopy(event);\n      }).addLocalHook('cut', function (event) {\n        return _this2.onCut(event);\n      }).addLocalHook('paste', function (event) {\n        return _this2.onPaste(event);\n      });\n\n      _get(_getPrototypeOf(CopyPaste.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.getOrCreateFocusableElement();\n\n      _get(_getPrototypeOf(CopyPaste.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      if (this.focusableElement) {\n        destroyElement(this.focusableElement);\n      }\n\n      _get(_getPrototypeOf(CopyPaste.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Copies the selected cell into the clipboard.\n     */\n\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      var priv = privatePool.get(this);\n      priv.isTriggeredByCopy = true;\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n      this.hot.rootDocument.execCommand('copy');\n    }\n    /**\n     * Cuts the selected cell into the clipboard.\n     */\n\n  }, {\n    key: \"cut\",\n    value: function cut() {\n      var priv = privatePool.get(this);\n      priv.isTriggeredByCut = true;\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n      this.hot.rootDocument.execCommand('cut');\n    }\n    /**\n     * Creates copyable text releated to range objects.\n     *\n     * @param {Object[]} ranges Array of objects with properties `startRow`, `endRow`, `startCol` and `endCol`.\n     * @returns {String} Returns string which will be copied into clipboard.\n     */\n\n  }, {\n    key: \"getRangedCopyableData\",\n    value: function getRangedCopyableData(ranges) {\n      var _this3 = this;\n\n      var dataSet = [];\n      var copyableRows = [];\n      var copyableColumns = []; // Count all copyable rows and columns\n\n      arrayEach(ranges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      }); // Concat all rows and columns data defined in ranges into one copyable string\n\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this3.hot.getCopyableData(row, column));\n        });\n        dataSet.push(rowSet);\n      });\n      return SheetClip.stringify(dataSet);\n    }\n    /**\n     * Creates copyable text releated to range objects.\n     *\n     * @param {Object[]} ranges Array of objects with properties `startRow`, `startCol`, `endRow` and `endCol`.\n     * @returns {Array[]} Returns array of arrays which will be copied into clipboard.\n     */\n\n  }, {\n    key: \"getRangedData\",\n    value: function getRangedData(ranges) {\n      var _this4 = this;\n\n      var dataSet = [];\n      var copyableRows = [];\n      var copyableColumns = []; // Count all copyable rows and columns\n\n      arrayEach(ranges, function (range) {\n        rangeEach(range.startRow, range.endRow, function (row) {\n          if (copyableRows.indexOf(row) === -1) {\n            copyableRows.push(row);\n          }\n        });\n        rangeEach(range.startCol, range.endCol, function (column) {\n          if (copyableColumns.indexOf(column) === -1) {\n            copyableColumns.push(column);\n          }\n        });\n      }); // Concat all rows and columns data defined in ranges into one copyable string\n\n      arrayEach(copyableRows, function (row) {\n        var rowSet = [];\n        arrayEach(copyableColumns, function (column) {\n          rowSet.push(_this4.hot.getCopyableData(row, column));\n        });\n        dataSet.push(rowSet);\n      });\n      return dataSet;\n    }\n    /**\n     * Simulates the paste action.\n     *\n     * @param {String} [value] Value to paste.\n     */\n\n  }, {\n    key: \"paste\",\n    value: function paste() {\n      var pastableText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var pastableHtml = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pastableText;\n\n      if (!pastableText && !pastableHtml) {\n        return;\n      }\n\n      var pasteData = new PasteEvent();\n\n      if (pastableText) {\n        pasteData.clipboardData.setData('text/plain', pastableText);\n      }\n\n      if (pastableHtml) {\n        pasteData.clipboardData.setData('text/html', pastableHtml);\n      }\n\n      this.getOrCreateFocusableElement();\n      this.onPaste(pasteData);\n    }\n    /**\n     * Prepares copyable text from the cells selection in the invisible textarea.\n     */\n\n  }, {\n    key: \"setCopyableText\",\n    value: function setCopyableText() {\n      var selRange = this.hot.getSelectedRangeLast();\n\n      if (!selRange) {\n        return;\n      }\n\n      var topLeft = selRange.getTopLeftCorner();\n      var bottomRight = selRange.getBottomRightCorner();\n      var startRow = topLeft.row;\n      var startCol = topLeft.col;\n      var endRow = bottomRight.row;\n      var endCol = bottomRight.col;\n      var finalEndRow = Math.min(endRow, startRow + this.rowsLimit - 1);\n      var finalEndCol = Math.min(endCol, startCol + this.columnsLimit - 1);\n      this.copyableRanges.length = 0;\n      this.copyableRanges.push({\n        startRow: startRow,\n        startCol: startCol,\n        endRow: finalEndRow,\n        endCol: finalEndCol\n      });\n      this.copyableRanges = this.hot.runHooks('modifyCopyableRange', this.copyableRanges);\n\n      if (endRow !== finalEndRow || endCol !== finalEndCol) {\n        this.hot.runHooks('afterCopyLimit', endRow - startRow + 1, endCol - startCol + 1, this.rowsLimit, this.columnsLimit);\n      }\n    }\n    /**\n     * Force focus on editable element.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"getOrCreateFocusableElement\",\n    value: function getOrCreateFocusableElement() {\n      var editor = this.hot.getActiveEditor();\n      var editableElement = editor ? editor.TEXTAREA : void 0;\n\n      if (editableElement) {\n        this.focusableElement.setFocusableElement(editableElement);\n      } else {\n        this.focusableElement.useSecondaryElement();\n      }\n    }\n    /**\n     * Verifies if editor exists and is open.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"isEditorOpened\",\n    value: function isEditorOpened() {\n      var editor = this.hot.getActiveEditor();\n      return editor && editor.isOpened();\n    }\n    /**\n     * Prepares new values to populate them into datasource.\n     *\n     * @private\n     * @param {Array} inputArray\n     * @param {Array} selection\n     * @returns {Array} Range coordinates after populate data\n     */\n\n  }, {\n    key: \"populateValues\",\n    value: function populateValues(inputArray) {\n      var selection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.hot.getSelectedLast();\n\n      if (!inputArray.length) {\n        return;\n      }\n\n      var newValuesMaxRow = inputArray.length - 1;\n      var newValuesMaxColumn = inputArray[0].length - 1;\n      var startRow = Math.min(selection[0], selection[2]);\n      var endRow = Math.max(selection[0], selection[2], newValuesMaxRow + startRow);\n      var startColumn = Math.min(selection[1], selection[3]);\n      var endColumn = Math.max(selection[1], selection[3], newValuesMaxColumn + startColumn);\n      var newValues = [];\n\n      for (var row = startRow, valuesRow = 0; row <= endRow; row += 1) {\n        var newRow = [];\n\n        for (var column = startColumn, valuesColumn = 0; column <= endColumn; column += 1) {\n          newRow.push(inputArray[valuesRow][valuesColumn]);\n          valuesColumn = valuesColumn === newValuesMaxColumn ? 0 : valuesColumn += 1;\n        }\n\n        newValues.push(newRow);\n        valuesRow = valuesRow === newValuesMaxRow ? 0 : valuesRow += 1;\n      }\n\n      this.hot.populateFromArray(startRow, startColumn, newValues, void 0, void 0, 'CopyPaste.paste', this.pasteMode);\n      return [startRow, startColumn, endRow, endColumn];\n    }\n    /**\n     * `copy` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent.\n     * @private\n     */\n\n  }, {\n    key: \"onCopy\",\n    value: function onCopy(event) {\n      var priv = privatePool.get(this);\n\n      if (!this.hot.isListening() && !priv.isTriggeredByCopy || this.isEditorOpened()) {\n        return;\n      }\n\n      this.setCopyableText();\n      priv.isTriggeredByCopy = false;\n      var rangedData = this.getRangedData(this.copyableRanges);\n      var allowCopying = !!this.hot.runHooks('beforeCopy', rangedData, this.copyableRanges);\n\n      if (allowCopying) {\n        var textPlain = SheetClip.stringify(rangedData);\n\n        if (event && event.clipboardData) {\n          var textHTML = _dataToHTML(rangedData, this.hot.rootDocument);\n\n          event.clipboardData.setData('text/plain', textPlain);\n          event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n        } else if (typeof ClipboardEvent === 'undefined') {\n          this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n        }\n\n        this.hot.runHooks('afterCopy', rangedData, this.copyableRanges);\n      }\n\n      event.preventDefault();\n    }\n    /**\n     * `cut` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent.\n     * @private\n     */\n\n  }, {\n    key: \"onCut\",\n    value: function onCut(event) {\n      var priv = privatePool.get(this);\n\n      if (!this.hot.isListening() && !priv.isTriggeredByCut || this.isEditorOpened()) {\n        return;\n      }\n\n      this.setCopyableText();\n      priv.isTriggeredByCut = false;\n      var rangedData = this.getRangedData(this.copyableRanges);\n      var allowCuttingOut = !!this.hot.runHooks('beforeCut', rangedData, this.copyableRanges);\n\n      if (allowCuttingOut) {\n        var textPlain = SheetClip.stringify(rangedData);\n\n        if (event && event.clipboardData) {\n          var textHTML = _dataToHTML(rangedData, this.hot.rootDocument);\n\n          event.clipboardData.setData('text/plain', textPlain);\n          event.clipboardData.setData('text/html', [META_HEAD, textHTML].join(''));\n        } else if (typeof ClipboardEvent === 'undefined') {\n          this.hot.rootWindow.clipboardData.setData('Text', textPlain);\n        }\n\n        this.hot.emptySelectedCells('CopyPaste.cut');\n        this.hot.runHooks('afterCut', rangedData, this.copyableRanges);\n      }\n\n      event.preventDefault();\n    }\n    /**\n     * `paste` event callback on textarea element.\n     *\n     * @param {Event} event ClipboardEvent or pseudo ClipboardEvent, if paste was called manually.\n     * @private\n     */\n\n  }, {\n    key: \"onPaste\",\n    value: function onPaste(event) {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n\n      var pastedData;\n\n      if (event && typeof event.clipboardData !== 'undefined') {\n        var textHTML = event.clipboardData.getData('text/html');\n\n        if (textHTML && /(<table)|(<TABLE)/g.test(textHTML)) {\n          var parsedConfig = htmlToGridSettings(textHTML, this.hot.rootDocument);\n          pastedData = parsedConfig.data;\n        } else {\n          pastedData = event.clipboardData.getData('text/plain');\n        }\n      } else if (typeof ClipboardEvent === 'undefined' && typeof this.hot.rootWindow.clipboardData !== 'undefined') {\n        pastedData = this.hot.rootWindow.clipboardData.getData('Text');\n      }\n\n      if (typeof pastedData === 'string') {\n        pastedData = SheetClip.parse(pastedData);\n      }\n\n      if (pastedData && pastedData.length === 0) {\n        return;\n      }\n\n      if (this.hot.runHooks('beforePaste', pastedData, this.copyableRanges) === false) {\n        return;\n      }\n\n      var _this$populateValues = this.populateValues(pastedData),\n          _this$populateValues2 = _slicedToArray(_this$populateValues, 4),\n          startRow = _this$populateValues2[0],\n          startColumn = _this$populateValues2[1],\n          endRow = _this$populateValues2[2],\n          endColumn = _this$populateValues2[3];\n\n      this.hot.selectCell(startRow, startColumn, Math.min(this.hot.countRows() - 1, endRow), Math.min(this.hot.countCols() - 1, endColumn));\n      this.hot.runHooks('afterPaste', pastedData, this.copyableRanges);\n    }\n    /**\n     * Add copy, cut and paste options to the Context Menu.\n     *\n     * @private\n     * @param {Object} options Contains default added options of the Context Menu.\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: '---------'\n      }, copyItem(this), cutItem(this));\n    }\n    /**\n     * Force focus on focusableElement.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterOnCellMouseUp\",\n    value: function onAfterOnCellMouseUp() {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n    }\n    /**\n     * Force focus on focusableElement after end of the selection.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterSelectionEnd\",\n    value: function onAfterSelectionEnd() {\n      var _privatePool$get = privatePool.get(this),\n          isFragmentSelectionEnabled = _privatePool$get.isFragmentSelectionEnabled;\n\n      if (this.isEditorOpened()) {\n        return;\n      }\n\n      this.getOrCreateFocusableElement();\n\n      if (isFragmentSelectionEnabled && this.focusableElement.getFocusableElement() !== this.hot.rootDocument.activeElement && getSelectionText()) {\n        return;\n      }\n\n      this.setCopyableText();\n      this.focusableElement.focus();\n    }\n    /**\n     * `beforeKeyDown` listener to force focus of focusableElement.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onBeforeKeyDown\",\n    value: function onBeforeKeyDown() {\n      if (!this.hot.isListening() || this.isEditorOpened()) {\n        return;\n      }\n\n      var activeElement = this.hot.rootDocument.activeElement;\n      var activeEditor = this.hot.getActiveEditor();\n\n      if (!activeEditor || activeElement !== this.focusableElement.getFocusableElement() && activeElement !== activeEditor.select) {\n        return;\n      }\n\n      this.getOrCreateFocusableElement();\n      this.focusableElement.focus();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.focusableElement) {\n        destroyElement(this.focusableElement);\n        this.focusableElement = null;\n      }\n\n      _get(_getPrototypeOf(CopyPaste.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return CopyPaste;\n}(BasePlugin);\n\nregisterPlugin('CopyPaste', CopyPaste);\nexport default CopyPaste;"],"mappings":"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"},"metadata":{},"sourceType":"module"}