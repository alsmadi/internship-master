{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get(target, property, receiver || target);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport BasePlugin from './../_base';\nimport { registerPlugin } from './../../plugins';\nimport { hasOwnProperty, objectEach } from './../../helpers/object';\nimport { rangeEach } from './../../helpers/number';\nimport { arrayEach, arrayReduce, arrayMap } from './../../helpers/array';\nimport { CellRange } from './../../3rdparty/walkontable/src';\nimport * as C from './../../i18n/constants';\nimport { bottom, left, noBorders, right, top } from './contextMenuItem';\nimport { createId, createDefaultCustomBorder, createSingleEmptyBorder, createEmptyBorders, extendDefaultBorder } from './utils';\nimport { detectSelectionType, normalizeSelectionFactory } from './../../selection';\n/**\n * @class CustomBorders\n * @plugin CustomBorders\n *\n * @description\n * This plugin enables an option to apply custom borders through the context menu (configurable with context menu key\n * `borders`).\n *\n * To initialize Handsontable with predefined custom borders, provide cell coordinates and border styles in a form\n * of an array.\n *\n * See [Custom Borders](http://docs.handsontable.com/demo-custom-borders.html) demo for more examples.\n *\n * @example\n * ```js\n * customBorders: [\n *   {\n *    range: {\n *      from: {\n *        row: 1,\n *        col: 1\n *      },\n *      to: {\n *        row: 3,\n *        col: 4\n *      },\n *    },\n *    left: {},\n *    right: {},\n *    top: {},\n *    bottom: {},\n *   },\n * ],\n *\n * // or\n * customBorders: [\n *   { row: 2,\n *     col: 2,\n *     left: {\n *       width: 2,\n *       color: 'red',\n *     },\n *     right: {\n *       width: 1,\n *       color: 'green',\n *     },\n *     top: '',\n *     bottom: '',\n *   }\n * ],\n * ```\n */\n\nvar CustomBorders = /*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(CustomBorders, _BasePlugin);\n  function CustomBorders(hotInstance) {\n    var _this;\n    _classCallCheck(this, CustomBorders);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomBorders).call(this, hotInstance));\n    /**\n     * Saved borders.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.savedBorders = [];\n    return _this;\n  }\n  /**\n  * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n  * hook and if it returns `true` than the {@link CustomBorders#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n  _createClass(CustomBorders, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().customBorders;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('init', function () {\n        return _this2.onAfterInit();\n      });\n      _get(_getPrototypeOf(CustomBorders.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hideBorders();\n      _get(_getPrototypeOf(CustomBorders.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.changeBorderSettings();\n      _get(_getPrototypeOf(CustomBorders.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n      * Set custom borders.\n      *\n      * @example\n      * ```js\n      * const customBordersPlugin = hot.getPlugin('customBorders');\n      *\n      * // Using an array of arrays (produced by `.getSelected()` method).\n      * customBordersPlugin.setBorders([[1, 1, 2, 2], [6, 2, 0, 2]], {left: {width: 2, color: 'blue'}});\n      * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n      * customBordersPlugin.setBorders(hot.getSelectedRange(), {left: {hide: false, width: 2, color: 'blue'}});\n      * ```\n      *\n      * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n      * @param {Object} borderObject Object with `top`, `right`, `bottom` and `left` properties.\n      */\n  }, {\n    key: \"setBorders\",\n    value: function setBorders(selectionRanges, borderObject) {\n      var _this3 = this;\n      var defaultBorderKeys = ['top', 'right', 'bottom', 'left'];\n      var borderKeys = borderObject ? Object.keys(borderObject) : defaultBorderKeys;\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma = selectionSchemaNormalizer(selection),\n          _selectionSchemaNorma2 = _slicedToArray(_selectionSchemaNorma, 4),\n          rowStart = _selectionSchemaNorma2[0],\n          columnStart = _selectionSchemaNorma2[1],\n          rowEnd = _selectionSchemaNorma2[2],\n          columnEnd = _selectionSchemaNorma2[3];\n        var _loop = function _loop(row) {\n          var _loop2 = function _loop2(col) {\n            arrayEach(borderKeys, function (borderKey) {\n              _this3.prepareBorderFromCustomAdded(row, col, borderObject, borderKey);\n            });\n          };\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop2(col);\n          }\n        };\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop(row);\n        }\n      });\n      /*\n      The line below triggers a re-render of Handsontable. This will be a \"fastDraw\"\n      render, because that is the default for the TableView class.\n       The re-render is needed for borders on cells that did not have a border before.\n      The way this call works is that it calls Table.refreshSelections, which calls\n      Selection.getBorder, which creates a new instance of Border.\n       Seems wise to keep this single-direction flow of creating new Borders\n      */\n\n      this.hot.view.render();\n    }\n    /**\n      * Get custom borders.\n      *\n      * @example\n      * ```js\n      * const customBordersPlugin = hot.getPlugin('customBorders');\n      *\n      * // Using an array of arrays (produced by `.getSelected()` method).\n      * customBordersPlugin.getBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n      * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n      * customBordersPlugin.getBorders(hot.getSelectedRange());\n      * // Using without param - return all customBorders.\n      * customBordersPlugin.getBorders();\n      * ```\n      *\n      * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n      * @return {Object[]} Returns array of border objects.\n      */\n  }, {\n    key: \"getBorders\",\n    value: function getBorders(selectionRanges) {\n      var _this4 = this;\n      if (!Array.isArray(selectionRanges)) {\n        return this.savedBorders;\n      }\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      var selectedBorders = [];\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma3 = selectionSchemaNormalizer(selection),\n          _selectionSchemaNorma4 = _slicedToArray(_selectionSchemaNorma3, 4),\n          rowStart = _selectionSchemaNorma4[0],\n          columnStart = _selectionSchemaNorma4[1],\n          rowEnd = _selectionSchemaNorma4[2],\n          columnEnd = _selectionSchemaNorma4[3];\n        var _loop3 = function _loop3(row) {\n          var _loop4 = function _loop4(col) {\n            arrayEach(_this4.savedBorders, function (border) {\n              if (border.row === row && border.col === col) {\n                selectedBorders.push(border);\n              }\n            });\n          };\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop4(col);\n          }\n        };\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop3(row);\n        }\n      });\n      return selectedBorders;\n    }\n    /**\n      * Clear custom borders.\n      *\n      * @example\n      * ```js\n      * const customBordersPlugin = hot.getPlugin('customBorders');\n      *\n      * // Using an array of arrays (produced by `.getSelected()` method).\n      * customBordersPlugin.clearBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n      * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n      * customBordersPlugin.clearBorders(hot.getSelectedRange());\n      * // Using without param - clear all customBorders.\n      * customBordersPlugin.clearBorders();\n      * ```\n      *\n      * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n      */\n  }, {\n    key: \"clearBorders\",\n    value: function clearBorders(selectionRanges) {\n      var _this5 = this;\n      if (selectionRanges) {\n        this.setBorders(selectionRanges);\n      } else {\n        arrayEach(this.savedBorders, function (border) {\n          _this5.clearBordersFromSelectionSettings(border.id);\n          _this5.clearNullCellRange();\n          _this5.hot.removeCellMeta(border.row, border.col, 'borders');\n        });\n        this.savedBorders.length = 0;\n      }\n    }\n    /**\n     * Insert WalkontableSelection instance into Walkontable settings.\n     *\n     * @private\n     * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n  }, {\n    key: \"insertBorderIntoSettings\",\n    value: function insertBorderIntoSettings(border, place) {\n      var hasSavedBorders = this.checkSavedBorders(border);\n      if (!hasSavedBorders) {\n        this.savedBorders.push(border);\n      }\n      var coordinates = {\n        row: border.row,\n        col: border.col\n      };\n      var cellRange = new CellRange(coordinates, coordinates, coordinates);\n      var hasCustomSelections = this.checkCustomSelections(border, cellRange, place);\n      if (!hasCustomSelections) {\n        this.hot.selection.highlight.addCustomSelection({\n          border: border,\n          cellRange: cellRange\n        });\n      }\n    }\n    /**\n     * Prepare borders from setting (single cell).\n     *\n     * @private\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {Object} borderDescriptor Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n  }, {\n    key: \"prepareBorderFromCustomAdded\",\n    value: function prepareBorderFromCustomAdded(row, column, borderDescriptor, place) {\n      var border = createEmptyBorders(row, column);\n      if (borderDescriptor) {\n        border = extendDefaultBorder(border, borderDescriptor);\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            Object.assign(customSelection.settings, borderDescriptor);\n            border = customSelection.settings;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      this.hot.setCellMeta(row, column, 'borders', border);\n      this.insertBorderIntoSettings(border, place);\n    }\n    /**\n     * Prepare borders from setting (object).\n     *\n     * @private\n     * @param {Object} rowDecriptor Object with `range`, `left`, `right`, `top` and `bottom` properties.\n     */\n  }, {\n    key: \"prepareBorderFromCustomAddedRange\",\n    value: function prepareBorderFromCustomAddedRange(rowDecriptor) {\n      var _this6 = this;\n      var range = rowDecriptor.range;\n      rangeEach(range.from.row, range.to.row, function (rowIndex) {\n        rangeEach(range.from.col, range.to.col, function (colIndex) {\n          var border = createEmptyBorders(rowIndex, colIndex);\n          var add = 0;\n          if (rowIndex === range.from.row) {\n            if (hasOwnProperty(rowDecriptor, 'top')) {\n              add += 1;\n              border.top = rowDecriptor.top;\n            }\n          }\n          if (rowIndex === range.to.row) {\n            if (hasOwnProperty(rowDecriptor, 'bottom')) {\n              add += 1;\n              border.bottom = rowDecriptor.bottom;\n            }\n          }\n          if (colIndex === range.from.col) {\n            if (hasOwnProperty(rowDecriptor, 'left')) {\n              add += 1;\n              border.left = rowDecriptor.left;\n            }\n          }\n          if (colIndex === range.to.col) {\n            if (hasOwnProperty(rowDecriptor, 'right')) {\n              add += 1;\n              border.right = rowDecriptor.right;\n            }\n          }\n          if (add > 0) {\n            _this6.hot.setCellMeta(rowIndex, colIndex, 'borders', border);\n            _this6.insertBorderIntoSettings(border);\n          } else {// TODO sometimes it enters here. Why?\n          }\n        });\n      });\n    }\n    /**\n     * Remove border (triggered from context menu).\n     *\n     * @private\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     */\n  }, {\n    key: \"removeAllBorders\",\n    value: function removeAllBorders(row, column) {\n      var borderId = createId(row, column);\n      this.spliceBorder(borderId);\n      this.clearBordersFromSelectionSettings(borderId);\n      this.clearNullCellRange();\n      this.hot.removeCellMeta(row, column, 'borders');\n    }\n    /**\n     * Set borders for each cell re. to border position.\n     *\n     * @private\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {Boolean} remove True when remove borders, and false when add borders.\n     */\n  }, {\n    key: \"setBorder\",\n    value: function setBorder(row, column, place, remove) {\n      var bordersMeta = this.hot.getCellMeta(row, column).borders;\n      if (!bordersMeta || bordersMeta.border === void 0) {\n        bordersMeta = createEmptyBorders(row, column);\n      }\n      if (remove) {\n        bordersMeta[place] = createSingleEmptyBorder();\n        var hideCount = this.countHide(bordersMeta);\n        if (hideCount === 4) {\n          this.removeAllBorders(row, column);\n        } else {\n          var customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n          if (!customSelectionsChecker) {\n            this.insertBorderIntoSettings(bordersMeta);\n          }\n          this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n        }\n      } else {\n        bordersMeta[place] = createDefaultCustomBorder();\n        var _customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n        if (!_customSelectionsChecker) {\n          this.insertBorderIntoSettings(bordersMeta);\n        }\n        this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n      }\n    }\n    /**\n     * Prepare borders based on cell and border position.\n     *\n     * @private\n     * @param {Object} selected\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {Boolean} remove True when remove borders, and false when add borders.\n     */\n  }, {\n    key: \"prepareBorder\",\n    value: function prepareBorder(selected, place, remove) {\n      var _this7 = this;\n      arrayEach(selected, function (_ref) {\n        var start = _ref.start,\n          end = _ref.end;\n        if (start.row === end.row && start.col === end.col) {\n          if (place === 'noBorders') {\n            _this7.removeAllBorders(start.row, start.col);\n          } else {\n            _this7.setBorder(start.row, start.col, place, remove);\n          }\n        } else {\n          switch (place) {\n            case 'noBorders':\n              rangeEach(start.col, end.col, function (colIndex) {\n                rangeEach(start.row, end.row, function (rowIndex) {\n                  _this7.removeAllBorders(rowIndex, colIndex);\n                });\n              });\n              break;\n            case 'top':\n              rangeEach(start.col, end.col, function (topCol) {\n                _this7.setBorder(start.row, topCol, place, remove);\n              });\n              break;\n            case 'right':\n              rangeEach(start.row, end.row, function (rowRight) {\n                _this7.setBorder(rowRight, end.col, place, remove);\n              });\n              break;\n            case 'bottom':\n              rangeEach(start.col, end.col, function (bottomCol) {\n                _this7.setBorder(end.row, bottomCol, place, remove);\n              });\n              break;\n            case 'left':\n              rangeEach(start.row, end.row, function (rowLeft) {\n                _this7.setBorder(rowLeft, start.col, place, remove);\n              });\n              break;\n            default:\n              break;\n          }\n        }\n      });\n    }\n    /**\n     * Create borders from settings.\n     *\n     * @private\n     * @param {Array} customBorders Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     */\n  }, {\n    key: \"createCustomBorders\",\n    value: function createCustomBorders(customBorders) {\n      var _this8 = this;\n      arrayEach(customBorders, function (customBorder) {\n        if (customBorder.range) {\n          _this8.prepareBorderFromCustomAddedRange(customBorder);\n        } else {\n          _this8.prepareBorderFromCustomAdded(customBorder.row, customBorder.col, customBorder);\n        }\n      });\n    }\n    /**\n    * Count hide property in border object.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    */\n  }, {\n    key: \"countHide\",\n    value: function countHide(border) {\n      var values = Object.values(border);\n      return arrayReduce(values, function (accumulator, value) {\n        var result = accumulator;\n        if (value.hide) {\n          result += 1;\n        }\n        return result;\n      }, 0);\n    }\n    /**\n    * Clear borders settings from custom selections.\n    *\n    * @private\n    * @param {String} borderId Border id name as string.\n    */\n  }, {\n    key: \"clearBordersFromSelectionSettings\",\n    value: function clearBordersFromSelectionSettings(borderId) {\n      var index = arrayMap(this.hot.selection.highlight.customSelections, function (customSelection) {\n        return customSelection.settings.id;\n      }).indexOf(borderId);\n      if (index > -1) {\n        this.hot.selection.highlight.customSelections[index].clear();\n      }\n    }\n    /**\n    * Clear cellRange with null value.\n    *\n    * @private\n    */\n  }, {\n    key: \"clearNullCellRange\",\n    value: function clearNullCellRange() {\n      var _this9 = this;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection, index) {\n        if (customSelection.cellRange === null) {\n          _this9.hot.selection.highlight.customSelections[index].destroy();\n          _this9.hot.selection.highlight.customSelections.splice(index, 1);\n          return false; // breaks forAll\n        }\n      });\n    }\n    /**\n      * Hide custom borders.\n      *\n      * @private\n      */\n  }, {\n    key: \"hideBorders\",\n    value: function hideBorders() {\n      var _this10 = this;\n      arrayEach(this.savedBorders, function (border) {\n        _this10.clearBordersFromSelectionSettings(border.id);\n        _this10.clearNullCellRange();\n      });\n    }\n    /**\n    * Splice border from savedBorders.\n    *\n    * @private\n    * @param {String} borderId Border id name as string.\n    */\n  }, {\n    key: \"spliceBorder\",\n    value: function spliceBorder(borderId) {\n      var index = arrayMap(this.savedBorders, function (border) {\n        return border.id;\n      }).indexOf(borderId);\n      if (index > -1) {\n        this.savedBorders.splice(index, 1);\n      }\n    }\n    /**\n    * Check if an border already exists in the savedBorders array, and if true update border in savedBorders.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    *\n    * @return {Boolean}\n    */\n  }, {\n    key: \"checkSavedBorders\",\n    value: function checkSavedBorders(border) {\n      var _this11 = this;\n      var check = false;\n      var hideCount = this.countHide(border);\n      if (hideCount === 4) {\n        this.spliceBorder(border.id);\n        check = true;\n      } else {\n        arrayEach(this.savedBorders, function (savedBorder, index) {\n          if (border.id === savedBorder.id) {\n            _this11.savedBorders[index] = border;\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n    * Check if an border already exists in the customSelections, and if true call toggleHiddenClass method.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n    * @param {Boolean} remove True when remove borders, and false when add borders.\n    *\n    * @return {Boolean}\n    */\n  }, {\n    key: \"checkCustomSelectionsFromContextMenu\",\n    value: function checkCustomSelectionsFromContextMenu(border, place, remove) {\n      var check = false;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n        if (border.id === customSelection.settings.id) {\n          objectEach(customSelection.instanceBorders, function (borderObject) {\n            borderObject.toggleHiddenClass(place, remove); // TODO this also bad?\n          });\n\n          check = true;\n          return false; // breaks forAll\n        }\n      });\n\n      return check;\n    }\n    /**\n    * Check if an border already exists in the customSelections, and if true reset cellRange.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    * @param {CellRange} cellRange\n    * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n    *\n    * @return {Boolean}\n    */\n  }, {\n    key: \"checkCustomSelections\",\n    value: function checkCustomSelections(border, cellRange, place) {\n      var hideCount = this.countHide(border);\n      var check = false;\n      if (hideCount === 4) {\n        this.removeAllBorders(border.row, border.col);\n        check = true;\n      } else {\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            customSelection.cellRange = cellRange;\n            if (place) {\n              objectEach(customSelection.instanceBorders, function (borderObject) {\n                borderObject.changeBorderStyle(place, border);\n              });\n            }\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n     * Change borders from settings.\n     *\n     * @private\n     */\n  }, {\n    key: \"changeBorderSettings\",\n    value: function changeBorderSettings() {\n      var customBorders = this.hot.getSettings().customBorders;\n      if (Array.isArray(customBorders)) {\n        if (!customBorders.length) {\n          this.savedBorders = customBorders;\n        }\n        this.createCustomBorders(customBorders);\n      } else if (customBorders !== void 0) {\n        this.createCustomBorders(this.savedBorders);\n      }\n    }\n    /**\n    * Add border options to context menu.\n    *\n    * @private\n    * @param {Object} defaultOptions Context menu items.\n    */\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(defaultOptions) {\n      if (!this.hot.getSettings().customBorders) {\n        return;\n      }\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'borders',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS);\n        },\n        disabled: function disabled() {\n          return this.selection.isSelectedByCorner();\n        },\n        submenu: {\n          items: [top(this), right(this), bottom(this), left(this), noBorders(this)]\n        }\n      });\n    }\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.changeBorderSettings();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(CustomBorders.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n  return CustomBorders;\n}(BasePlugin);\nregisterPlugin('customBorders', CustomBorders);\nexport default CustomBorders;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Object","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","registerPlugin","objectEach","rangeEach","arrayEach","arrayReduce","arrayMap","CellRange","C","bottom","left","noBorders","right","top","createId","createDefaultCustomBorder","createSingleEmptyBorder","createEmptyBorders","extendDefaultBorder","detectSelectionType","normalizeSelectionFactory","CustomBorders","_BasePlugin","hotInstance","_this","savedBorders","isEnabled","hot","getSettings","customBorders","enablePlugin","_this2","enabled","addHook","options","onAfterContextMenuDefaultOptions","onAfterInit","disablePlugin","hideBorders","updatePlugin","changeBorderSettings","setBorders","selectionRanges","borderObject","_this3","defaultBorderKeys","borderKeys","keys","selectionType","selectionSchemaNormalizer","selection","_selectionSchemaNorma","_selectionSchemaNorma2","rowStart","columnStart","rowEnd","columnEnd","_loop","row","_loop2","col","borderKey","prepareBorderFromCustomAdded","view","render","getBorders","_this4","selectedBorders","_selectionSchemaNorma3","_selectionSchemaNorma4","_loop3","_loop4","border","clearBorders","_this5","clearBordersFromSelectionSettings","id","clearNullCellRange","removeCellMeta","insertBorderIntoSettings","place","hasSavedBorders","checkSavedBorders","coordinates","cellRange","hasCustomSelections","checkCustomSelections","highlight","addCustomSelection","column","borderDescriptor","customSelections","customSelection","settings","assign","setCellMeta","prepareBorderFromCustomAddedRange","rowDecriptor","_this6","range","from","to","rowIndex","colIndex","add","removeAllBorders","borderId","spliceBorder","setBorder","remove","bordersMeta","getCellMeta","borders","hideCount","countHide","customSelectionsChecker","checkCustomSelectionsFromContextMenu","_customSelectionsChecker","prepareBorder","selected","_this7","_ref","start","end","topCol","rowRight","bottomCol","rowLeft","createCustomBorders","_this8","customBorder","values","accumulator","result","hide","index","indexOf","clear","_this9","destroy","splice","_this10","_this11","check","savedBorder","instanceBorders","toggleHiddenClass","changeBorderStyle","defaultOptions","items","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_BORDERS","disabled","isSelectedByCorner","submenu"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/plugins/customBorders/customBorders.js"],"sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.object.assign\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.keys\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.object.values\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from './../_base';\nimport { registerPlugin } from './../../plugins';\nimport { hasOwnProperty, objectEach } from './../../helpers/object';\nimport { rangeEach } from './../../helpers/number';\nimport { arrayEach, arrayReduce, arrayMap } from './../../helpers/array';\nimport { CellRange } from './../../3rdparty/walkontable/src';\nimport * as C from './../../i18n/constants';\nimport { bottom, left, noBorders, right, top } from './contextMenuItem';\nimport { createId, createDefaultCustomBorder, createSingleEmptyBorder, createEmptyBorders, extendDefaultBorder } from './utils';\nimport { detectSelectionType, normalizeSelectionFactory } from './../../selection';\n/**\n * @class CustomBorders\n * @plugin CustomBorders\n *\n * @description\n * This plugin enables an option to apply custom borders through the context menu (configurable with context menu key\n * `borders`).\n *\n * To initialize Handsontable with predefined custom borders, provide cell coordinates and border styles in a form\n * of an array.\n *\n * See [Custom Borders](http://docs.handsontable.com/demo-custom-borders.html) demo for more examples.\n *\n * @example\n * ```js\n * customBorders: [\n *   {\n *    range: {\n *      from: {\n *        row: 1,\n *        col: 1\n *      },\n *      to: {\n *        row: 3,\n *        col: 4\n *      },\n *    },\n *    left: {},\n *    right: {},\n *    top: {},\n *    bottom: {},\n *   },\n * ],\n *\n * // or\n * customBorders: [\n *   { row: 2,\n *     col: 2,\n *     left: {\n *       width: 2,\n *       color: 'red',\n *     },\n *     right: {\n *       width: 1,\n *       color: 'green',\n *     },\n *     top: '',\n *     bottom: '',\n *   }\n * ],\n * ```\n */\n\nvar CustomBorders =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(CustomBorders, _BasePlugin);\n\n  function CustomBorders(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, CustomBorders);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomBorders).call(this, hotInstance));\n    /**\n     * Saved borders.\n     *\n     * @private\n     * @type {Array}\n     */\n\n    _this.savedBorders = [];\n    return _this;\n  }\n  /**\n  * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n  * hook and if it returns `true` than the {@link CustomBorders#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(CustomBorders, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().customBorders;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('init', function () {\n        return _this2.onAfterInit();\n      });\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.hideBorders();\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      this.changeBorderSettings();\n\n      _get(_getPrototypeOf(CustomBorders.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n      * Set custom borders.\n      *\n      * @example\n      * ```js\n      * const customBordersPlugin = hot.getPlugin('customBorders');\n      *\n      * // Using an array of arrays (produced by `.getSelected()` method).\n      * customBordersPlugin.setBorders([[1, 1, 2, 2], [6, 2, 0, 2]], {left: {width: 2, color: 'blue'}});\n      * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n      * customBordersPlugin.setBorders(hot.getSelectedRange(), {left: {hide: false, width: 2, color: 'blue'}});\n      * ```\n      *\n      * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n      * @param {Object} borderObject Object with `top`, `right`, `bottom` and `left` properties.\n      */\n\n  }, {\n    key: \"setBorders\",\n    value: function setBorders(selectionRanges, borderObject) {\n      var _this3 = this;\n\n      var defaultBorderKeys = ['top', 'right', 'bottom', 'left'];\n      var borderKeys = borderObject ? Object.keys(borderObject) : defaultBorderKeys;\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma = selectionSchemaNormalizer(selection),\n            _selectionSchemaNorma2 = _slicedToArray(_selectionSchemaNorma, 4),\n            rowStart = _selectionSchemaNorma2[0],\n            columnStart = _selectionSchemaNorma2[1],\n            rowEnd = _selectionSchemaNorma2[2],\n            columnEnd = _selectionSchemaNorma2[3];\n\n        var _loop = function _loop(row) {\n          var _loop2 = function _loop2(col) {\n            arrayEach(borderKeys, function (borderKey) {\n              _this3.prepareBorderFromCustomAdded(row, col, borderObject, borderKey);\n            });\n          };\n\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop2(col);\n          }\n        };\n\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop(row);\n        }\n      });\n      /*\n      The line below triggers a re-render of Handsontable. This will be a \"fastDraw\"\n      render, because that is the default for the TableView class.\n       The re-render is needed for borders on cells that did not have a border before.\n      The way this call works is that it calls Table.refreshSelections, which calls\n      Selection.getBorder, which creates a new instance of Border.\n       Seems wise to keep this single-direction flow of creating new Borders\n      */\n\n      this.hot.view.render();\n    }\n    /**\n      * Get custom borders.\n      *\n      * @example\n      * ```js\n      * const customBordersPlugin = hot.getPlugin('customBorders');\n      *\n      * // Using an array of arrays (produced by `.getSelected()` method).\n      * customBordersPlugin.getBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n      * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n      * customBordersPlugin.getBorders(hot.getSelectedRange());\n      * // Using without param - return all customBorders.\n      * customBordersPlugin.getBorders();\n      * ```\n      *\n      * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n      * @return {Object[]} Returns array of border objects.\n      */\n\n  }, {\n    key: \"getBorders\",\n    value: function getBorders(selectionRanges) {\n      var _this4 = this;\n\n      if (!Array.isArray(selectionRanges)) {\n        return this.savedBorders;\n      }\n\n      var selectionType = detectSelectionType(selectionRanges);\n      var selectionSchemaNormalizer = normalizeSelectionFactory(selectionType);\n      var selectedBorders = [];\n      arrayEach(selectionRanges, function (selection) {\n        var _selectionSchemaNorma3 = selectionSchemaNormalizer(selection),\n            _selectionSchemaNorma4 = _slicedToArray(_selectionSchemaNorma3, 4),\n            rowStart = _selectionSchemaNorma4[0],\n            columnStart = _selectionSchemaNorma4[1],\n            rowEnd = _selectionSchemaNorma4[2],\n            columnEnd = _selectionSchemaNorma4[3];\n\n        var _loop3 = function _loop3(row) {\n          var _loop4 = function _loop4(col) {\n            arrayEach(_this4.savedBorders, function (border) {\n              if (border.row === row && border.col === col) {\n                selectedBorders.push(border);\n              }\n            });\n          };\n\n          for (var col = columnStart; col <= columnEnd; col += 1) {\n            _loop4(col);\n          }\n        };\n\n        for (var row = rowStart; row <= rowEnd; row += 1) {\n          _loop3(row);\n        }\n      });\n      return selectedBorders;\n    }\n    /**\n      * Clear custom borders.\n      *\n      * @example\n      * ```js\n      * const customBordersPlugin = hot.getPlugin('customBorders');\n      *\n      * // Using an array of arrays (produced by `.getSelected()` method).\n      * customBordersPlugin.clearBorders([[1, 1, 2, 2], [6, 2, 0, 2]]);\n      * // Using an array of CellRange objects (produced by `.getSelectedRange()` method).\n      * customBordersPlugin.clearBorders(hot.getSelectedRange());\n      * // Using without param - clear all customBorders.\n      * customBordersPlugin.clearBorders();\n      * ```\n      *\n      * @param {Array[]|CellRange[]} selectionRanges Array of selection ranges.\n      */\n\n  }, {\n    key: \"clearBorders\",\n    value: function clearBorders(selectionRanges) {\n      var _this5 = this;\n\n      if (selectionRanges) {\n        this.setBorders(selectionRanges);\n      } else {\n        arrayEach(this.savedBorders, function (border) {\n          _this5.clearBordersFromSelectionSettings(border.id);\n\n          _this5.clearNullCellRange();\n\n          _this5.hot.removeCellMeta(border.row, border.col, 'borders');\n        });\n        this.savedBorders.length = 0;\n      }\n    }\n    /**\n     * Insert WalkontableSelection instance into Walkontable settings.\n     *\n     * @private\n     * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n\n  }, {\n    key: \"insertBorderIntoSettings\",\n    value: function insertBorderIntoSettings(border, place) {\n      var hasSavedBorders = this.checkSavedBorders(border);\n\n      if (!hasSavedBorders) {\n        this.savedBorders.push(border);\n      }\n\n      var coordinates = {\n        row: border.row,\n        col: border.col\n      };\n      var cellRange = new CellRange(coordinates, coordinates, coordinates);\n      var hasCustomSelections = this.checkCustomSelections(border, cellRange, place);\n\n      if (!hasCustomSelections) {\n        this.hot.selection.highlight.addCustomSelection({\n          border: border,\n          cellRange: cellRange\n        });\n      }\n    }\n    /**\n     * Prepare borders from setting (single cell).\n     *\n     * @private\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {Object} borderDescriptor Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n     */\n\n  }, {\n    key: \"prepareBorderFromCustomAdded\",\n    value: function prepareBorderFromCustomAdded(row, column, borderDescriptor, place) {\n      var border = createEmptyBorders(row, column);\n\n      if (borderDescriptor) {\n        border = extendDefaultBorder(border, borderDescriptor);\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            Object.assign(customSelection.settings, borderDescriptor);\n            border = customSelection.settings;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      this.hot.setCellMeta(row, column, 'borders', border);\n      this.insertBorderIntoSettings(border, place);\n    }\n    /**\n     * Prepare borders from setting (object).\n     *\n     * @private\n     * @param {Object} rowDecriptor Object with `range`, `left`, `right`, `top` and `bottom` properties.\n     */\n\n  }, {\n    key: \"prepareBorderFromCustomAddedRange\",\n    value: function prepareBorderFromCustomAddedRange(rowDecriptor) {\n      var _this6 = this;\n\n      var range = rowDecriptor.range;\n      rangeEach(range.from.row, range.to.row, function (rowIndex) {\n        rangeEach(range.from.col, range.to.col, function (colIndex) {\n          var border = createEmptyBorders(rowIndex, colIndex);\n          var add = 0;\n\n          if (rowIndex === range.from.row) {\n            if (hasOwnProperty(rowDecriptor, 'top')) {\n              add += 1;\n              border.top = rowDecriptor.top;\n            }\n          }\n\n          if (rowIndex === range.to.row) {\n            if (hasOwnProperty(rowDecriptor, 'bottom')) {\n              add += 1;\n              border.bottom = rowDecriptor.bottom;\n            }\n          }\n\n          if (colIndex === range.from.col) {\n            if (hasOwnProperty(rowDecriptor, 'left')) {\n              add += 1;\n              border.left = rowDecriptor.left;\n            }\n          }\n\n          if (colIndex === range.to.col) {\n            if (hasOwnProperty(rowDecriptor, 'right')) {\n              add += 1;\n              border.right = rowDecriptor.right;\n            }\n          }\n\n          if (add > 0) {\n            _this6.hot.setCellMeta(rowIndex, colIndex, 'borders', border);\n\n            _this6.insertBorderIntoSettings(border);\n          } else {// TODO sometimes it enters here. Why?\n          }\n        });\n      });\n    }\n    /**\n     * Remove border (triggered from context menu).\n     *\n     * @private\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     */\n\n  }, {\n    key: \"removeAllBorders\",\n    value: function removeAllBorders(row, column) {\n      var borderId = createId(row, column);\n      this.spliceBorder(borderId);\n      this.clearBordersFromSelectionSettings(borderId);\n      this.clearNullCellRange();\n      this.hot.removeCellMeta(row, column, 'borders');\n    }\n    /**\n     * Set borders for each cell re. to border position.\n     *\n     * @private\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {Boolean} remove True when remove borders, and false when add borders.\n     */\n\n  }, {\n    key: \"setBorder\",\n    value: function setBorder(row, column, place, remove) {\n      var bordersMeta = this.hot.getCellMeta(row, column).borders;\n\n      if (!bordersMeta || bordersMeta.border === void 0) {\n        bordersMeta = createEmptyBorders(row, column);\n      }\n\n      if (remove) {\n        bordersMeta[place] = createSingleEmptyBorder();\n        var hideCount = this.countHide(bordersMeta);\n\n        if (hideCount === 4) {\n          this.removeAllBorders(row, column);\n        } else {\n          var customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n\n          if (!customSelectionsChecker) {\n            this.insertBorderIntoSettings(bordersMeta);\n          }\n\n          this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n        }\n      } else {\n        bordersMeta[place] = createDefaultCustomBorder();\n\n        var _customSelectionsChecker = this.checkCustomSelectionsFromContextMenu(bordersMeta, place, remove);\n\n        if (!_customSelectionsChecker) {\n          this.insertBorderIntoSettings(bordersMeta);\n        }\n\n        this.hot.setCellMeta(row, column, 'borders', bordersMeta);\n      }\n    }\n    /**\n     * Prepare borders based on cell and border position.\n     *\n     * @private\n     * @param {Object} selected\n     * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n     * @param {Boolean} remove True when remove borders, and false when add borders.\n     */\n\n  }, {\n    key: \"prepareBorder\",\n    value: function prepareBorder(selected, place, remove) {\n      var _this7 = this;\n\n      arrayEach(selected, function (_ref) {\n        var start = _ref.start,\n            end = _ref.end;\n\n        if (start.row === end.row && start.col === end.col) {\n          if (place === 'noBorders') {\n            _this7.removeAllBorders(start.row, start.col);\n          } else {\n            _this7.setBorder(start.row, start.col, place, remove);\n          }\n        } else {\n          switch (place) {\n            case 'noBorders':\n              rangeEach(start.col, end.col, function (colIndex) {\n                rangeEach(start.row, end.row, function (rowIndex) {\n                  _this7.removeAllBorders(rowIndex, colIndex);\n                });\n              });\n              break;\n\n            case 'top':\n              rangeEach(start.col, end.col, function (topCol) {\n                _this7.setBorder(start.row, topCol, place, remove);\n              });\n              break;\n\n            case 'right':\n              rangeEach(start.row, end.row, function (rowRight) {\n                _this7.setBorder(rowRight, end.col, place, remove);\n              });\n              break;\n\n            case 'bottom':\n              rangeEach(start.col, end.col, function (bottomCol) {\n                _this7.setBorder(end.row, bottomCol, place, remove);\n              });\n              break;\n\n            case 'left':\n              rangeEach(start.row, end.row, function (rowLeft) {\n                _this7.setBorder(rowLeft, start.col, place, remove);\n              });\n              break;\n\n            default:\n              break;\n          }\n        }\n      });\n    }\n    /**\n     * Create borders from settings.\n     *\n     * @private\n     * @param {Array} customBorders Object with `row` and `col`, `left`, `right`, `top` and `bottom` properties.\n     */\n\n  }, {\n    key: \"createCustomBorders\",\n    value: function createCustomBorders(customBorders) {\n      var _this8 = this;\n\n      arrayEach(customBorders, function (customBorder) {\n        if (customBorder.range) {\n          _this8.prepareBorderFromCustomAddedRange(customBorder);\n        } else {\n          _this8.prepareBorderFromCustomAdded(customBorder.row, customBorder.col, customBorder);\n        }\n      });\n    }\n    /**\n    * Count hide property in border object.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    */\n\n  }, {\n    key: \"countHide\",\n    value: function countHide(border) {\n      var values = Object.values(border);\n      return arrayReduce(values, function (accumulator, value) {\n        var result = accumulator;\n\n        if (value.hide) {\n          result += 1;\n        }\n\n        return result;\n      }, 0);\n    }\n    /**\n    * Clear borders settings from custom selections.\n    *\n    * @private\n    * @param {String} borderId Border id name as string.\n    */\n\n  }, {\n    key: \"clearBordersFromSelectionSettings\",\n    value: function clearBordersFromSelectionSettings(borderId) {\n      var index = arrayMap(this.hot.selection.highlight.customSelections, function (customSelection) {\n        return customSelection.settings.id;\n      }).indexOf(borderId);\n\n      if (index > -1) {\n        this.hot.selection.highlight.customSelections[index].clear();\n      }\n    }\n    /**\n    * Clear cellRange with null value.\n    *\n    * @private\n    */\n\n  }, {\n    key: \"clearNullCellRange\",\n    value: function clearNullCellRange() {\n      var _this9 = this;\n\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection, index) {\n        if (customSelection.cellRange === null) {\n          _this9.hot.selection.highlight.customSelections[index].destroy();\n\n          _this9.hot.selection.highlight.customSelections.splice(index, 1);\n\n          return false; // breaks forAll\n        }\n      });\n    }\n    /**\n      * Hide custom borders.\n      *\n      * @private\n      */\n\n  }, {\n    key: \"hideBorders\",\n    value: function hideBorders() {\n      var _this10 = this;\n\n      arrayEach(this.savedBorders, function (border) {\n        _this10.clearBordersFromSelectionSettings(border.id);\n\n        _this10.clearNullCellRange();\n      });\n    }\n    /**\n    * Splice border from savedBorders.\n    *\n    * @private\n    * @param {String} borderId Border id name as string.\n    */\n\n  }, {\n    key: \"spliceBorder\",\n    value: function spliceBorder(borderId) {\n      var index = arrayMap(this.savedBorders, function (border) {\n        return border.id;\n      }).indexOf(borderId);\n\n      if (index > -1) {\n        this.savedBorders.splice(index, 1);\n      }\n    }\n    /**\n    * Check if an border already exists in the savedBorders array, and if true update border in savedBorders.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    *\n    * @return {Boolean}\n    */\n\n  }, {\n    key: \"checkSavedBorders\",\n    value: function checkSavedBorders(border) {\n      var _this11 = this;\n\n      var check = false;\n      var hideCount = this.countHide(border);\n\n      if (hideCount === 4) {\n        this.spliceBorder(border.id);\n        check = true;\n      } else {\n        arrayEach(this.savedBorders, function (savedBorder, index) {\n          if (border.id === savedBorder.id) {\n            _this11.savedBorders[index] = border;\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n    * Check if an border already exists in the customSelections, and if true call toggleHiddenClass method.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right` and `noBorders`.\n    * @param {Boolean} remove True when remove borders, and false when add borders.\n    *\n    * @return {Boolean}\n    */\n\n  }, {\n    key: \"checkCustomSelectionsFromContextMenu\",\n    value: function checkCustomSelectionsFromContextMenu(border, place, remove) {\n      var check = false;\n      arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n        if (border.id === customSelection.settings.id) {\n          objectEach(customSelection.instanceBorders, function (borderObject) {\n            borderObject.toggleHiddenClass(place, remove); // TODO this also bad?\n          });\n          check = true;\n          return false; // breaks forAll\n        }\n      });\n      return check;\n    }\n    /**\n    * Check if an border already exists in the customSelections, and if true reset cellRange.\n    *\n    * @private\n    * @param {Object} border Object with `row` and `col`, `left`, `right`, `top` and `bottom`, `id` and `border` ({Object} with `color`, `width` and `cornerVisible` property) properties.\n    * @param {CellRange} cellRange\n    * @param {String} place Coordinate where add/remove border - `top`, `bottom`, `left`, `right`.\n    *\n    * @return {Boolean}\n    */\n\n  }, {\n    key: \"checkCustomSelections\",\n    value: function checkCustomSelections(border, cellRange, place) {\n      var hideCount = this.countHide(border);\n      var check = false;\n\n      if (hideCount === 4) {\n        this.removeAllBorders(border.row, border.col);\n        check = true;\n      } else {\n        arrayEach(this.hot.selection.highlight.customSelections, function (customSelection) {\n          if (border.id === customSelection.settings.id) {\n            customSelection.cellRange = cellRange;\n\n            if (place) {\n              objectEach(customSelection.instanceBorders, function (borderObject) {\n                borderObject.changeBorderStyle(place, border);\n              });\n            }\n\n            check = true;\n            return false; // breaks forAll\n          }\n        });\n      }\n\n      return check;\n    }\n    /**\n     * Change borders from settings.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"changeBorderSettings\",\n    value: function changeBorderSettings() {\n      var customBorders = this.hot.getSettings().customBorders;\n\n      if (Array.isArray(customBorders)) {\n        if (!customBorders.length) {\n          this.savedBorders = customBorders;\n        }\n\n        this.createCustomBorders(customBorders);\n      } else if (customBorders !== void 0) {\n        this.createCustomBorders(this.savedBorders);\n      }\n    }\n    /**\n    * Add border options to context menu.\n    *\n    * @private\n    * @param {Object} defaultOptions Context menu items.\n    */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(defaultOptions) {\n      if (!this.hot.getSettings().customBorders) {\n        return;\n      }\n\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'borders',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_BORDERS);\n        },\n        disabled: function disabled() {\n          return this.selection.isSelectedByCorner();\n        },\n        submenu: {\n          items: [top(this), right(this), bottom(this), left(this), noBorders(this)]\n        }\n      });\n    }\n    /**\n     * `afterInit` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterInit\",\n    value: function onAfterInit() {\n      this.changeBorderSettings();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(CustomBorders.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return CustomBorders;\n}(BasePlugin);\n\nregisterPlugin('customBorders', CustomBorders);\nexport default CustomBorders;"],"mappings":"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"},"metadata":{},"sourceType":"module"}