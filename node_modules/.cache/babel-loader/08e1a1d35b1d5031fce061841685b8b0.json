{"ast":null,"code":"/**\n * Utility to register editors and common namespace for keeping reference to all editor classes\n */\nimport staticRegister from './../utils/staticRegister';\nimport Hooks from './../pluginHooks';\nimport BaseEditor from './_baseEditor';\nimport AutocompleteEditor from './autocompleteEditor';\nimport CheckboxEditor from './checkboxEditor';\nimport DateEditor from './dateEditor';\nimport DropdownEditor from './dropdownEditor';\nimport HandsontableEditor from './handsontableEditor';\nimport NumericEditor from './numericEditor';\nimport PasswordEditor from './passwordEditor';\nimport SelectEditor from './selectEditor';\nimport TextEditor from './textEditor';\nvar registeredEditorClasses = new WeakMap();\nvar _staticRegister = staticRegister('editors'),\n  register = _staticRegister.register,\n  getItem = _staticRegister.getItem,\n  hasItem = _staticRegister.hasItem,\n  getNames = _staticRegister.getNames,\n  getValues = _staticRegister.getValues;\n_register('base', BaseEditor);\n_register('autocomplete', AutocompleteEditor);\n_register('checkbox', CheckboxEditor);\n_register('date', DateEditor);\n_register('dropdown', DropdownEditor);\n_register('handsontable', HandsontableEditor);\n_register('numeric', NumericEditor);\n_register('password', PasswordEditor);\n_register('select', SelectEditor);\n_register('text', TextEditor);\nexport function RegisteredEditor(editorClass) {\n  var instances = {};\n  var Clazz = editorClass;\n  this.getConstructor = function () {\n    return editorClass;\n  };\n  this.getInstance = function (hotInstance) {\n    if (!(hotInstance.guid in instances)) {\n      instances[hotInstance.guid] = new Clazz(hotInstance);\n    }\n    return instances[hotInstance.guid];\n  };\n  Hooks.getSingleton().add('afterDestroy', function () {\n    instances[this.guid] = null;\n  });\n}\n/**\n * Returns instance (singleton) of editor class.\n *\n * @param {String} name Name of an editor under which it has been stored.\n * @param {Object} hotInstance Instance of Handsontable.\n * @returns {Function} Returns instance of editor.\n */\n\nexport function _getEditorInstance(name, hotInstance) {\n  var editor;\n  if (typeof name === 'function') {\n    if (!registeredEditorClasses.get(name)) {\n      _register(null, name);\n    }\n    editor = registeredEditorClasses.get(name);\n  } else if (typeof name === 'string') {\n    editor = getItem(name);\n  } else {\n    throw Error('Only strings and functions can be passed as \"editor\" parameter');\n  }\n  if (!editor) {\n    throw Error(\"No editor registered under name \\\"\".concat(name, \"\\\"\"));\n  }\n  return editor.getInstance(hotInstance);\n}\n/**\n * Retrieve editor class.\n *\n * @param {String} name Editor identification.\n * @returns {Function} Returns editor class.\n */\n\nfunction _getItem(name) {\n  if (!hasItem(name)) {\n    throw Error(\"No registered editor found under \\\"\".concat(name, \"\\\" name\"));\n  }\n  return getItem(name).getConstructor();\n}\n/**\n * Register editor class under specified name.\n *\n * @param {String} name Editor identification.\n * @param {Function} editorClass Editor class.\n */\n\nfunction _register(name, editorClass) {\n  var editorWrapper = new RegisteredEditor(editorClass);\n  if (typeof name === 'string') {\n    register(name, editorWrapper);\n  }\n  registeredEditorClasses.set(editorClass, editorWrapper);\n}\nexport { _register as registerEditor, _getItem as getEditor, _getEditorInstance as getEditorInstance, hasItem as hasEditor, getNames as getRegisteredEditorNames, getValues as getRegisteredEditors };","map":{"version":3,"names":["staticRegister","Hooks","BaseEditor","AutocompleteEditor","CheckboxEditor","DateEditor","DropdownEditor","HandsontableEditor","NumericEditor","PasswordEditor","SelectEditor","TextEditor","registeredEditorClasses","WeakMap","_staticRegister","register","getItem","hasItem","getNames","getValues","_register","RegisteredEditor","editorClass","instances","Clazz","getConstructor","getInstance","hotInstance","guid","getSingleton","add","_getEditorInstance","name","editor","get","Error","concat","_getItem","editorWrapper","set","registerEditor","getEditor","getEditorInstance","hasEditor","getRegisteredEditorNames","getRegisteredEditors"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/editors/index.js"],"sourcesContent":["import \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.weak-map\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\n/**\n * Utility to register editors and common namespace for keeping reference to all editor classes\n */\nimport staticRegister from './../utils/staticRegister';\nimport Hooks from './../pluginHooks';\nimport BaseEditor from './_baseEditor';\nimport AutocompleteEditor from './autocompleteEditor';\nimport CheckboxEditor from './checkboxEditor';\nimport DateEditor from './dateEditor';\nimport DropdownEditor from './dropdownEditor';\nimport HandsontableEditor from './handsontableEditor';\nimport NumericEditor from './numericEditor';\nimport PasswordEditor from './passwordEditor';\nimport SelectEditor from './selectEditor';\nimport TextEditor from './textEditor';\nvar registeredEditorClasses = new WeakMap();\n\nvar _staticRegister = staticRegister('editors'),\n    register = _staticRegister.register,\n    getItem = _staticRegister.getItem,\n    hasItem = _staticRegister.hasItem,\n    getNames = _staticRegister.getNames,\n    getValues = _staticRegister.getValues;\n\n_register('base', BaseEditor);\n\n_register('autocomplete', AutocompleteEditor);\n\n_register('checkbox', CheckboxEditor);\n\n_register('date', DateEditor);\n\n_register('dropdown', DropdownEditor);\n\n_register('handsontable', HandsontableEditor);\n\n_register('numeric', NumericEditor);\n\n_register('password', PasswordEditor);\n\n_register('select', SelectEditor);\n\n_register('text', TextEditor);\n\nexport function RegisteredEditor(editorClass) {\n  var instances = {};\n  var Clazz = editorClass;\n\n  this.getConstructor = function () {\n    return editorClass;\n  };\n\n  this.getInstance = function (hotInstance) {\n    if (!(hotInstance.guid in instances)) {\n      instances[hotInstance.guid] = new Clazz(hotInstance);\n    }\n\n    return instances[hotInstance.guid];\n  };\n\n  Hooks.getSingleton().add('afterDestroy', function () {\n    instances[this.guid] = null;\n  });\n}\n/**\n * Returns instance (singleton) of editor class.\n *\n * @param {String} name Name of an editor under which it has been stored.\n * @param {Object} hotInstance Instance of Handsontable.\n * @returns {Function} Returns instance of editor.\n */\n\nexport function _getEditorInstance(name, hotInstance) {\n  var editor;\n\n  if (typeof name === 'function') {\n    if (!registeredEditorClasses.get(name)) {\n      _register(null, name);\n    }\n\n    editor = registeredEditorClasses.get(name);\n  } else if (typeof name === 'string') {\n    editor = getItem(name);\n  } else {\n    throw Error('Only strings and functions can be passed as \"editor\" parameter');\n  }\n\n  if (!editor) {\n    throw Error(\"No editor registered under name \\\"\".concat(name, \"\\\"\"));\n  }\n\n  return editor.getInstance(hotInstance);\n}\n/**\n * Retrieve editor class.\n *\n * @param {String} name Editor identification.\n * @returns {Function} Returns editor class.\n */\n\nfunction _getItem(name) {\n  if (!hasItem(name)) {\n    throw Error(\"No registered editor found under \\\"\".concat(name, \"\\\" name\"));\n  }\n\n  return getItem(name).getConstructor();\n}\n/**\n * Register editor class under specified name.\n *\n * @param {String} name Editor identification.\n * @param {Function} editorClass Editor class.\n */\n\n\nfunction _register(name, editorClass) {\n  var editorWrapper = new RegisteredEditor(editorClass);\n\n  if (typeof name === 'string') {\n    register(name, editorWrapper);\n  }\n\n  registeredEditorClasses.set(editorClass, editorWrapper);\n}\n\nexport { _register as registerEditor, _getItem as getEditor, _getEditorInstance as getEditorInstance, hasItem as hasEditor, getNames as getRegisteredEditorNames, getValues as getRegisteredEditors };"],"mappings":"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"},"metadata":{},"sourceType":"module"}