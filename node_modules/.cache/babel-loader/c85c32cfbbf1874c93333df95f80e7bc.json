{"ast":null,"code":"import \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\n\n/**\n * Day count for December.\n *\n * @type {Number}\n */\nexport var DEC_LENGTH = 31;\n/**\n * Day count for a week.\n *\n * @type {Number}\n */\n\nexport var WEEK_LENGTH = 7;\n/**\n * Generate a mixed month object.\n *\n * @private\n * @param {String} monthName The month name.\n * @param {Number} index Index for the mixed month.\n * @returns {Object} The month object.\n */\n\nexport function getMixedMonthObject(monthName, index) {\n  return {\n    name: monthName,\n    days: WEEK_LENGTH,\n    daysBeforeFullWeeks: 0,\n    daysAfterFullWeeks: 0,\n    fullWeeks: 1,\n    index: index\n  };\n}\n/**\n * Generate the name for a mixed month.\n *\n * @private\n * @param {Number} afterMonthIndex Index of the month after the mixed one.\n * @param {Array} monthList List of the months.\n * @returns {String} Name for the mixed month.\n */\n\nexport function getMixedMonthName(afterMonthIndex, monthList) {\n  var mixedMonthName = null;\n  var afterMonthShorthand = getShorthand(monthList[afterMonthIndex].name);\n  var beforeMonthShorthand = afterMonthIndex > 0 ? getShorthand(monthList[afterMonthIndex - 1].name) : null;\n  var firstMonthShorthand = getShorthand(monthList[0].name);\n  var lastMonthShorthand = getShorthand(monthList[monthList.length - 1].name);\n  if (afterMonthIndex > 0) {\n    mixedMonthName = \"\".concat(beforeMonthShorthand, \"/\").concat(afterMonthShorthand);\n  } else if (afterMonthIndex === monthList.length - 1) {\n    mixedMonthName = \"\".concat(afterMonthShorthand, \"/\").concat(firstMonthShorthand);\n  } else {\n    mixedMonthName = \"\".concat(lastMonthShorthand, \"/\").concat(afterMonthShorthand);\n  }\n  return mixedMonthName;\n}\n/**\n * Get the three first letters from the provided month name.\n *\n * @private\n * @param {String} monthName The month name.\n * @returns {String} The three-lettered shorthand for the month name.\n */\n\nexport function getShorthand(monthName) {\n  var MONTH_SHORT_LEN = 3;\n  return monthName.substring(0, MONTH_SHORT_LEN);\n}\n/**\n * Get the start date of the provided range bar.\n *\n * @param {Object} rangeBar The range bar object.\n * @returns {Date} The start date.\n */\n\nexport function getStartDate(rangeBar) {\n  return parseDate(Array.isArray(rangeBar) ? rangeBar[1] : rangeBar.startDate);\n}\n/**\n * Get the end date of the provided range bar.\n *\n * @param {Object} rangeBar The range bar object.\n * @returns {Date} The end date.\n */\n\nexport function getEndDate(rangeBar) {\n  return parseDate(Array.isArray(rangeBar) ? rangeBar[2] : rangeBar.endDate);\n}\n/**\n * Get the additional data object of the provided range bar.\n *\n * @param {Object} rangeBar The range bar object.\n * @returns {Object} The additional data object.\n */\n\nexport function getAdditionalData(rangeBar) {\n  return Array.isArray(rangeBar) ? rangeBar[3] : rangeBar.additionalData;\n}\n/**\n * Set the start date of the provided range bar.\n *\n * @param {Object} rangeBar The range bar object.\n * @param {Date} value The new start date value.\n */\n\nexport function setStartDate(rangeBar, value) {\n  if (Array.isArray(rangeBar)) {\n    rangeBar[1] = value;\n  } else {\n    rangeBar.startDate = value;\n  }\n}\n/**\n * Set the end date of the provided range bar.\n *\n * @param {Object} rangeBar The range bar object.\n * @param {Date} value The new end date value.\n */\n\nexport function setEndDate(rangeBar, value) {\n  if (Array.isArray(rangeBar)) {\n    rangeBar[2] = value;\n  } else {\n    rangeBar.endDate = value;\n  }\n}\n/**\n * Parse the provided date and check if it's valid.\n *\n * @param {String|Date} date Date string or object.\n * @returns {Date|null} Parsed Date object or null, if not a valid date string.\n */\n\nexport function parseDate(date) {\n  var newDate = date;\n  if (newDate === null) {\n    return null;\n  }\n  if (!(newDate instanceof Date)) {\n    newDate = new Date(newDate);\n    if (newDate.toString() === 'Invalid Date') {\n      return null;\n    }\n  }\n  return newDate;\n}\n/**\n * Get the year of the provided date.\n *\n * @param {Date|String} date Date to get the year from.\n * @returns {Number|null} The year from the provided date.\n */\n\nexport function getDateYear(date) {\n  var newDate = parseDate(date);\n  return newDate ? newDate.getFullYear() : null;\n}","map":{"version":3,"names":["DEC_LENGTH","WEEK_LENGTH","getMixedMonthObject","monthName","index","name","days","daysBeforeFullWeeks","daysAfterFullWeeks","fullWeeks","getMixedMonthName","afterMonthIndex","monthList","mixedMonthName","afterMonthShorthand","getShorthand","beforeMonthShorthand","firstMonthShorthand","lastMonthShorthand","length","concat","MONTH_SHORT_LEN","substring","getStartDate","rangeBar","parseDate","Array","isArray","startDate","getEndDate","endDate","getAdditionalData","additionalData","setStartDate","value","setEndDate","date","newDate","Date","toString","getDateYear","getFullYear"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/plugins/ganttChart/utils.js"],"sourcesContent":["import \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.function.name\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\n\n/**\n * Day count for December.\n *\n * @type {Number}\n */\nexport var DEC_LENGTH = 31;\n/**\n * Day count for a week.\n *\n * @type {Number}\n */\n\nexport var WEEK_LENGTH = 7;\n/**\n * Generate a mixed month object.\n *\n * @private\n * @param {String} monthName The month name.\n * @param {Number} index Index for the mixed month.\n * @returns {Object} The month object.\n */\n\nexport function getMixedMonthObject(monthName, index) {\n  return {\n    name: monthName,\n    days: WEEK_LENGTH,\n    daysBeforeFullWeeks: 0,\n    daysAfterFullWeeks: 0,\n    fullWeeks: 1,\n    index: index\n  };\n}\n/**\n * Generate the name for a mixed month.\n *\n * @private\n * @param {Number} afterMonthIndex Index of the month after the mixed one.\n * @param {Array} monthList List of the months.\n * @returns {String} Name for the mixed month.\n */\n\nexport function getMixedMonthName(afterMonthIndex, monthList) {\n  var mixedMonthName = null;\n  var afterMonthShorthand = getShorthand(monthList[afterMonthIndex].name);\n  var beforeMonthShorthand = afterMonthIndex > 0 ? getShorthand(monthList[afterMonthIndex - 1].name) : null;\n  var firstMonthShorthand = getShorthand(monthList[0].name);\n  var lastMonthShorthand = getShorthand(monthList[monthList.length - 1].name);\n\n  if (afterMonthIndex > 0) {\n    mixedMonthName = \"\".concat(beforeMonthShorthand, \"/\").concat(afterMonthShorthand);\n  } else if (afterMonthIndex === monthList.length - 1) {\n    mixedMonthName = \"\".concat(afterMonthShorthand, \"/\").concat(firstMonthShorthand);\n  } else {\n    mixedMonthName = \"\".concat(lastMonthShorthand, \"/\").concat(afterMonthShorthand);\n  }\n\n  return mixedMonthName;\n}\n/**\n * Get the three first letters from the provided month name.\n *\n * @private\n * @param {String} monthName The month name.\n * @returns {String} The three-lettered shorthand for the month name.\n */\n\nexport function getShorthand(monthName) {\n  var MONTH_SHORT_LEN = 3;\n  return monthName.substring(0, MONTH_SHORT_LEN);\n}\n/**\n * Get the start date of the provided range bar.\n *\n * @param {Object} rangeBar The range bar object.\n * @returns {Date} The start date.\n */\n\nexport function getStartDate(rangeBar) {\n  return parseDate(Array.isArray(rangeBar) ? rangeBar[1] : rangeBar.startDate);\n}\n/**\n * Get the end date of the provided range bar.\n *\n * @param {Object} rangeBar The range bar object.\n * @returns {Date} The end date.\n */\n\nexport function getEndDate(rangeBar) {\n  return parseDate(Array.isArray(rangeBar) ? rangeBar[2] : rangeBar.endDate);\n}\n/**\n * Get the additional data object of the provided range bar.\n *\n * @param {Object} rangeBar The range bar object.\n * @returns {Object} The additional data object.\n */\n\nexport function getAdditionalData(rangeBar) {\n  return Array.isArray(rangeBar) ? rangeBar[3] : rangeBar.additionalData;\n}\n/**\n * Set the start date of the provided range bar.\n *\n * @param {Object} rangeBar The range bar object.\n * @param {Date} value The new start date value.\n */\n\nexport function setStartDate(rangeBar, value) {\n  if (Array.isArray(rangeBar)) {\n    rangeBar[1] = value;\n  } else {\n    rangeBar.startDate = value;\n  }\n}\n/**\n * Set the end date of the provided range bar.\n *\n * @param {Object} rangeBar The range bar object.\n * @param {Date} value The new end date value.\n */\n\nexport function setEndDate(rangeBar, value) {\n  if (Array.isArray(rangeBar)) {\n    rangeBar[2] = value;\n  } else {\n    rangeBar.endDate = value;\n  }\n}\n/**\n * Parse the provided date and check if it's valid.\n *\n * @param {String|Date} date Date string or object.\n * @returns {Date|null} Parsed Date object or null, if not a valid date string.\n */\n\nexport function parseDate(date) {\n  var newDate = date;\n\n  if (newDate === null) {\n    return null;\n  }\n\n  if (!(newDate instanceof Date)) {\n    newDate = new Date(newDate);\n\n    if (newDate.toString() === 'Invalid Date') {\n      return null;\n    }\n  }\n\n  return newDate;\n}\n/**\n * Get the year of the provided date.\n *\n * @param {Date|String} date Date to get the year from.\n * @returns {Number|null} The year from the provided date.\n */\n\nexport function getDateYear(date) {\n  var newDate = parseDate(date);\n  return newDate ? newDate.getFullYear() : null;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}