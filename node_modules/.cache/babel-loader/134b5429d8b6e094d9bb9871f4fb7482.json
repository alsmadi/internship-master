{"ast":null,"code":"/**\n * Numeric cell validator\n *\n * @private\n * @validator NumericValidator\n * @param {*} value - Value of edited cell\n * @param {*} callback - Callback called with validation result\n */\nimport { isNumeric } from './../helpers/number';\nexport default function numericValidator(value, callback) {\n  var valueToValidate = value;\n  if (valueToValidate === null || valueToValidate === void 0) {\n    valueToValidate = '';\n  }\n  if (this.allowEmpty && valueToValidate === '') {\n    callback(true);\n  } else if (valueToValidate === '') {\n    callback(false);\n  } else {\n    callback(isNumeric(value));\n  }\n}","map":{"version":3,"names":["isNumeric","numericValidator","value","callback","valueToValidate","allowEmpty"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/validators/numericValidator.js"],"sourcesContent":["/**\n * Numeric cell validator\n *\n * @private\n * @validator NumericValidator\n * @param {*} value - Value of edited cell\n * @param {*} callback - Callback called with validation result\n */\nimport { isNumeric } from './../helpers/number';\nexport default function numericValidator(value, callback) {\n  var valueToValidate = value;\n\n  if (valueToValidate === null || valueToValidate === void 0) {\n    valueToValidate = '';\n  }\n\n  if (this.allowEmpty && valueToValidate === '') {\n    callback(true);\n  } else if (valueToValidate === '') {\n    callback(false);\n  } else {\n    callback(isNumeric(value));\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,eAAe,SAASC,gBAAgB,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACxD,IAAIC,eAAe,GAAGF,KAAK;EAE3B,IAAIE,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,EAAE;IAC1DA,eAAe,GAAG,EAAE;EACtB;EAEA,IAAI,IAAI,CAACC,UAAU,IAAID,eAAe,KAAK,EAAE,EAAE;IAC7CD,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,MAAM,IAAIC,eAAe,KAAK,EAAE,EAAE;IACjCD,QAAQ,CAAC,KAAK,CAAC;EACjB,CAAC,MAAM;IACLA,QAAQ,CAACH,SAAS,CAACE,KAAK,CAAC,CAAC;EAC5B;AACF"},"metadata":{},"sourceType":"module"}