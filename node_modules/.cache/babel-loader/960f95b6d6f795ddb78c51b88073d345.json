{"ast":null,"code":"import \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.object.freeze\";\nimport \"core-js/modules/es.regexp.exec\";\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Language with code \\\"\", \"\\\" was not found. You should register particular language \\n    before using it. Read more about this issue at: https://docs.handsontable.com/i18n/missing-language-code.\"]);\n  _templateObject = function _templateObject() {\n    return data;\n  };\n  return data;\n}\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nimport { isUndefined, isDefined } from './../helpers/mixed';\nimport { objectEach } from './../helpers/object';\nimport { error } from './../helpers/console';\nimport { toSingleLine } from './../helpers/templateLiteralTag';\nimport { DEFAULT_LANGUAGE_CODE, hasLanguageDictionary } from './dictionariesManager';\n/**\n * Perform shallow extend of a target object with only this extension's properties which doesn't exist in the target.\n *\n * @param {Object} target An object that will receive the new properties.\n * @param {Object} extension An object containing additional properties to merge into the target.\n */\n// TODO: Maybe it should be moved to global helpers? It's changed `extend` function.\n\nexport function extendNotExistingKeys(target, extension) {\n  objectEach(extension, function (value, key) {\n    if (isUndefined(target[key])) {\n      target[key] = value;\n    }\n  });\n  return target;\n}\n/**\n * Create range of values basing on cell indexes. For example, it will create below ranges for specified function arguments:\n *\n * createCellHeadersRange(2, 7) => `2-7`\n * createCellHeadersRange(7, 2) => `2-7`\n * createCellHeadersRange(0, 4, 'A', 'D') => `A-D`\n * createCellHeadersRange(4, 0, 'D', 'A') => `A-D`\n *\n * @param {number} firstRowIndex Index of \"first\" cell\n * @param {number} nextRowIndex Index of \"next\" cell\n * @param {*} fromValue Value which will represent \"first\" cell\n * @param {*} toValue Value which will represent \"next\" cell\n * @returns {String} Value representing range i.e. A-Z, 11-15.\n */\n\nexport function createCellHeadersRange(firstRowIndex, nextRowIndex) {\n  var fromValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : firstRowIndex;\n  var toValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : nextRowIndex;\n  // Will swap `fromValue` with `toValue` if it's necessary.\n  var from = fromValue,\n    to = toValue;\n  if (firstRowIndex > nextRowIndex) {\n    var _ref = [to, from];\n    from = _ref[0];\n    to = _ref[1];\n  }\n  return \"\".concat(from, \"-\").concat(to);\n}\n/**\n * Normalize language code. It takes handled languageCode proposition and change it to proper languageCode.\n * For example, when it takes `eN-us` as parameter it return `en-US`\n *\n * @param {String} languageCode Language code for specific language i.e. 'en-US', 'pt-BR', 'de-DE'.\n * @returns {String}\n */\n\nexport function normalizeLanguageCode(languageCode) {\n  var languageCodePattern = /^([a-zA-Z]{2})-([a-zA-Z]{2})$/;\n  var partsOfLanguageCode = languageCodePattern.exec(languageCode);\n  if (partsOfLanguageCode) {\n    return \"\".concat(partsOfLanguageCode[1].toLowerCase(), \"-\").concat(partsOfLanguageCode[2].toUpperCase());\n  }\n  return languageCode;\n}\n/**\n * Set proper start language code. User may set language code which is not proper.\n *\n * @param {Object} settings Settings object.\n * @param {String} languageCode Language code for specific language i.e. 'en-US', 'pt-BR', 'de-DE'.\n * @returns {String}\n */\n\nexport function applyLanguageSetting(settings, languageCode) {\n  var normalizedLanguageCode = normalizeLanguageCode(languageCode);\n  if (hasLanguageDictionary(normalizedLanguageCode)) {\n    settings.language = normalizedLanguageCode;\n  } else {\n    settings.language = DEFAULT_LANGUAGE_CODE;\n    warnUserAboutLanguageRegistration(languageCode);\n  }\n}\n/**\n *\n * Warn user if there is no registered language.\n *\n * @param {String} languageCode Language code for specific language i.e. 'en-US', 'pt-BR', 'de-DE'.\n */\n\nexport function warnUserAboutLanguageRegistration(languageCode) {\n  if (isDefined(languageCode)) {\n    error(toSingleLine(_templateObject(), languageCode));\n  }\n}","map":{"version":3,"names":["_templateObject","data","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","isUndefined","isDefined","objectEach","error","toSingleLine","DEFAULT_LANGUAGE_CODE","hasLanguageDictionary","extendNotExistingKeys","target","extension","key","createCellHeadersRange","firstRowIndex","nextRowIndex","fromValue","arguments","length","undefined","toValue","from","to","_ref","concat","normalizeLanguageCode","languageCode","languageCodePattern","partsOfLanguageCode","exec","toLowerCase","toUpperCase","applyLanguageSetting","settings","normalizedLanguageCode","language","warnUserAboutLanguageRegistration"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/i18n/utils.js"],"sourcesContent":["import \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.object.freeze\";\nimport \"core-js/modules/es.regexp.exec\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Language with code \\\"\", \"\\\" was not found. You should register particular language \\n    before using it. Read more about this issue at: https://docs.handsontable.com/i18n/missing-language-code.\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport { isUndefined, isDefined } from './../helpers/mixed';\nimport { objectEach } from './../helpers/object';\nimport { error } from './../helpers/console';\nimport { toSingleLine } from './../helpers/templateLiteralTag';\nimport { DEFAULT_LANGUAGE_CODE, hasLanguageDictionary } from './dictionariesManager';\n/**\n * Perform shallow extend of a target object with only this extension's properties which doesn't exist in the target.\n *\n * @param {Object} target An object that will receive the new properties.\n * @param {Object} extension An object containing additional properties to merge into the target.\n */\n// TODO: Maybe it should be moved to global helpers? It's changed `extend` function.\n\nexport function extendNotExistingKeys(target, extension) {\n  objectEach(extension, function (value, key) {\n    if (isUndefined(target[key])) {\n      target[key] = value;\n    }\n  });\n  return target;\n}\n/**\n * Create range of values basing on cell indexes. For example, it will create below ranges for specified function arguments:\n *\n * createCellHeadersRange(2, 7) => `2-7`\n * createCellHeadersRange(7, 2) => `2-7`\n * createCellHeadersRange(0, 4, 'A', 'D') => `A-D`\n * createCellHeadersRange(4, 0, 'D', 'A') => `A-D`\n *\n * @param {number} firstRowIndex Index of \"first\" cell\n * @param {number} nextRowIndex Index of \"next\" cell\n * @param {*} fromValue Value which will represent \"first\" cell\n * @param {*} toValue Value which will represent \"next\" cell\n * @returns {String} Value representing range i.e. A-Z, 11-15.\n */\n\nexport function createCellHeadersRange(firstRowIndex, nextRowIndex) {\n  var fromValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : firstRowIndex;\n  var toValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : nextRowIndex;\n  // Will swap `fromValue` with `toValue` if it's necessary.\n  var from = fromValue,\n      to = toValue;\n\n  if (firstRowIndex > nextRowIndex) {\n    var _ref = [to, from];\n    from = _ref[0];\n    to = _ref[1];\n  }\n\n  return \"\".concat(from, \"-\").concat(to);\n}\n/**\n * Normalize language code. It takes handled languageCode proposition and change it to proper languageCode.\n * For example, when it takes `eN-us` as parameter it return `en-US`\n *\n * @param {String} languageCode Language code for specific language i.e. 'en-US', 'pt-BR', 'de-DE'.\n * @returns {String}\n */\n\nexport function normalizeLanguageCode(languageCode) {\n  var languageCodePattern = /^([a-zA-Z]{2})-([a-zA-Z]{2})$/;\n  var partsOfLanguageCode = languageCodePattern.exec(languageCode);\n\n  if (partsOfLanguageCode) {\n    return \"\".concat(partsOfLanguageCode[1].toLowerCase(), \"-\").concat(partsOfLanguageCode[2].toUpperCase());\n  }\n\n  return languageCode;\n}\n/**\n * Set proper start language code. User may set language code which is not proper.\n *\n * @param {Object} settings Settings object.\n * @param {String} languageCode Language code for specific language i.e. 'en-US', 'pt-BR', 'de-DE'.\n * @returns {String}\n */\n\nexport function applyLanguageSetting(settings, languageCode) {\n  var normalizedLanguageCode = normalizeLanguageCode(languageCode);\n\n  if (hasLanguageDictionary(normalizedLanguageCode)) {\n    settings.language = normalizedLanguageCode;\n  } else {\n    settings.language = DEFAULT_LANGUAGE_CODE;\n    warnUserAboutLanguageRegistration(languageCode);\n  }\n}\n/**\n *\n * Warn user if there is no registered language.\n *\n * @param {String} languageCode Language code for specific language i.e. 'en-US', 'pt-BR', 'de-DE'.\n */\n\nexport function warnUserAboutLanguageRegistration(languageCode) {\n  if (isDefined(languageCode)) {\n    error(toSingleLine(_templateObject(), languageCode));\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}