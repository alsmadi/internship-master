{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get(target, property, receiver || target);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport BasePlugin from '../_base';\nimport { addClass } from '../../helpers/dom/element';\nimport { rangeEach } from '../../helpers/number';\nimport { arrayEach } from '../../helpers/array';\nimport { registerPlugin } from '../../plugins';\nimport { SEPARATOR } from '../contextMenu/predefinedItems';\nimport Hooks from '../../pluginHooks';\nimport hideColumnItem from './contextMenuItem/hideColumn';\nimport showColumnItem from './contextMenuItem/showColumn';\nHooks.getSingleton().register('beforeHideColumns');\nHooks.getSingleton().register('afterHideColumns');\nHooks.getSingleton().register('beforeUnhideColumns');\nHooks.getSingleton().register('afterUnhideColumns');\n/**\n * @plugin HiddenColumns\n *\n * @description\n * Plugin allows to hide certain columns. The hiding is achieved by rendering the columns with width set as 0px.\n * The plugin not modifies the source data and do not participate in data transformation (the shape of data returned\n * by `getData*` methods stays intact).\n *\n * Possible plugin settings:\n *  * `copyPasteEnabled` as `Boolean` (default `true`)\n *  * `columns` as `Array`\n *  * `indicators` as `Boolean` (default `false`)\n *\n * @example\n *\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   date: getData(),\n *   hiddenColumns: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     columns: [1, 2, 5]\n *   }\n * });\n *\n * // access to hiddenColumns plugin instance:\n * const hiddenColumnsPlugin = hot.getPlugin('hiddenColumns');\n *\n * // show single row\n * hiddenColumnsPlugin.showColumn(1);\n *\n * // show multiple columns\n * hiddenColumnsPlugin.showColumn(1, 2, 9);\n *\n * // or as an array\n * hiddenColumnsPlugin.showColumns([1, 2, 9]);\n *\n * // hide single row\n * hiddenColumnsPlugin.hideColumn(1);\n *\n * // hide multiple columns\n * hiddenColumnsPlugin.hideColumn(1, 2, 9);\n *\n * // or as an array\n * hiddenColumnsPlugin.hideColumns([1, 2, 9]);\n *\n * // rerender the table to see all changes\n * hot.render();\n * ```\n */\n\nvar HiddenColumns = /*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(HiddenColumns, _BasePlugin);\n  function HiddenColumns(hotInstance) {\n    var _this;\n    _classCallCheck(this, HiddenColumns);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HiddenColumns).call(this, hotInstance));\n    /**\n     * Cached plugin settings.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.settings = {};\n    /**\n     * List of currently hidden columns\n     *\n     * @private\n     * @type {Number[]}\n     */\n\n    _this.hiddenColumns = [];\n    /**\n     * Last selected column index.\n     *\n     * @private\n     * @type {Number}\n     * @default -1\n     */\n\n    _this.lastSelectedColumn = -1;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link HiddenColumns#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n  _createClass(HiddenColumns, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().hiddenColumns;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      if (this.hot.hasColHeaders()) {\n        this.addHook('afterGetColHeader', function (col, TH) {\n          return _this2.onAfterGetColHeader(col, TH);\n        });\n      } else {\n        this.addHook('afterRenderer', function (TD, row, col) {\n          return _this2.onAfterGetColHeader(col, TD);\n        });\n      }\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyColWidth', function (width, col) {\n        return _this2.onModifyColWidth(width, col);\n      });\n      this.addHook('beforeSetRangeStartOnly', function (coords) {\n        return _this2.onBeforeSetRangeStart(coords);\n      });\n      this.addHook('beforeSetRangeEnd', function (coords) {\n        return _this2.onBeforeSetRangeEnd(coords);\n      });\n      this.addHook('hiddenColumn', function (column) {\n        return _this2.isHidden(column);\n      });\n      this.addHook('beforeStretchingColumnWidth', function (width, column) {\n        return _this2.onBeforeStretchingColumnWidth(width, column);\n      });\n      this.addHook('afterCreateCol', function (index, amount) {\n        return _this2.onAfterCreateCol(index, amount);\n      });\n      this.addHook('afterRemoveCol', function (index, amount) {\n        return _this2.onAfterRemoveCol(index, amount);\n      });\n      this.addHook('init', function () {\n        return _this2.onInit();\n      }); // Dirty workaround - the section below runs only if the HOT instance is already prepared.\n\n      if (this.hot.view) {\n        this.onInit();\n      }\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.settings = {};\n      this.hiddenColumns = [];\n      this.lastSelectedColumn = -1;\n      this.hot.render();\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"disablePlugin\", this).call(this);\n      this.resetCellsMeta();\n    }\n    /**\n     * Shows the provided columns.\n     *\n     * @param {Number[]} columns Array of column indexes.\n     */\n  }, {\n    key: \"showColumns\",\n    value: function showColumns(columns) {\n      var currentHideConfig = this.hiddenColumns;\n      var validColumns = this.isColumnDataValid(columns);\n      var destinationHideConfig = currentHideConfig;\n      if (validColumns) {\n        destinationHideConfig = this.hiddenColumns.filter(function (hiddenColumn) {\n          return columns.includes(hiddenColumn) === false;\n        });\n      }\n      var continueHiding = this.hot.runHooks('beforeUnhideColumns', currentHideConfig, destinationHideConfig, validColumns);\n      if (continueHiding === false) {\n        return;\n      }\n      if (validColumns) {\n        this.hiddenColumns = destinationHideConfig;\n      }\n      this.hot.runHooks('afterUnhideColumns', currentHideConfig, destinationHideConfig, validColumns, validColumns && destinationHideConfig.length < currentHideConfig.length);\n    }\n    /**\n     * Shows a single column.\n     *\n     * @param {...Number} column Visual column index.\n     */\n  }, {\n    key: \"showColumn\",\n    value: function showColumn() {\n      for (var _len = arguments.length, column = new Array(_len), _key = 0; _key < _len; _key++) {\n        column[_key] = arguments[_key];\n      }\n      this.showColumns(column);\n    }\n    /**\n     * Hides the columns provided in the array.\n     *\n     * @param {Number[]} columns Array of visual column indexes.\n     */\n  }, {\n    key: \"hideColumns\",\n    value: function hideColumns(columns) {\n      var currentHideConfig = this.hiddenColumns;\n      var validColumns = this.isColumnDataValid(columns);\n      var destinationHideConfig = currentHideConfig;\n      if (validColumns) {\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(columns)));\n      }\n      var continueHiding = this.hot.runHooks('beforeHideColumns', currentHideConfig, destinationHideConfig, validColumns);\n      if (continueHiding === false) {\n        return;\n      }\n      if (validColumns) {\n        this.hiddenColumns = destinationHideConfig;\n      }\n      this.hot.runHooks('afterHideColumns', currentHideConfig, destinationHideConfig, validColumns, validColumns && destinationHideConfig.length > currentHideConfig.length);\n    }\n    /**\n     * Hides a single column.\n     *\n     * @param {...Number} column Visual column index.\n     */\n  }, {\n    key: \"hideColumn\",\n    value: function hideColumn() {\n      for (var _len2 = arguments.length, column = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        column[_key2] = arguments[_key2];\n      }\n      this.hideColumns(column);\n    }\n    /**\n     * Checks if the provided column is hidden.\n     *\n     * @param {Number} column Column index.\n     * @param {Boolean} isPhysicalIndex flag which determines type of index.\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(column) {\n      var isPhysicalIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var physicalColumn = column;\n      if (!isPhysicalIndex) {\n        physicalColumn = this.hot.toPhysicalColumn(column);\n      }\n      return this.hiddenColumns.includes(physicalColumn);\n    }\n    /**\n     * Check whether all of the provided column indexes are within the bounds of the table.\n     *\n     * @param {Array} columns Array of column indexes.\n     */\n  }, {\n    key: \"isColumnDataValid\",\n    value: function isColumnDataValid(columns) {\n      var _this3 = this;\n      return columns.every(function (column) {\n        return Number.isInteger(column) && column >= 0 && column < _this3.hot.countCols();\n      });\n    }\n    /**\n     * Reset all rendered cells meta.\n     *\n     * @private\n     */\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipColumnOnPaste = false;\n          if (meta.baseRenderer !== null) {\n            meta.renderer = meta.baseRenderer;\n            meta.baseRenderer = null;\n          }\n        }\n      });\n    }\n    /**\n     * Sets width hidden columns on 0\n     *\n     * @private\n     * @param {Number} width Column width.\n     * @param {Number} column Column index.\n     * @returns {Number}\n     */\n  }, {\n    key: \"onBeforeStretchingColumnWidth\",\n    value: function onBeforeStretchingColumnWidth(width, column) {\n      var stretchedWidth = width;\n      if (this.isHidden(column)) {\n        stretchedWidth = 0;\n      }\n      return stretchedWidth;\n    }\n    /**\n     * Adds the additional column width for the hidden column indicators.\n     *\n     * @private\n     * @param {Number} width\n     * @param {Number} col\n     * @returns {Number}\n     */\n  }, {\n    key: \"onModifyColWidth\",\n    value: function onModifyColWidth(width, col) {\n      if (this.isHidden(col)) {\n        return 0.1;\n      } else if (this.settings.indicators && (this.isHidden(col + 1) || this.isHidden(col - 1))) {\n        // add additional space for hidden column indicator\n        return width + (this.hot.hasColHeaders() ? 15 : 0);\n      }\n    }\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {Number} row\n     * @param {Number} col\n     * @param {Object} cellProperties\n     *\n     * @fires Hooks#unmodifyCol\n     */\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, col, cellProperties) {\n      var colIndex = this.hot.runHooks('unmodifyCol', col);\n      if (this.settings.copyPasteEnabled === false && this.isHidden(col)) {\n        cellProperties.skipColumnOnPaste = true;\n      }\n      if (this.isHidden(colIndex)) {\n        if (cellProperties.renderer !== hiddenRenderer) {\n          cellProperties.baseRenderer = cellProperties.renderer;\n        }\n        cellProperties.renderer = hiddenRenderer;\n      } else if (cellProperties.baseRenderer !== null) {\n        // We must pass undefined value too (for the purposes of inheritance cell/column settings).\n        cellProperties.renderer = cellProperties.baseRenderer;\n        cellProperties.baseRenderer = null;\n      }\n      if (this.isHidden(cellProperties.visualCol - 1)) {\n        var firstSectionHidden = true;\n        var i = cellProperties.visualCol - 1;\n        cellProperties.className = cellProperties.className || '';\n        if (cellProperties.className.indexOf('afterHiddenColumn') === -1) {\n          cellProperties.className += ' afterHiddenColumn';\n        }\n        do {\n          if (!this.isHidden(i)) {\n            firstSectionHidden = false;\n            break;\n          }\n          i -= 1;\n        } while (i >= 0);\n        if (firstSectionHidden && cellProperties.className.indexOf('firstVisibleColumn') === -1) {\n          cellProperties.className += ' firstVisibleColumn';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n        if (classArr.length) {\n          var containAfterHiddenColumn = classArr.indexOf('afterHiddenColumn');\n          if (containAfterHiddenColumn > -1) {\n            classArr.splice(containAfterHiddenColumn, 1);\n          }\n          var containFirstVisible = classArr.indexOf('firstVisibleColumn');\n          if (containFirstVisible > -1) {\n            classArr.splice(containFirstVisible, 1);\n          }\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n    /**\n     * Modifies the copyable range, accordingly to the provided config.\n     *\n     * @private\n     * @param {Array} ranges\n     * @returns {Array}\n     */\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this4 = this;\n      var newRanges = [];\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startCol, range.endCol, function (col) {\n          if (_this4.isHidden(col)) {\n            if (!isHidden) {\n              pushRange(range.startRow, range.endRow, rangeStart, col - 1);\n            }\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = col;\n            }\n            if (col === range.endCol) {\n              pushRange(range.startRow, range.endRow, rangeStart, col);\n            }\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {Number} column\n     * @param {HTMLElement} TH\n     */\n  }, {\n    key: \"onAfterGetColHeader\",\n    value: function onAfterGetColHeader(column, TH) {\n      if (this.isHidden(column)) {\n        return;\n      }\n      var firstSectionHidden = true;\n      var i = column - 1;\n      do {\n        if (!this.isHidden(i)) {\n          firstSectionHidden = false;\n          break;\n        }\n        i -= 1;\n      } while (i >= 0);\n      if (firstSectionHidden) {\n        addClass(TH, 'firstVisibleColumn');\n      }\n      if (!this.settings.indicators) {\n        return;\n      }\n      if (this.isHidden(column - 1)) {\n        addClass(TH, 'afterHiddenColumn');\n      }\n      if (this.isHidden(column + 1) && column > -1) {\n        addClass(TH, 'beforeHiddenColumn');\n      }\n    }\n    /**\n     * On before set range start listener.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n  }, {\n    key: \"onBeforeSetRangeStart\",\n    value: function onBeforeSetRangeStart(coords) {\n      var _this5 = this;\n      if (coords.col > 0) {\n        return;\n      }\n      coords.col = 0;\n      var getNextColumn = function getNextColumn(col) {\n        var visualColumn = col;\n        var physicalColumn = _this5.hot.toPhysicalColumn(visualColumn);\n        if (_this5.isHidden(physicalColumn, true)) {\n          visualColumn += 1;\n          visualColumn = getNextColumn(visualColumn);\n        }\n        return visualColumn;\n      };\n      coords.col = getNextColumn(coords.col);\n    }\n    /**\n     * On before set range end listener.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n  }, {\n    key: \"onBeforeSetRangeEnd\",\n    value: function onBeforeSetRangeEnd(coords) {\n      var _this6 = this;\n      var columnCount = this.hot.countCols();\n      var getNextColumn = function getNextColumn(col) {\n        var visualColumn = col;\n        var physicalColumn = _this6.hot.toPhysicalColumn(visualColumn);\n        if (_this6.isHidden(physicalColumn, true)) {\n          if (_this6.lastSelectedColumn > visualColumn || coords.col === columnCount - 1) {\n            if (visualColumn > 0) {\n              visualColumn -= 1;\n              visualColumn = getNextColumn(visualColumn);\n            } else {\n              rangeEach(0, _this6.lastSelectedColumn, function (i) {\n                if (!_this6.isHidden(i)) {\n                  visualColumn = i;\n                  return false;\n                }\n              });\n            }\n          } else {\n            visualColumn += 1;\n            visualColumn = getNextColumn(visualColumn);\n          }\n        }\n        return visualColumn;\n      };\n      coords.col = getNextColumn(coords.col);\n      this.lastSelectedColumn = coords.col;\n    }\n    /**\n     * Add Show-hide columns to context menu.\n     *\n     * @private\n     * @param {Object} options\n     */\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: SEPARATOR\n      }, hideColumnItem(this), showColumnItem(this));\n    }\n    /**\n     * `onAfterCreateCol` hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterCreateCol\",\n    value: function onAfterCreateCol(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenColumns, function (col) {\n        var visualColumn = col;\n        if (visualColumn >= index) {\n          visualColumn += amount;\n        }\n        tempHidden.push(visualColumn);\n      });\n      this.hiddenColumns = tempHidden;\n    }\n    /**\n     * `onAfterRemoveCol` hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterRemoveCol\",\n    value: function onAfterRemoveCol(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenColumns, function (col) {\n        var visualColumn = col;\n        if (visualColumn >= index) {\n          visualColumn -= amount;\n        }\n        tempHidden.push(visualColumn);\n      });\n      this.hiddenColumns = tempHidden;\n    }\n    /**\n     * `afterPluginsInitialized` hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onInit\",\n    value: function onInit() {\n      var _this7 = this;\n      var settings = this.hot.getSettings().hiddenColumns;\n      if (_typeof(settings) === 'object') {\n        this.settings = settings;\n        if (settings.copyPasteEnabled === void 0) {\n          settings.copyPasteEnabled = true;\n        }\n        if (Array.isArray(settings.columns)) {\n          this.hideColumns(settings.columns);\n        }\n        if (!settings.copyPasteEnabled) {\n          this.addHook('modifyCopyableRange', function (ranges) {\n            return _this7.onModifyCopyableRange(ranges);\n          });\n        }\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n  return HiddenColumns;\n}(BasePlugin);\nfunction hiddenRenderer(hotInstance, td) {\n  td.textContent = '';\n}\nregisterPlugin('hiddenColumns', HiddenColumns);\nexport default HiddenColumns;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","value","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","BasePlugin","addClass","rangeEach","arrayEach","registerPlugin","SEPARATOR","Hooks","hideColumnItem","showColumnItem","getSingleton","register","HiddenColumns","_BasePlugin","hotInstance","_this","settings","hiddenColumns","lastSelectedColumn","isEnabled","hot","getSettings","enablePlugin","_this2","enabled","hasColHeaders","addHook","col","TH","onAfterGetColHeader","TD","row","options","onAfterContextMenuDefaultOptions","cellProperties","onAfterGetCellMeta","width","onModifyColWidth","coords","onBeforeSetRangeStart","onBeforeSetRangeEnd","column","isHidden","onBeforeStretchingColumnWidth","index","amount","onAfterCreateCol","onAfterRemoveCol","onInit","view","updatePlugin","disablePlugin","render","resetCellsMeta","showColumns","columns","currentHideConfig","validColumns","isColumnDataValid","destinationHideConfig","filter","hiddenColumn","includes","continueHiding","runHooks","showColumn","_len","arguments","Array","_key","hideColumns","from","Set","concat","hideColumn","_len2","_key2","isPhysicalIndex","undefined","physicalColumn","toPhysicalColumn","_this3","every","Number","isInteger","countCols","getCellsMeta","meta","skipColumnOnPaste","baseRenderer","renderer","stretchedWidth","indicators","colIndex","copyPasteEnabled","hiddenRenderer","visualCol","firstSectionHidden","className","indexOf","classArr","split","containAfterHiddenColumn","splice","containFirstVisible","join","onModifyCopyableRange","ranges","_this4","newRanges","pushRange","startRow","endRow","startCol","endCol","push","range","rangeStart","_this5","getNextColumn","visualColumn","_this6","columnCount","items","name","tempHidden","_this7","isArray","destroy","td","textContent"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/plugins/hiddenColumns/hiddenColumns.js"],"sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.every\";\nimport \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.number.constructor\";\nimport \"core-js/modules/es.number.is-integer\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.set\";\nimport \"core-js/modules/es.string.includes\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.string.split\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from '../_base';\nimport { addClass } from '../../helpers/dom/element';\nimport { rangeEach } from '../../helpers/number';\nimport { arrayEach } from '../../helpers/array';\nimport { registerPlugin } from '../../plugins';\nimport { SEPARATOR } from '../contextMenu/predefinedItems';\nimport Hooks from '../../pluginHooks';\nimport hideColumnItem from './contextMenuItem/hideColumn';\nimport showColumnItem from './contextMenuItem/showColumn';\nHooks.getSingleton().register('beforeHideColumns');\nHooks.getSingleton().register('afterHideColumns');\nHooks.getSingleton().register('beforeUnhideColumns');\nHooks.getSingleton().register('afterUnhideColumns');\n/**\n * @plugin HiddenColumns\n *\n * @description\n * Plugin allows to hide certain columns. The hiding is achieved by rendering the columns with width set as 0px.\n * The plugin not modifies the source data and do not participate in data transformation (the shape of data returned\n * by `getData*` methods stays intact).\n *\n * Possible plugin settings:\n *  * `copyPasteEnabled` as `Boolean` (default `true`)\n *  * `columns` as `Array`\n *  * `indicators` as `Boolean` (default `false`)\n *\n * @example\n *\n * ```js\n * const container = document.getElementById('example');\n * const hot = new Handsontable(container, {\n *   date: getData(),\n *   hiddenColumns: {\n *     copyPasteEnabled: true,\n *     indicators: true,\n *     columns: [1, 2, 5]\n *   }\n * });\n *\n * // access to hiddenColumns plugin instance:\n * const hiddenColumnsPlugin = hot.getPlugin('hiddenColumns');\n *\n * // show single row\n * hiddenColumnsPlugin.showColumn(1);\n *\n * // show multiple columns\n * hiddenColumnsPlugin.showColumn(1, 2, 9);\n *\n * // or as an array\n * hiddenColumnsPlugin.showColumns([1, 2, 9]);\n *\n * // hide single row\n * hiddenColumnsPlugin.hideColumn(1);\n *\n * // hide multiple columns\n * hiddenColumnsPlugin.hideColumn(1, 2, 9);\n *\n * // or as an array\n * hiddenColumnsPlugin.hideColumns([1, 2, 9]);\n *\n * // rerender the table to see all changes\n * hot.render();\n * ```\n */\n\nvar HiddenColumns =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(HiddenColumns, _BasePlugin);\n\n  function HiddenColumns(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, HiddenColumns);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HiddenColumns).call(this, hotInstance));\n    /**\n     * Cached plugin settings.\n     *\n     * @private\n     * @type {Object}\n     */\n\n    _this.settings = {};\n    /**\n     * List of currently hidden columns\n     *\n     * @private\n     * @type {Number[]}\n     */\n\n    _this.hiddenColumns = [];\n    /**\n     * Last selected column index.\n     *\n     * @private\n     * @type {Number}\n     * @default -1\n     */\n\n    _this.lastSelectedColumn = -1;\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link HiddenColumns#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(HiddenColumns, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().hiddenColumns;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      if (this.hot.hasColHeaders()) {\n        this.addHook('afterGetColHeader', function (col, TH) {\n          return _this2.onAfterGetColHeader(col, TH);\n        });\n      } else {\n        this.addHook('afterRenderer', function (TD, row, col) {\n          return _this2.onAfterGetColHeader(col, TD);\n        });\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.onAfterContextMenuDefaultOptions(options);\n      });\n      this.addHook('afterGetCellMeta', function (row, col, cellProperties) {\n        return _this2.onAfterGetCellMeta(row, col, cellProperties);\n      });\n      this.addHook('modifyColWidth', function (width, col) {\n        return _this2.onModifyColWidth(width, col);\n      });\n      this.addHook('beforeSetRangeStartOnly', function (coords) {\n        return _this2.onBeforeSetRangeStart(coords);\n      });\n      this.addHook('beforeSetRangeEnd', function (coords) {\n        return _this2.onBeforeSetRangeEnd(coords);\n      });\n      this.addHook('hiddenColumn', function (column) {\n        return _this2.isHidden(column);\n      });\n      this.addHook('beforeStretchingColumnWidth', function (width, column) {\n        return _this2.onBeforeStretchingColumnWidth(width, column);\n      });\n      this.addHook('afterCreateCol', function (index, amount) {\n        return _this2.onAfterCreateCol(index, amount);\n      });\n      this.addHook('afterRemoveCol', function (index, amount) {\n        return _this2.onAfterRemoveCol(index, amount);\n      });\n      this.addHook('init', function () {\n        return _this2.onInit();\n      }); // Dirty workaround - the section below runs only if the HOT instance is already prepared.\n\n      if (this.hot.view) {\n        this.onInit();\n      }\n\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"updatePlugin\", this).call(this);\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      this.settings = {};\n      this.hiddenColumns = [];\n      this.lastSelectedColumn = -1;\n      this.hot.render();\n\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"disablePlugin\", this).call(this);\n\n      this.resetCellsMeta();\n    }\n    /**\n     * Shows the provided columns.\n     *\n     * @param {Number[]} columns Array of column indexes.\n     */\n\n  }, {\n    key: \"showColumns\",\n    value: function showColumns(columns) {\n      var currentHideConfig = this.hiddenColumns;\n      var validColumns = this.isColumnDataValid(columns);\n      var destinationHideConfig = currentHideConfig;\n\n      if (validColumns) {\n        destinationHideConfig = this.hiddenColumns.filter(function (hiddenColumn) {\n          return columns.includes(hiddenColumn) === false;\n        });\n      }\n\n      var continueHiding = this.hot.runHooks('beforeUnhideColumns', currentHideConfig, destinationHideConfig, validColumns);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (validColumns) {\n        this.hiddenColumns = destinationHideConfig;\n      }\n\n      this.hot.runHooks('afterUnhideColumns', currentHideConfig, destinationHideConfig, validColumns, validColumns && destinationHideConfig.length < currentHideConfig.length);\n    }\n    /**\n     * Shows a single column.\n     *\n     * @param {...Number} column Visual column index.\n     */\n\n  }, {\n    key: \"showColumn\",\n    value: function showColumn() {\n      for (var _len = arguments.length, column = new Array(_len), _key = 0; _key < _len; _key++) {\n        column[_key] = arguments[_key];\n      }\n\n      this.showColumns(column);\n    }\n    /**\n     * Hides the columns provided in the array.\n     *\n     * @param {Number[]} columns Array of visual column indexes.\n     */\n\n  }, {\n    key: \"hideColumns\",\n    value: function hideColumns(columns) {\n      var currentHideConfig = this.hiddenColumns;\n      var validColumns = this.isColumnDataValid(columns);\n      var destinationHideConfig = currentHideConfig;\n\n      if (validColumns) {\n        destinationHideConfig = Array.from(new Set(currentHideConfig.concat(columns)));\n      }\n\n      var continueHiding = this.hot.runHooks('beforeHideColumns', currentHideConfig, destinationHideConfig, validColumns);\n\n      if (continueHiding === false) {\n        return;\n      }\n\n      if (validColumns) {\n        this.hiddenColumns = destinationHideConfig;\n      }\n\n      this.hot.runHooks('afterHideColumns', currentHideConfig, destinationHideConfig, validColumns, validColumns && destinationHideConfig.length > currentHideConfig.length);\n    }\n    /**\n     * Hides a single column.\n     *\n     * @param {...Number} column Visual column index.\n     */\n\n  }, {\n    key: \"hideColumn\",\n    value: function hideColumn() {\n      for (var _len2 = arguments.length, column = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        column[_key2] = arguments[_key2];\n      }\n\n      this.hideColumns(column);\n    }\n    /**\n     * Checks if the provided column is hidden.\n     *\n     * @param {Number} column Column index.\n     * @param {Boolean} isPhysicalIndex flag which determines type of index.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isHidden\",\n    value: function isHidden(column) {\n      var isPhysicalIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var physicalColumn = column;\n\n      if (!isPhysicalIndex) {\n        physicalColumn = this.hot.toPhysicalColumn(column);\n      }\n\n      return this.hiddenColumns.includes(physicalColumn);\n    }\n    /**\n     * Check whether all of the provided column indexes are within the bounds of the table.\n     *\n     * @param {Array} columns Array of column indexes.\n     */\n\n  }, {\n    key: \"isColumnDataValid\",\n    value: function isColumnDataValid(columns) {\n      var _this3 = this;\n\n      return columns.every(function (column) {\n        return Number.isInteger(column) && column >= 0 && column < _this3.hot.countCols();\n      });\n    }\n    /**\n     * Reset all rendered cells meta.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"resetCellsMeta\",\n    value: function resetCellsMeta() {\n      arrayEach(this.hot.getCellsMeta(), function (meta) {\n        if (meta) {\n          meta.skipColumnOnPaste = false;\n\n          if (meta.baseRenderer !== null) {\n            meta.renderer = meta.baseRenderer;\n            meta.baseRenderer = null;\n          }\n        }\n      });\n    }\n    /**\n     * Sets width hidden columns on 0\n     *\n     * @private\n     * @param {Number} width Column width.\n     * @param {Number} column Column index.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"onBeforeStretchingColumnWidth\",\n    value: function onBeforeStretchingColumnWidth(width, column) {\n      var stretchedWidth = width;\n\n      if (this.isHidden(column)) {\n        stretchedWidth = 0;\n      }\n\n      return stretchedWidth;\n    }\n    /**\n     * Adds the additional column width for the hidden column indicators.\n     *\n     * @private\n     * @param {Number} width\n     * @param {Number} col\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"onModifyColWidth\",\n    value: function onModifyColWidth(width, col) {\n      if (this.isHidden(col)) {\n        return 0.1;\n      } else if (this.settings.indicators && (this.isHidden(col + 1) || this.isHidden(col - 1))) {\n        // add additional space for hidden column indicator\n        return width + (this.hot.hasColHeaders() ? 15 : 0);\n      }\n    }\n    /**\n     * Sets the copy-related cell meta.\n     *\n     * @private\n     * @param {Number} row\n     * @param {Number} col\n     * @param {Object} cellProperties\n     *\n     * @fires Hooks#unmodifyCol\n     */\n\n  }, {\n    key: \"onAfterGetCellMeta\",\n    value: function onAfterGetCellMeta(row, col, cellProperties) {\n      var colIndex = this.hot.runHooks('unmodifyCol', col);\n\n      if (this.settings.copyPasteEnabled === false && this.isHidden(col)) {\n        cellProperties.skipColumnOnPaste = true;\n      }\n\n      if (this.isHidden(colIndex)) {\n        if (cellProperties.renderer !== hiddenRenderer) {\n          cellProperties.baseRenderer = cellProperties.renderer;\n        }\n\n        cellProperties.renderer = hiddenRenderer;\n      } else if (cellProperties.baseRenderer !== null) {\n        // We must pass undefined value too (for the purposes of inheritance cell/column settings).\n        cellProperties.renderer = cellProperties.baseRenderer;\n        cellProperties.baseRenderer = null;\n      }\n\n      if (this.isHidden(cellProperties.visualCol - 1)) {\n        var firstSectionHidden = true;\n        var i = cellProperties.visualCol - 1;\n        cellProperties.className = cellProperties.className || '';\n\n        if (cellProperties.className.indexOf('afterHiddenColumn') === -1) {\n          cellProperties.className += ' afterHiddenColumn';\n        }\n\n        do {\n          if (!this.isHidden(i)) {\n            firstSectionHidden = false;\n            break;\n          }\n\n          i -= 1;\n        } while (i >= 0);\n\n        if (firstSectionHidden && cellProperties.className.indexOf('firstVisibleColumn') === -1) {\n          cellProperties.className += ' firstVisibleColumn';\n        }\n      } else if (cellProperties.className) {\n        var classArr = cellProperties.className.split(' ');\n\n        if (classArr.length) {\n          var containAfterHiddenColumn = classArr.indexOf('afterHiddenColumn');\n\n          if (containAfterHiddenColumn > -1) {\n            classArr.splice(containAfterHiddenColumn, 1);\n          }\n\n          var containFirstVisible = classArr.indexOf('firstVisibleColumn');\n\n          if (containFirstVisible > -1) {\n            classArr.splice(containFirstVisible, 1);\n          }\n\n          cellProperties.className = classArr.join(' ');\n        }\n      }\n    }\n    /**\n     * Modifies the copyable range, accordingly to the provided config.\n     *\n     * @private\n     * @param {Array} ranges\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"onModifyCopyableRange\",\n    value: function onModifyCopyableRange(ranges) {\n      var _this4 = this;\n\n      var newRanges = [];\n\n      var pushRange = function pushRange(startRow, endRow, startCol, endCol) {\n        newRanges.push({\n          startRow: startRow,\n          endRow: endRow,\n          startCol: startCol,\n          endCol: endCol\n        });\n      };\n\n      arrayEach(ranges, function (range) {\n        var isHidden = true;\n        var rangeStart = 0;\n        rangeEach(range.startCol, range.endCol, function (col) {\n          if (_this4.isHidden(col)) {\n            if (!isHidden) {\n              pushRange(range.startRow, range.endRow, rangeStart, col - 1);\n            }\n\n            isHidden = true;\n          } else {\n            if (isHidden) {\n              rangeStart = col;\n            }\n\n            if (col === range.endCol) {\n              pushRange(range.startRow, range.endRow, rangeStart, col);\n            }\n\n            isHidden = false;\n          }\n        });\n      });\n      return newRanges;\n    }\n    /**\n     * Adds the needed classes to the headers.\n     *\n     * @private\n     * @param {Number} column\n     * @param {HTMLElement} TH\n     */\n\n  }, {\n    key: \"onAfterGetColHeader\",\n    value: function onAfterGetColHeader(column, TH) {\n      if (this.isHidden(column)) {\n        return;\n      }\n\n      var firstSectionHidden = true;\n      var i = column - 1;\n\n      do {\n        if (!this.isHidden(i)) {\n          firstSectionHidden = false;\n          break;\n        }\n\n        i -= 1;\n      } while (i >= 0);\n\n      if (firstSectionHidden) {\n        addClass(TH, 'firstVisibleColumn');\n      }\n\n      if (!this.settings.indicators) {\n        return;\n      }\n\n      if (this.isHidden(column - 1)) {\n        addClass(TH, 'afterHiddenColumn');\n      }\n\n      if (this.isHidden(column + 1) && column > -1) {\n        addClass(TH, 'beforeHiddenColumn');\n      }\n    }\n    /**\n     * On before set range start listener.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeStart\",\n    value: function onBeforeSetRangeStart(coords) {\n      var _this5 = this;\n\n      if (coords.col > 0) {\n        return;\n      }\n\n      coords.col = 0;\n\n      var getNextColumn = function getNextColumn(col) {\n        var visualColumn = col;\n\n        var physicalColumn = _this5.hot.toPhysicalColumn(visualColumn);\n\n        if (_this5.isHidden(physicalColumn, true)) {\n          visualColumn += 1;\n          visualColumn = getNextColumn(visualColumn);\n        }\n\n        return visualColumn;\n      };\n\n      coords.col = getNextColumn(coords.col);\n    }\n    /**\n     * On before set range end listener.\n     *\n     * @private\n     * @param {Object} coords Object with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"onBeforeSetRangeEnd\",\n    value: function onBeforeSetRangeEnd(coords) {\n      var _this6 = this;\n\n      var columnCount = this.hot.countCols();\n\n      var getNextColumn = function getNextColumn(col) {\n        var visualColumn = col;\n\n        var physicalColumn = _this6.hot.toPhysicalColumn(visualColumn);\n\n        if (_this6.isHidden(physicalColumn, true)) {\n          if (_this6.lastSelectedColumn > visualColumn || coords.col === columnCount - 1) {\n            if (visualColumn > 0) {\n              visualColumn -= 1;\n              visualColumn = getNextColumn(visualColumn);\n            } else {\n              rangeEach(0, _this6.lastSelectedColumn, function (i) {\n                if (!_this6.isHidden(i)) {\n                  visualColumn = i;\n                  return false;\n                }\n              });\n            }\n          } else {\n            visualColumn += 1;\n            visualColumn = getNextColumn(visualColumn);\n          }\n        }\n\n        return visualColumn;\n      };\n\n      coords.col = getNextColumn(coords.col);\n      this.lastSelectedColumn = coords.col;\n    }\n    /**\n     * Add Show-hide columns to context menu.\n     *\n     * @private\n     * @param {Object} options\n     */\n\n  }, {\n    key: \"onAfterContextMenuDefaultOptions\",\n    value: function onAfterContextMenuDefaultOptions(options) {\n      options.items.push({\n        name: SEPARATOR\n      }, hideColumnItem(this), showColumnItem(this));\n    }\n    /**\n     * `onAfterCreateCol` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterCreateCol\",\n    value: function onAfterCreateCol(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenColumns, function (col) {\n        var visualColumn = col;\n\n        if (visualColumn >= index) {\n          visualColumn += amount;\n        }\n\n        tempHidden.push(visualColumn);\n      });\n      this.hiddenColumns = tempHidden;\n    }\n    /**\n     * `onAfterRemoveCol` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterRemoveCol\",\n    value: function onAfterRemoveCol(index, amount) {\n      var tempHidden = [];\n      arrayEach(this.hiddenColumns, function (col) {\n        var visualColumn = col;\n\n        if (visualColumn >= index) {\n          visualColumn -= amount;\n        }\n\n        tempHidden.push(visualColumn);\n      });\n      this.hiddenColumns = tempHidden;\n    }\n    /**\n     * `afterPluginsInitialized` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onInit\",\n    value: function onInit() {\n      var _this7 = this;\n\n      var settings = this.hot.getSettings().hiddenColumns;\n\n      if (_typeof(settings) === 'object') {\n        this.settings = settings;\n\n        if (settings.copyPasteEnabled === void 0) {\n          settings.copyPasteEnabled = true;\n        }\n\n        if (Array.isArray(settings.columns)) {\n          this.hideColumns(settings.columns);\n        }\n\n        if (!settings.copyPasteEnabled) {\n          this.addHook('modifyCopyableRange', function (ranges) {\n            return _this7.onModifyCopyableRange(ranges);\n          });\n        }\n      }\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(HiddenColumns.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return HiddenColumns;\n}(BasePlugin);\n\nfunction hiddenRenderer(hotInstance, td) {\n  td.textContent = '';\n}\n\nregisterPlugin('hiddenColumns', HiddenColumns);\nexport default HiddenColumns;"],"mappings":"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"},"metadata":{},"sourceType":"module"}