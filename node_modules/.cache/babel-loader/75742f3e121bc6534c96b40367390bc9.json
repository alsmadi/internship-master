{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get(target, property, receiver || target);\n}\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport { addClass, closest, isChildOf, hasClass, offset, outerWidth, outerHeight } from './../../helpers/dom/element';\nimport { deepClone, deepExtend, isObject } from './../../helpers/object';\nimport EventManager from './../../eventManager';\nimport { CellCoords } from './../../3rdparty/walkontable/src';\nimport { registerPlugin } from './../../plugins';\nimport BasePlugin from './../_base';\nimport CommentEditor from './commentEditor';\nimport { checkSelectionConsistency, markLabelAsSelected } from './../contextMenu/utils';\nimport DisplaySwitch from './displaySwitch';\nimport * as C from './../../i18n/constants';\nvar privatePool = new WeakMap();\nvar META_COMMENT = 'comment';\nvar META_COMMENT_VALUE = 'value';\nvar META_STYLE = 'style';\nvar META_READONLY = 'readOnly';\n/**\n * @plugin Comments\n *\n * @description\n * This plugin allows setting and managing cell comments by either an option in the context menu or with the use of\n * the API.\n *\n * To enable the plugin, you'll need to set the comments property of the config object to `true`:\n * ```js\n * comments: true\n * ```\n *\n * or an object with extra predefined plugin config:\n *\n * ```js\n * comments: {\n *   displayDelay: 1000\n * }\n * ```\n *\n * To add comments at the table initialization, define the `comment` property in the `cell` config array as in an example below.\n *\n * @example\n *\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   date: getData(),\n *   comments: true,\n *   cell: [\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]\n * });\n *\n * // Access to the Comments plugin instance:\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n */\n\nvar Comments = /*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(Comments, _BasePlugin);\n  function Comments(hotInstance) {\n    var _this;\n    _classCallCheck(this, Comments);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comments).call(this, hotInstance));\n    /**\n     * Instance of {@link CommentEditor}.\n     *\n     * @private\n     * @type {CommentEditor}\n     */\n\n    _this.editor = null;\n    /**\n     * Instance of {@link DisplaySwitch}.\n     *\n     * @private\n     * @type {DisplaySwitch}\n     */\n\n    _this.displaySwitch = null;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    _this.eventManager = null;\n    /**\n     * Current cell range, an object with `from` property, with `row` and `col` properties (e.q. `{from: {row: 1, col: 6}}`).\n     *\n     * @type {Object}\n     */\n\n    _this.range = {};\n    /**\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.mouseDown = false;\n    /**\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.contextMenuEvent = false;\n    /**\n     * @private\n     * @type {*}\n     */\n\n    _this.timer = null;\n    privatePool.set(_assertThisInitialized(_this), {\n      tempEditorDimensions: {},\n      cellBelowCursor: null\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link Comments#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n  _createClass(Comments, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().comments;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n      if (this.enabled) {\n        return;\n      }\n      if (!this.editor) {\n        this.editor = new CommentEditor(this.hot.rootDocument);\n      }\n      if (!this.eventManager) {\n        this.eventManager = new EventManager(this);\n      }\n      if (!this.displaySwitch) {\n        this.displaySwitch = new DisplaySwitch(this.getDisplayDelaySetting());\n      }\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.addToContextMenu(options);\n      });\n      this.addHook('afterRenderer', function (TD, row, col, prop, value, cellProperties) {\n        return _this2.onAfterRenderer(TD, cellProperties);\n      });\n      this.addHook('afterScrollHorizontally', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterBeginEditing', function () {\n        return _this2.onAfterBeginEditing();\n      });\n      this.displaySwitch.addLocalHook('hide', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('show', function (row, col) {\n        return _this2.showAtCell(row, col);\n      });\n      this.registerListeners();\n      _get(_getPrototypeOf(Comments.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n      _get(_getPrototypeOf(Comments.prototype), \"updatePlugin\", this).call(this);\n      this.displaySwitch.updateDelay(this.getDisplayDelaySetting());\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(Comments.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Registers all necessary DOM listeners.\n     *\n     * @private\n     */\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this3 = this;\n      var rootDocument = this.hot.rootDocument;\n      this.eventManager.addEventListener(rootDocument, 'mouseover', function (event) {\n        return _this3.onMouseOver(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mousedown', function (event) {\n        return _this3.onMouseDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'blur', function () {\n        return _this3.onEditorBlur();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mousedown', function (event) {\n        return _this3.onEditorMouseDown(event);\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mouseup', function (event) {\n        return _this3.onEditorMouseUp(event);\n      });\n    }\n    /**\n     * Sets the current cell range to be able to use general methods like {@link Comments#setComment}, {@link Comments#removeComment}, {@link Comments#show}.\n     *\n     * @param {Object} range Object with `from` property, each with `row` and `col` properties.\n     */\n  }, {\n    key: \"setRange\",\n    value: function setRange(range) {\n      this.range = range;\n    }\n    /**\n     * Clears the currently selected cell.\n     */\n  }, {\n    key: \"clearRange\",\n    value: function clearRange() {\n      this.range = {};\n    }\n    /**\n     * Checks if the event target is a cell containing a comment.\n     *\n     * @private\n     * @param {Event} event DOM event\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"targetIsCellWithComment\",\n    value: function targetIsCellWithComment(event) {\n      var closestCell = closest(event.target, 'TD', 'TBODY');\n      return !!(closestCell && hasClass(closestCell, 'htCommentCell') && closest(closestCell, [this.hot.rootElement]));\n    }\n    /**\n     * Checks if the event target is a comment textarea.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"targetIsCommentTextArea\",\n    value: function targetIsCommentTextArea(event) {\n      return this.editor.getInputElement() === event.target;\n    }\n    /**\n     * Sets a comment for a cell according to the previously set range (see {@link Comments#setRange}).\n     *\n     * @param {String} value Comment contents.\n     */\n  }, {\n    key: \"setComment\",\n    value: function setComment(value) {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n      var editorValue = this.editor.getValue();\n      var comment = '';\n      if (value !== null && value !== void 0) {\n        comment = value;\n      } else if (editorValue !== null && editorValue !== void 0) {\n        comment = editorValue;\n      }\n      var row = this.range.from.row;\n      var col = this.range.from.col;\n      this.updateCommentMeta(row, col, _defineProperty({}, META_COMMENT_VALUE, comment));\n      this.hot.render();\n    }\n    /**\n     * Sets a comment for a specified cell.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {String} value Comment contents.\n     */\n  }, {\n    key: \"setCommentAtCell\",\n    value: function setCommentAtCell(row, column, value) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.setComment(value);\n    }\n    /**\n     * Removes a comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @param {Boolean} [forceRender=true] If set to `true`, the table will be re-rendered at the end of the operation.\n     */\n  }, {\n    key: \"removeComment\",\n    value: function removeComment() {\n      var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n      this.hot.setCellMeta(this.range.from.row, this.range.from.col, META_COMMENT, void 0);\n      if (forceRender) {\n        this.hot.render();\n      }\n      this.hide();\n    }\n    /**\n     * Removes a comment from a specified cell.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {Boolean} [forceRender=true] If `true`, the table will be re-rendered at the end of the operation.\n     */\n  }, {\n    key: \"removeCommentAtCell\",\n    value: function removeCommentAtCell(row, column) {\n      var forceRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.removeComment(forceRender);\n    }\n    /**\n     * Gets comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {String|undefined} Returns a content of the comment.\n     */\n  }, {\n    key: \"getComment\",\n    value: function getComment() {\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Gets comment from a cell at the provided coordinates.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @returns {String|undefined} Returns a content of the comment.\n     */\n  }, {\n    key: \"getCommentAtCell\",\n    value: function getCommentAtCell(row, column) {\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Shows the comment editor accordingly to the previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {Boolean} Returns `true` if comment editor was shown.\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n      var meta = this.hot.getCellMeta(this.range.from.row, this.range.from.col);\n      this.refreshEditor(true);\n      this.editor.setValue(meta[META_COMMENT] ? meta[META_COMMENT][META_COMMENT_VALUE] : null || '');\n      if (this.editor.hidden) {\n        this.editor.show();\n      }\n      return true;\n    }\n    /**\n     * Shows comment editor according to cell coordinates.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @returns {Boolean} Returns `true` if comment editor was shown.\n     */\n  }, {\n    key: \"showAtCell\",\n    value: function showAtCell(row, column) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      return this.show();\n    }\n    /**\n     * Hides the comment editor.\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (!this.editor.hidden) {\n        this.editor.hide();\n      }\n    }\n    /**\n     * Refreshes comment editor position and styling.\n     *\n     * @param {Boolean} [force=false] If `true` then recalculation will be forced.\n     */\n  }, {\n    key: \"refreshEditor\",\n    value: function refreshEditor() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!force && (!this.range.from || !this.editor.isVisible())) {\n        return;\n      }\n      var rootWindow = this.hot.rootWindow;\n      var _this$hot$view$wt = this.hot.view.wt,\n        wtTable = _this$hot$view$wt.wtTable,\n        wtOverlays = _this$hot$view$wt.wtOverlays,\n        wtViewport = _this$hot$view$wt.wtViewport;\n      var scrollableElement = wtOverlays.scrollableElement;\n      var TD = wtTable.getCell(this.range.from);\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      var cellOffset = offset(TD);\n      var lastColWidth = wtTable.getStretchedColumnWidth(column);\n      var cellTopOffset = cellOffset.top < 0 ? 0 : cellOffset.top;\n      var cellLeftOffset = cellOffset.left;\n      if (wtViewport.hasVerticalScroll() && scrollableElement !== rootWindow) {\n        cellTopOffset -= wtOverlays.topOverlay.getScrollPosition();\n      }\n      if (wtViewport.hasHorizontalScroll() && scrollableElement !== rootWindow) {\n        cellLeftOffset -= wtOverlays.leftOverlay.getScrollPosition();\n      }\n      var x = cellLeftOffset + lastColWidth;\n      var y = cellTopOffset;\n      var commentStyle = this.getCommentMeta(row, column, META_STYLE);\n      var readOnly = this.getCommentMeta(row, column, META_READONLY);\n      if (commentStyle) {\n        this.editor.setSize(commentStyle.width, commentStyle.height);\n      } else {\n        this.editor.resetSize();\n      }\n      this.editor.setReadOnlyState(readOnly);\n      this.editor.setPosition(x, y);\n    }\n    /**\n     * Checks if there is a comment for selected range.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"checkSelectionCommentsConsistency\",\n    value: function checkSelectionCommentsConsistency() {\n      var selected = this.hot.getSelectedRangeLast();\n      if (!selected) {\n        return false;\n      }\n      var hasComment = false;\n      var cell = selected.from; // IN EXCEL THERE IS COMMENT ONLY FOR TOP LEFT CELL IN SELECTION\n\n      if (this.getCommentMeta(cell.row, cell.col, META_COMMENT_VALUE)) {\n        hasComment = true;\n      }\n      return hasComment;\n    }\n    /**\n     * Sets or update the comment-related cell meta.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {Object} metaObject Object defining all the comment-related meta information.\n     */\n  }, {\n    key: \"updateCommentMeta\",\n    value: function updateCommentMeta(row, column, metaObject) {\n      var oldComment = this.hot.getCellMeta(row, column)[META_COMMENT];\n      var newComment;\n      if (oldComment) {\n        newComment = deepClone(oldComment);\n        deepExtend(newComment, metaObject);\n      } else {\n        newComment = metaObject;\n      }\n      this.hot.setCellMeta(row, column, META_COMMENT, newComment);\n    }\n    /**\n     * Gets the comment related meta information.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {String} property Cell meta property.\n     * @returns {Mixed}\n     */\n  }, {\n    key: \"getCommentMeta\",\n    value: function getCommentMeta(row, column, property) {\n      var cellMeta = this.hot.getCellMeta(row, column);\n      if (!cellMeta[META_COMMENT]) {\n        return void 0;\n      }\n      return cellMeta[META_COMMENT][property];\n    }\n    /**\n     * `mousedown` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      this.mouseDown = true;\n      if (!this.hot.view || !this.hot.view.wt) {\n        return;\n      }\n      if (!this.contextMenuEvent && !this.targetIsCommentTextArea(event)) {\n        var eventCell = closest(event.target, 'TD', 'TBODY');\n        var coordinates = null;\n        if (eventCell) {\n          coordinates = this.hot.view.wt.wtTable.getCoords(eventCell);\n        }\n        if (!eventCell || this.range.from && coordinates && (this.range.from.row !== coordinates.row || this.range.from.col !== coordinates.col)) {\n          this.hide();\n        }\n      }\n      this.contextMenuEvent = false;\n    }\n    /**\n     * `mouseover` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseover` event.\n     */\n  }, {\n    key: \"onMouseOver\",\n    value: function onMouseOver(event) {\n      var priv = privatePool.get(this);\n      var rootDocument = this.hot.rootDocument;\n      priv.cellBelowCursor = rootDocument.elementFromPoint(event.clientX, event.clientY);\n      if (this.mouseDown || this.editor.isFocused() || hasClass(event.target, 'wtBorder') || priv.cellBelowCursor !== event.target || !this.editor) {\n        return;\n      }\n      if (this.targetIsCellWithComment(event)) {\n        var coordinates = this.hot.view.wt.wtTable.getCoords(event.target);\n        var range = {\n          from: new CellCoords(coordinates.row, coordinates.col)\n        };\n        this.displaySwitch.show(range);\n      } else if (isChildOf(event.target, rootDocument) && !this.targetIsCommentTextArea(event)) {\n        this.displaySwitch.hide();\n      }\n    }\n    /**\n     * `mouseup` event callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      this.mouseDown = false;\n    }\n    /** *\n     * The `afterRenderer` hook callback..\n     *\n     * @private\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {Object} cellProperties The rendered cell's property object.\n     */\n  }, {\n    key: \"onAfterRenderer\",\n    value: function onAfterRenderer(TD, cellProperties) {\n      if (cellProperties[META_COMMENT] && cellProperties[META_COMMENT][META_COMMENT_VALUE]) {\n        addClass(TD, cellProperties.commentedCellClassName);\n      }\n    }\n    /**\n     * `blur` event callback for the comment editor.\n     *\n     * @private\n     */\n  }, {\n    key: \"onEditorBlur\",\n    value: function onEditorBlur() {\n      this.setComment();\n    }\n    /**\n     * `mousedown` hook. Along with `onEditorMouseUp` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n  }, {\n    key: \"onEditorMouseDown\",\n    value: function onEditorMouseDown(event) {\n      var priv = privatePool.get(this);\n      priv.tempEditorDimensions = {\n        width: outerWidth(event.target),\n        height: outerHeight(event.target)\n      };\n    }\n    /**\n     * `mouseup` hook. Along with `onEditorMouseDown` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseup` event.\n     */\n  }, {\n    key: \"onEditorMouseUp\",\n    value: function onEditorMouseUp(event) {\n      var priv = privatePool.get(this);\n      var currentWidth = outerWidth(event.target);\n      var currentHeight = outerHeight(event.target);\n      if (currentWidth !== priv.tempEditorDimensions.width + 1 || currentHeight !== priv.tempEditorDimensions.height + 2) {\n        this.updateCommentMeta(this.range.from.row, this.range.from.col, _defineProperty({}, META_STYLE, {\n          width: currentWidth,\n          height: currentHeight\n        }));\n      }\n    }\n    /**\n     * Context Menu's \"Add comment\" callback. Results in showing the comment editor.\n     *\n     * @private\n     */\n  }, {\n    key: \"onContextMenuAddComment\",\n    value: function onContextMenuAddComment() {\n      var _this4 = this;\n      this.displaySwitch.cancelHiding();\n      var coords = this.hot.getSelectedRangeLast();\n      this.contextMenuEvent = true;\n      this.setRange({\n        from: coords.from\n      });\n      this.show();\n      setTimeout(function () {\n        if (_this4.hot) {\n          _this4.hot.deselectCell();\n          _this4.editor.focus();\n        }\n      }, 10);\n    }\n    /**\n     * Context Menu's \"remove comment\" callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onContextMenuRemoveComment\",\n    value: function onContextMenuRemoveComment() {\n      var _this$hot$getSelected = this.hot.getSelectedRangeLast(),\n        from = _this$hot$getSelected.from,\n        to = _this$hot$getSelected.to;\n      this.contextMenuEvent = true;\n      for (var i = from.row; i <= to.row; i++) {\n        for (var j = from.col; j <= to.col; j++) {\n          this.removeCommentAtCell(i, j, false);\n        }\n      }\n      this.hot.render();\n    }\n    /**\n     * Context Menu's \"make comment read-only\" callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onContextMenuMakeReadOnly\",\n    value: function onContextMenuMakeReadOnly() {\n      var _this$hot$getSelected2 = this.hot.getSelectedRangeLast(),\n        from = _this$hot$getSelected2.from,\n        to = _this$hot$getSelected2.to;\n      this.contextMenuEvent = true;\n      for (var i = from.row; i <= to.row; i++) {\n        for (var j = from.col; j <= to.col; j++) {\n          var currentState = !!this.getCommentMeta(i, j, META_READONLY);\n          this.updateCommentMeta(i, j, _defineProperty({}, META_READONLY, !currentState));\n        }\n      }\n    }\n    /**\n     * Add Comments plugin options to the Context Menu.\n     *\n     * @private\n     * @param {Object} defaultOptions\n     */\n  }, {\n    key: \"addToContextMenu\",\n    value: function addToContextMenu(defaultOptions) {\n      var _this5 = this;\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'commentsAddEdit',\n        name: function name() {\n          if (_this5.checkSelectionCommentsConsistency()) {\n            return _this5.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_EDIT_COMMENT);\n          }\n          return _this5.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ADD_COMMENT);\n        },\n        callback: function callback() {\n          return _this5.onContextMenuAddComment();\n        },\n        disabled: function disabled() {\n          return !(this.getSelectedLast() && !this.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsRemove',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_COMMENT);\n        },\n        callback: function callback() {\n          return _this5.onContextMenuRemoveComment();\n        },\n        disabled: function disabled() {\n          return _this5.hot.selection.isSelectedByCorner();\n        }\n      }, {\n        key: 'commentsReadOnly',\n        name: function name() {\n          var _this6 = this;\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT);\n          var hasProperty = checkSelectionConsistency(this.getSelectedRangeLast(), function (row, col) {\n            var readOnlyProperty = _this6.getCellMeta(row, col)[META_COMMENT];\n            if (readOnlyProperty) {\n              readOnlyProperty = readOnlyProperty[META_READONLY];\n            }\n            if (readOnlyProperty) {\n              return true;\n            }\n          });\n          if (hasProperty) {\n            label = markLabelAsSelected(label);\n          }\n          return label;\n        },\n        callback: function callback() {\n          return _this5.onContextMenuMakeReadOnly();\n        },\n        disabled: function disabled() {\n          return _this5.hot.selection.isSelectedByCorner() || !_this5.checkSelectionCommentsConsistency();\n        }\n      });\n    }\n    /**\n     * Get `displayDelay` setting of comment plugin.\n     *\n     * @private\n     * @returns {Number|undefined}\n     */\n  }, {\n    key: \"getDisplayDelaySetting\",\n    value: function getDisplayDelaySetting() {\n      var commentSetting = this.hot.getSettings().comments;\n      if (isObject(commentSetting)) {\n        return commentSetting.displayDelay;\n      }\n      return void 0;\n    }\n    /**\n     * `afterBeginEditing` hook callback.\n     *\n     * @private\n     */\n  }, {\n    key: \"onAfterBeginEditing\",\n    value: function onAfterBeginEditing() {\n      this.hide();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.editor) {\n        this.editor.destroy();\n      }\n      if (this.displaySwitch) {\n        this.displaySwitch.destroy();\n      }\n      _get(_getPrototypeOf(Comments.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n  return Comments;\n}(BasePlugin);\nregisterPlugin('comments', Comments);\nexport default Comments;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_get","property","receiver","Reflect","get","base","_superPropBase","desc","getOwnPropertyDescriptor","object","hasOwnProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","_setPrototypeOf","p","addClass","closest","isChildOf","hasClass","offset","outerWidth","outerHeight","deepClone","deepExtend","isObject","EventManager","CellCoords","registerPlugin","BasePlugin","CommentEditor","checkSelectionConsistency","markLabelAsSelected","DisplaySwitch","C","privatePool","WeakMap","META_COMMENT","META_COMMENT_VALUE","META_STYLE","META_READONLY","Comments","_BasePlugin","hotInstance","_this","editor","displaySwitch","eventManager","range","mouseDown","contextMenuEvent","timer","set","tempEditorDimensions","cellBelowCursor","isEnabled","hot","getSettings","comments","enablePlugin","_this2","enabled","rootDocument","getDisplayDelaySetting","addHook","options","addToContextMenu","TD","row","col","prop","cellProperties","onAfterRenderer","hide","onAfterBeginEditing","addLocalHook","showAtCell","registerListeners","updatePlugin","disablePlugin","updateDelay","_this3","addEventListener","event","onMouseOver","onMouseDown","onMouseUp","getInputElement","onEditorBlur","onEditorMouseDown","onEditorMouseUp","setRange","clearRange","targetIsCellWithComment","closestCell","rootElement","targetIsCommentTextArea","setComment","from","Error","editorValue","getValue","comment","updateCommentMeta","render","setCommentAtCell","column","removeComment","forceRender","arguments","undefined","setCellMeta","removeCommentAtCell","getComment","getCommentMeta","getCommentAtCell","show","meta","getCellMeta","refreshEditor","setValue","hidden","force","isVisible","rootWindow","_this$hot$view$wt","view","wt","wtTable","wtOverlays","wtViewport","scrollableElement","getCell","cellOffset","lastColWidth","getStretchedColumnWidth","cellTopOffset","top","cellLeftOffset","left","hasVerticalScroll","topOverlay","getScrollPosition","hasHorizontalScroll","leftOverlay","x","y","commentStyle","readOnly","setSize","width","height","resetSize","setReadOnlyState","setPosition","checkSelectionCommentsConsistency","selected","getSelectedRangeLast","hasComment","cell","metaObject","oldComment","newComment","cellMeta","eventCell","coordinates","getCoords","priv","elementFromPoint","clientX","clientY","isFocused","commentedCellClassName","currentWidth","currentHeight","onContextMenuAddComment","_this4","cancelHiding","coords","setTimeout","deselectCell","focus","onContextMenuRemoveComment","_this$hot$getSelected","to","j","onContextMenuMakeReadOnly","_this$hot$getSelected2","currentState","defaultOptions","_this5","items","push","name","getTranslatedPhrase","CONTEXTMENU_ITEMS_EDIT_COMMENT","CONTEXTMENU_ITEMS_ADD_COMMENT","callback","disabled","getSelectedLast","selection","isSelectedByCorner","CONTEXTMENU_ITEMS_REMOVE_COMMENT","_this6","label","CONTEXTMENU_ITEMS_READ_ONLY_COMMENT","hasProperty","readOnlyProperty","commentSetting","displayDelay","destroy"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/plugins/comments/comments.js"],"sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.get\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.weak-map\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/web.timers\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { addClass, closest, isChildOf, hasClass, offset, outerWidth, outerHeight } from './../../helpers/dom/element';\nimport { deepClone, deepExtend, isObject } from './../../helpers/object';\nimport EventManager from './../../eventManager';\nimport { CellCoords } from './../../3rdparty/walkontable/src';\nimport { registerPlugin } from './../../plugins';\nimport BasePlugin from './../_base';\nimport CommentEditor from './commentEditor';\nimport { checkSelectionConsistency, markLabelAsSelected } from './../contextMenu/utils';\nimport DisplaySwitch from './displaySwitch';\nimport * as C from './../../i18n/constants';\nvar privatePool = new WeakMap();\nvar META_COMMENT = 'comment';\nvar META_COMMENT_VALUE = 'value';\nvar META_STYLE = 'style';\nvar META_READONLY = 'readOnly';\n/**\n * @plugin Comments\n *\n * @description\n * This plugin allows setting and managing cell comments by either an option in the context menu or with the use of\n * the API.\n *\n * To enable the plugin, you'll need to set the comments property of the config object to `true`:\n * ```js\n * comments: true\n * ```\n *\n * or an object with extra predefined plugin config:\n *\n * ```js\n * comments: {\n *   displayDelay: 1000\n * }\n * ```\n *\n * To add comments at the table initialization, define the `comment` property in the `cell` config array as in an example below.\n *\n * @example\n *\n * ```js\n * const hot = new Handsontable(document.getElementById('example'), {\n *   date: getData(),\n *   comments: true,\n *   cell: [\n *     {row: 1, col: 1, comment: {value: 'Foo'}},\n *     {row: 2, col: 2, comment: {value: 'Bar'}}\n *   ]\n * });\n *\n * // Access to the Comments plugin instance:\n * const commentsPlugin = hot.getPlugin('comments');\n *\n * // Manage comments programmatically:\n * commentsPlugin.setCommentAtCell(1, 6, 'Comment contents');\n * commentsPlugin.showAtCell(1, 6);\n * commentsPlugin.removeCommentAtCell(1, 6);\n *\n * // You can also set range once and use proper methods:\n * commentsPlugin.setRange({from: {row: 1, col: 6}});\n * commentsPlugin.setComment('Comment contents');\n * commentsPlugin.show();\n * commentsPlugin.removeComment();\n * ```\n */\n\nvar Comments =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(Comments, _BasePlugin);\n\n  function Comments(hotInstance) {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comments).call(this, hotInstance));\n    /**\n     * Instance of {@link CommentEditor}.\n     *\n     * @private\n     * @type {CommentEditor}\n     */\n\n    _this.editor = null;\n    /**\n     * Instance of {@link DisplaySwitch}.\n     *\n     * @private\n     * @type {DisplaySwitch}\n     */\n\n    _this.displaySwitch = null;\n    /**\n     * Instance of {@link EventManager}.\n     *\n     * @private\n     * @type {EventManager}\n     */\n\n    _this.eventManager = null;\n    /**\n     * Current cell range, an object with `from` property, with `row` and `col` properties (e.q. `{from: {row: 1, col: 6}}`).\n     *\n     * @type {Object}\n     */\n\n    _this.range = {};\n    /**\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.mouseDown = false;\n    /**\n     * @private\n     * @type {Boolean}\n     */\n\n    _this.contextMenuEvent = false;\n    /**\n     * @private\n     * @type {*}\n     */\n\n    _this.timer = null;\n    privatePool.set(_assertThisInitialized(_this), {\n      tempEditorDimensions: {},\n      cellBelowCursor: null\n    });\n    return _this;\n  }\n  /**\n   * Checks if the plugin is enabled in the handsontable settings. This method is executed in {@link Hooks#beforeInit}\n   * hook and if it returns `true` than the {@link Comments#enablePlugin} method is called.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(Comments, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.hot.getSettings().comments;\n    }\n    /**\n     * Enables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"enablePlugin\",\n    value: function enablePlugin() {\n      var _this2 = this;\n\n      if (this.enabled) {\n        return;\n      }\n\n      if (!this.editor) {\n        this.editor = new CommentEditor(this.hot.rootDocument);\n      }\n\n      if (!this.eventManager) {\n        this.eventManager = new EventManager(this);\n      }\n\n      if (!this.displaySwitch) {\n        this.displaySwitch = new DisplaySwitch(this.getDisplayDelaySetting());\n      }\n\n      this.addHook('afterContextMenuDefaultOptions', function (options) {\n        return _this2.addToContextMenu(options);\n      });\n      this.addHook('afterRenderer', function (TD, row, col, prop, value, cellProperties) {\n        return _this2.onAfterRenderer(TD, cellProperties);\n      });\n      this.addHook('afterScrollHorizontally', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterScrollVertically', function () {\n        return _this2.hide();\n      });\n      this.addHook('afterBeginEditing', function () {\n        return _this2.onAfterBeginEditing();\n      });\n      this.displaySwitch.addLocalHook('hide', function () {\n        return _this2.hide();\n      });\n      this.displaySwitch.addLocalHook('show', function (row, col) {\n        return _this2.showAtCell(row, col);\n      });\n      this.registerListeners();\n\n      _get(_getPrototypeOf(Comments.prototype), \"enablePlugin\", this).call(this);\n    }\n    /**\n     * Updates the plugin state. This method is executed when {@link Core#updateSettings} is invoked.\n     */\n\n  }, {\n    key: \"updatePlugin\",\n    value: function updatePlugin() {\n      this.disablePlugin();\n      this.enablePlugin();\n\n      _get(_getPrototypeOf(Comments.prototype), \"updatePlugin\", this).call(this);\n\n      this.displaySwitch.updateDelay(this.getDisplayDelaySetting());\n    }\n    /**\n     * Disables the plugin functionality for this Handsontable instance.\n     */\n\n  }, {\n    key: \"disablePlugin\",\n    value: function disablePlugin() {\n      _get(_getPrototypeOf(Comments.prototype), \"disablePlugin\", this).call(this);\n    }\n    /**\n     * Registers all necessary DOM listeners.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      var _this3 = this;\n\n      var rootDocument = this.hot.rootDocument;\n      this.eventManager.addEventListener(rootDocument, 'mouseover', function (event) {\n        return _this3.onMouseOver(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mousedown', function (event) {\n        return _this3.onMouseDown(event);\n      });\n      this.eventManager.addEventListener(rootDocument, 'mouseup', function () {\n        return _this3.onMouseUp();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'blur', function () {\n        return _this3.onEditorBlur();\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mousedown', function (event) {\n        return _this3.onEditorMouseDown(event);\n      });\n      this.eventManager.addEventListener(this.editor.getInputElement(), 'mouseup', function (event) {\n        return _this3.onEditorMouseUp(event);\n      });\n    }\n    /**\n     * Sets the current cell range to be able to use general methods like {@link Comments#setComment}, {@link Comments#removeComment}, {@link Comments#show}.\n     *\n     * @param {Object} range Object with `from` property, each with `row` and `col` properties.\n     */\n\n  }, {\n    key: \"setRange\",\n    value: function setRange(range) {\n      this.range = range;\n    }\n    /**\n     * Clears the currently selected cell.\n     */\n\n  }, {\n    key: \"clearRange\",\n    value: function clearRange() {\n      this.range = {};\n    }\n    /**\n     * Checks if the event target is a cell containing a comment.\n     *\n     * @private\n     * @param {Event} event DOM event\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"targetIsCellWithComment\",\n    value: function targetIsCellWithComment(event) {\n      var closestCell = closest(event.target, 'TD', 'TBODY');\n      return !!(closestCell && hasClass(closestCell, 'htCommentCell') && closest(closestCell, [this.hot.rootElement]));\n    }\n    /**\n     * Checks if the event target is a comment textarea.\n     *\n     * @private\n     * @param {Event} event DOM event.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"targetIsCommentTextArea\",\n    value: function targetIsCommentTextArea(event) {\n      return this.editor.getInputElement() === event.target;\n    }\n    /**\n     * Sets a comment for a cell according to the previously set range (see {@link Comments#setRange}).\n     *\n     * @param {String} value Comment contents.\n     */\n\n  }, {\n    key: \"setComment\",\n    value: function setComment(value) {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      var editorValue = this.editor.getValue();\n      var comment = '';\n\n      if (value !== null && value !== void 0) {\n        comment = value;\n      } else if (editorValue !== null && editorValue !== void 0) {\n        comment = editorValue;\n      }\n\n      var row = this.range.from.row;\n      var col = this.range.from.col;\n      this.updateCommentMeta(row, col, _defineProperty({}, META_COMMENT_VALUE, comment));\n      this.hot.render();\n    }\n    /**\n     * Sets a comment for a specified cell.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {String} value Comment contents.\n     */\n\n  }, {\n    key: \"setCommentAtCell\",\n    value: function setCommentAtCell(row, column, value) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.setComment(value);\n    }\n    /**\n     * Removes a comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @param {Boolean} [forceRender=true] If set to `true`, the table will be re-rendered at the end of the operation.\n     */\n\n  }, {\n    key: \"removeComment\",\n    value: function removeComment() {\n      var forceRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      this.hot.setCellMeta(this.range.from.row, this.range.from.col, META_COMMENT, void 0);\n\n      if (forceRender) {\n        this.hot.render();\n      }\n\n      this.hide();\n    }\n    /**\n     * Removes a comment from a specified cell.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {Boolean} [forceRender=true] If `true`, the table will be re-rendered at the end of the operation.\n     */\n\n  }, {\n    key: \"removeCommentAtCell\",\n    value: function removeCommentAtCell(row, column) {\n      var forceRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      this.removeComment(forceRender);\n    }\n    /**\n     * Gets comment from a cell according to previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {String|undefined} Returns a content of the comment.\n     */\n\n  }, {\n    key: \"getComment\",\n    value: function getComment() {\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Gets comment from a cell at the provided coordinates.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @returns {String|undefined} Returns a content of the comment.\n     */\n\n  }, {\n    key: \"getCommentAtCell\",\n    value: function getCommentAtCell(row, column) {\n      return this.getCommentMeta(row, column, META_COMMENT_VALUE);\n    }\n    /**\n     * Shows the comment editor accordingly to the previously set range (see {@link Comments#setRange}).\n     *\n     * @returns {Boolean} Returns `true` if comment editor was shown.\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.range.from) {\n        throw new Error('Before using this method, first set cell range (hot.getPlugin(\"comment\").setRange())');\n      }\n\n      var meta = this.hot.getCellMeta(this.range.from.row, this.range.from.col);\n      this.refreshEditor(true);\n      this.editor.setValue(meta[META_COMMENT] ? meta[META_COMMENT][META_COMMENT_VALUE] : null || '');\n\n      if (this.editor.hidden) {\n        this.editor.show();\n      }\n\n      return true;\n    }\n    /**\n     * Shows comment editor according to cell coordinates.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @returns {Boolean} Returns `true` if comment editor was shown.\n     */\n\n  }, {\n    key: \"showAtCell\",\n    value: function showAtCell(row, column) {\n      this.setRange({\n        from: new CellCoords(row, column)\n      });\n      return this.show();\n    }\n    /**\n     * Hides the comment editor.\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (!this.editor.hidden) {\n        this.editor.hide();\n      }\n    }\n    /**\n     * Refreshes comment editor position and styling.\n     *\n     * @param {Boolean} [force=false] If `true` then recalculation will be forced.\n     */\n\n  }, {\n    key: \"refreshEditor\",\n    value: function refreshEditor() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!force && (!this.range.from || !this.editor.isVisible())) {\n        return;\n      }\n\n      var rootWindow = this.hot.rootWindow;\n      var _this$hot$view$wt = this.hot.view.wt,\n          wtTable = _this$hot$view$wt.wtTable,\n          wtOverlays = _this$hot$view$wt.wtOverlays,\n          wtViewport = _this$hot$view$wt.wtViewport;\n      var scrollableElement = wtOverlays.scrollableElement;\n      var TD = wtTable.getCell(this.range.from);\n      var row = this.range.from.row;\n      var column = this.range.from.col;\n      var cellOffset = offset(TD);\n      var lastColWidth = wtTable.getStretchedColumnWidth(column);\n      var cellTopOffset = cellOffset.top < 0 ? 0 : cellOffset.top;\n      var cellLeftOffset = cellOffset.left;\n\n      if (wtViewport.hasVerticalScroll() && scrollableElement !== rootWindow) {\n        cellTopOffset -= wtOverlays.topOverlay.getScrollPosition();\n      }\n\n      if (wtViewport.hasHorizontalScroll() && scrollableElement !== rootWindow) {\n        cellLeftOffset -= wtOverlays.leftOverlay.getScrollPosition();\n      }\n\n      var x = cellLeftOffset + lastColWidth;\n      var y = cellTopOffset;\n      var commentStyle = this.getCommentMeta(row, column, META_STYLE);\n      var readOnly = this.getCommentMeta(row, column, META_READONLY);\n\n      if (commentStyle) {\n        this.editor.setSize(commentStyle.width, commentStyle.height);\n      } else {\n        this.editor.resetSize();\n      }\n\n      this.editor.setReadOnlyState(readOnly);\n      this.editor.setPosition(x, y);\n    }\n    /**\n     * Checks if there is a comment for selected range.\n     *\n     * @private\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"checkSelectionCommentsConsistency\",\n    value: function checkSelectionCommentsConsistency() {\n      var selected = this.hot.getSelectedRangeLast();\n\n      if (!selected) {\n        return false;\n      }\n\n      var hasComment = false;\n      var cell = selected.from; // IN EXCEL THERE IS COMMENT ONLY FOR TOP LEFT CELL IN SELECTION\n\n      if (this.getCommentMeta(cell.row, cell.col, META_COMMENT_VALUE)) {\n        hasComment = true;\n      }\n\n      return hasComment;\n    }\n    /**\n     * Sets or update the comment-related cell meta.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {Object} metaObject Object defining all the comment-related meta information.\n     */\n\n  }, {\n    key: \"updateCommentMeta\",\n    value: function updateCommentMeta(row, column, metaObject) {\n      var oldComment = this.hot.getCellMeta(row, column)[META_COMMENT];\n      var newComment;\n\n      if (oldComment) {\n        newComment = deepClone(oldComment);\n        deepExtend(newComment, metaObject);\n      } else {\n        newComment = metaObject;\n      }\n\n      this.hot.setCellMeta(row, column, META_COMMENT, newComment);\n    }\n    /**\n     * Gets the comment related meta information.\n     *\n     * @param {Number} row Visual row index.\n     * @param {Number} column Visual column index.\n     * @param {String} property Cell meta property.\n     * @returns {Mixed}\n     */\n\n  }, {\n    key: \"getCommentMeta\",\n    value: function getCommentMeta(row, column, property) {\n      var cellMeta = this.hot.getCellMeta(row, column);\n\n      if (!cellMeta[META_COMMENT]) {\n        return void 0;\n      }\n\n      return cellMeta[META_COMMENT][property];\n    }\n    /**\n     * `mousedown` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      this.mouseDown = true;\n\n      if (!this.hot.view || !this.hot.view.wt) {\n        return;\n      }\n\n      if (!this.contextMenuEvent && !this.targetIsCommentTextArea(event)) {\n        var eventCell = closest(event.target, 'TD', 'TBODY');\n        var coordinates = null;\n\n        if (eventCell) {\n          coordinates = this.hot.view.wt.wtTable.getCoords(eventCell);\n        }\n\n        if (!eventCell || this.range.from && coordinates && (this.range.from.row !== coordinates.row || this.range.from.col !== coordinates.col)) {\n          this.hide();\n        }\n      }\n\n      this.contextMenuEvent = false;\n    }\n    /**\n     * `mouseover` event callback.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseover` event.\n     */\n\n  }, {\n    key: \"onMouseOver\",\n    value: function onMouseOver(event) {\n      var priv = privatePool.get(this);\n      var rootDocument = this.hot.rootDocument;\n      priv.cellBelowCursor = rootDocument.elementFromPoint(event.clientX, event.clientY);\n\n      if (this.mouseDown || this.editor.isFocused() || hasClass(event.target, 'wtBorder') || priv.cellBelowCursor !== event.target || !this.editor) {\n        return;\n      }\n\n      if (this.targetIsCellWithComment(event)) {\n        var coordinates = this.hot.view.wt.wtTable.getCoords(event.target);\n        var range = {\n          from: new CellCoords(coordinates.row, coordinates.col)\n        };\n        this.displaySwitch.show(range);\n      } else if (isChildOf(event.target, rootDocument) && !this.targetIsCommentTextArea(event)) {\n        this.displaySwitch.hide();\n      }\n    }\n    /**\n     * `mouseup` event callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      this.mouseDown = false;\n    }\n    /** *\n     * The `afterRenderer` hook callback..\n     *\n     * @private\n     * @param {HTMLTableCellElement} TD The rendered `TD` element.\n     * @param {Object} cellProperties The rendered cell's property object.\n     */\n\n  }, {\n    key: \"onAfterRenderer\",\n    value: function onAfterRenderer(TD, cellProperties) {\n      if (cellProperties[META_COMMENT] && cellProperties[META_COMMENT][META_COMMENT_VALUE]) {\n        addClass(TD, cellProperties.commentedCellClassName);\n      }\n    }\n    /**\n     * `blur` event callback for the comment editor.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onEditorBlur\",\n    value: function onEditorBlur() {\n      this.setComment();\n    }\n    /**\n     * `mousedown` hook. Along with `onEditorMouseUp` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mousedown` event.\n     */\n\n  }, {\n    key: \"onEditorMouseDown\",\n    value: function onEditorMouseDown(event) {\n      var priv = privatePool.get(this);\n      priv.tempEditorDimensions = {\n        width: outerWidth(event.target),\n        height: outerHeight(event.target)\n      };\n    }\n    /**\n     * `mouseup` hook. Along with `onEditorMouseDown` used to simulate the textarea resizing event.\n     *\n     * @private\n     * @param {MouseEvent} event The `mouseup` event.\n     */\n\n  }, {\n    key: \"onEditorMouseUp\",\n    value: function onEditorMouseUp(event) {\n      var priv = privatePool.get(this);\n      var currentWidth = outerWidth(event.target);\n      var currentHeight = outerHeight(event.target);\n\n      if (currentWidth !== priv.tempEditorDimensions.width + 1 || currentHeight !== priv.tempEditorDimensions.height + 2) {\n        this.updateCommentMeta(this.range.from.row, this.range.from.col, _defineProperty({}, META_STYLE, {\n          width: currentWidth,\n          height: currentHeight\n        }));\n      }\n    }\n    /**\n     * Context Menu's \"Add comment\" callback. Results in showing the comment editor.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuAddComment\",\n    value: function onContextMenuAddComment() {\n      var _this4 = this;\n\n      this.displaySwitch.cancelHiding();\n      var coords = this.hot.getSelectedRangeLast();\n      this.contextMenuEvent = true;\n      this.setRange({\n        from: coords.from\n      });\n      this.show();\n      setTimeout(function () {\n        if (_this4.hot) {\n          _this4.hot.deselectCell();\n\n          _this4.editor.focus();\n        }\n      }, 10);\n    }\n    /**\n     * Context Menu's \"remove comment\" callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuRemoveComment\",\n    value: function onContextMenuRemoveComment() {\n      var _this$hot$getSelected = this.hot.getSelectedRangeLast(),\n          from = _this$hot$getSelected.from,\n          to = _this$hot$getSelected.to;\n\n      this.contextMenuEvent = true;\n\n      for (var i = from.row; i <= to.row; i++) {\n        for (var j = from.col; j <= to.col; j++) {\n          this.removeCommentAtCell(i, j, false);\n        }\n      }\n\n      this.hot.render();\n    }\n    /**\n     * Context Menu's \"make comment read-only\" callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onContextMenuMakeReadOnly\",\n    value: function onContextMenuMakeReadOnly() {\n      var _this$hot$getSelected2 = this.hot.getSelectedRangeLast(),\n          from = _this$hot$getSelected2.from,\n          to = _this$hot$getSelected2.to;\n\n      this.contextMenuEvent = true;\n\n      for (var i = from.row; i <= to.row; i++) {\n        for (var j = from.col; j <= to.col; j++) {\n          var currentState = !!this.getCommentMeta(i, j, META_READONLY);\n          this.updateCommentMeta(i, j, _defineProperty({}, META_READONLY, !currentState));\n        }\n      }\n    }\n    /**\n     * Add Comments plugin options to the Context Menu.\n     *\n     * @private\n     * @param {Object} defaultOptions\n     */\n\n  }, {\n    key: \"addToContextMenu\",\n    value: function addToContextMenu(defaultOptions) {\n      var _this5 = this;\n\n      defaultOptions.items.push({\n        name: '---------'\n      }, {\n        key: 'commentsAddEdit',\n        name: function name() {\n          if (_this5.checkSelectionCommentsConsistency()) {\n            return _this5.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_EDIT_COMMENT);\n          }\n\n          return _this5.hot.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_ADD_COMMENT);\n        },\n        callback: function callback() {\n          return _this5.onContextMenuAddComment();\n        },\n        disabled: function disabled() {\n          return !(this.getSelectedLast() && !this.selection.isSelectedByCorner());\n        }\n      }, {\n        key: 'commentsRemove',\n        name: function name() {\n          return this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_REMOVE_COMMENT);\n        },\n        callback: function callback() {\n          return _this5.onContextMenuRemoveComment();\n        },\n        disabled: function disabled() {\n          return _this5.hot.selection.isSelectedByCorner();\n        }\n      }, {\n        key: 'commentsReadOnly',\n        name: function name() {\n          var _this6 = this;\n\n          var label = this.getTranslatedPhrase(C.CONTEXTMENU_ITEMS_READ_ONLY_COMMENT);\n          var hasProperty = checkSelectionConsistency(this.getSelectedRangeLast(), function (row, col) {\n            var readOnlyProperty = _this6.getCellMeta(row, col)[META_COMMENT];\n\n            if (readOnlyProperty) {\n              readOnlyProperty = readOnlyProperty[META_READONLY];\n            }\n\n            if (readOnlyProperty) {\n              return true;\n            }\n          });\n\n          if (hasProperty) {\n            label = markLabelAsSelected(label);\n          }\n\n          return label;\n        },\n        callback: function callback() {\n          return _this5.onContextMenuMakeReadOnly();\n        },\n        disabled: function disabled() {\n          return _this5.hot.selection.isSelectedByCorner() || !_this5.checkSelectionCommentsConsistency();\n        }\n      });\n    }\n    /**\n     * Get `displayDelay` setting of comment plugin.\n     *\n     * @private\n     * @returns {Number|undefined}\n     */\n\n  }, {\n    key: \"getDisplayDelaySetting\",\n    value: function getDisplayDelaySetting() {\n      var commentSetting = this.hot.getSettings().comments;\n\n      if (isObject(commentSetting)) {\n        return commentSetting.displayDelay;\n      }\n\n      return void 0;\n    }\n    /**\n     * `afterBeginEditing` hook callback.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"onAfterBeginEditing\",\n    value: function onAfterBeginEditing() {\n      this.hide();\n    }\n    /**\n     * Destroys the plugin instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.editor) {\n        this.editor.destroy();\n      }\n\n      if (this.displaySwitch) {\n        this.displaySwitch.destroy();\n      }\n\n      _get(_getPrototypeOf(Comments.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return Comments;\n}(BasePlugin);\n\nregisterPlugin('comments', Comments);\nexport default Comments;"],"mappings":"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"},"metadata":{},"sourceType":"module"}