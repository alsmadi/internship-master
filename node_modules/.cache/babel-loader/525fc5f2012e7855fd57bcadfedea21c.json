{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nimport { toLabel } from 'hot-formula-parser';\nimport { isObject } from '../../../helpers/object';\n/**\n * @class BaseCell\n * @util\n */\n\nvar BaseCell = /*#__PURE__*/\nfunction () {\n  function BaseCell(row, column) {\n    _classCallCheck(this, BaseCell);\n    var rowObject = isObject(row);\n    var columnObject = isObject(column);\n    this._row = rowObject ? row.index : row;\n    this.rowAbsolute = rowObject ? row.isAbsolute : true;\n    this._column = columnObject ? column.index : column;\n    this.columnAbsolute = columnObject ? column.isAbsolute : true;\n    this.rowOffset = 0;\n    this.columnOffset = 0; // TODO: Change syntax to es6 after upgrade tests to newer version of phantom and jasmine.\n\n    Object.defineProperty(this, 'row', {\n      get: function get() {\n        return this.rowOffset + this._row;\n      },\n      set: function set(rowIndex) {\n        this._row = rowIndex;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(this, 'column', {\n      get: function get() {\n        return this.columnOffset + this._column;\n      },\n      set: function set(columnIndex) {\n        this._column = columnIndex;\n      },\n      enumerable: true,\n      configurable: true\n    });\n  }\n  /**\n   * Translate cell coordinates.\n   *\n   * @param {Number} rowOffset Row offset to move.\n   * @param {Number} columnOffset Column offset to move.\n   */\n\n  _createClass(BaseCell, [{\n    key: \"translateTo\",\n    value: function translateTo(rowOffset, columnOffset) {\n      this.row = this.row + rowOffset;\n      this.column = this.column + columnOffset;\n    }\n    /**\n     * Check if cell is equal to provided one.\n     *\n     * @param {BaseCell} cell Cell object.\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(cell) {\n      return cell.row === this.row && cell.column === this.column;\n    }\n    /**\n     * Stringify object.\n     *\n     * @returns {String}\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return toLabel({\n        index: this.row,\n        isAbsolute: this.rowAbsolute\n      }, {\n        index: this.column,\n        isAbsolute: this.columnAbsolute\n      });\n    }\n  }]);\n  return BaseCell;\n}();\nexport default BaseCell;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","toLabel","isObject","BaseCell","row","column","rowObject","columnObject","_row","index","rowAbsolute","isAbsolute","_column","columnAbsolute","rowOffset","columnOffset","get","set","rowIndex","columnIndex","value","translateTo","isEqual","cell","toString"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/plugins/formulas/cell/_base.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { toLabel } from 'hot-formula-parser';\nimport { isObject } from '../../../helpers/object';\n/**\n * @class BaseCell\n * @util\n */\n\nvar BaseCell =\n/*#__PURE__*/\nfunction () {\n  function BaseCell(row, column) {\n    _classCallCheck(this, BaseCell);\n\n    var rowObject = isObject(row);\n    var columnObject = isObject(column);\n    this._row = rowObject ? row.index : row;\n    this.rowAbsolute = rowObject ? row.isAbsolute : true;\n    this._column = columnObject ? column.index : column;\n    this.columnAbsolute = columnObject ? column.isAbsolute : true;\n    this.rowOffset = 0;\n    this.columnOffset = 0; // TODO: Change syntax to es6 after upgrade tests to newer version of phantom and jasmine.\n\n    Object.defineProperty(this, 'row', {\n      get: function get() {\n        return this.rowOffset + this._row;\n      },\n      set: function set(rowIndex) {\n        this._row = rowIndex;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(this, 'column', {\n      get: function get() {\n        return this.columnOffset + this._column;\n      },\n      set: function set(columnIndex) {\n        this._column = columnIndex;\n      },\n      enumerable: true,\n      configurable: true\n    });\n  }\n  /**\n   * Translate cell coordinates.\n   *\n   * @param {Number} rowOffset Row offset to move.\n   * @param {Number} columnOffset Column offset to move.\n   */\n\n\n  _createClass(BaseCell, [{\n    key: \"translateTo\",\n    value: function translateTo(rowOffset, columnOffset) {\n      this.row = this.row + rowOffset;\n      this.column = this.column + columnOffset;\n    }\n    /**\n     * Check if cell is equal to provided one.\n     *\n     * @param {BaseCell} cell Cell object.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(cell) {\n      return cell.row === this.row && cell.column === this.column;\n    }\n    /**\n     * Stringify object.\n     *\n     * @returns {String}\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return toLabel({\n        index: this.row,\n        isAbsolute: this.rowAbsolute\n      }, {\n        index: this.column,\n        isAbsolute: this.columnAbsolute\n      });\n    }\n  }]);\n\n  return BaseCell;\n}();\n\nexport default BaseCell;"],"mappings":"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"},"metadata":{},"sourceType":"module"}