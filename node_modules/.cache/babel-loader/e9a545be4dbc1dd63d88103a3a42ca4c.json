{"ast":null,"code":"import \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.number.constructor\";\nimport \"core-js/modules/es.number.is-integer\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.set\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport { isUndefined } from '../../helpers/mixed';\nimport { isObject } from '../../helpers/object';\nimport { isRightClick } from '../../helpers/dom/event';\nexport var ASC_SORT_STATE = 'asc';\nexport var DESC_SORT_STATE = 'desc';\nexport var HEADER_SPAN_CLASS = 'colHeader';\n/**\n * Get if column state is valid.\n *\n * @param {Number} columnState Particular column state.\n * @returns {Boolean}\n */\n\nfunction isValidColumnState(columnState) {\n  if (isUndefined(columnState)) {\n    return false;\n  }\n  var column = columnState.column,\n    sortOrder = columnState.sortOrder;\n  return Number.isInteger(column) && [ASC_SORT_STATE, DESC_SORT_STATE].includes(sortOrder);\n}\n/**\n * Get if all sorted columns states are valid.\n *\n * @param {Array} sortStates\n * @returns {Boolean}\n */\n\nexport function areValidSortStates(sortStates) {\n  if (Array.isArray(sortStates) === false || sortStates.every(function (columnState) {\n    return isObject(columnState);\n  }) === false) {\n    return false;\n  }\n  var sortedColumns = sortStates.map(function (_ref) {\n    var column = _ref.column;\n    return column;\n  });\n  var indexOccursOnlyOnce = new Set(sortedColumns).size === sortedColumns.length;\n  return indexOccursOnlyOnce && sortStates.every(isValidColumnState);\n}\n/**\n * Get next sort order for particular column. The order sequence looks as follows: 'asc' -> 'desc' -> undefined -> 'asc'\n *\n * @param {String|undefined} sortOrder sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n * @returns {String|undefined} Next sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n */\n\nexport function getNextSortOrder(sortOrder) {\n  if (sortOrder === DESC_SORT_STATE) {\n    return;\n  } else if (sortOrder === ASC_SORT_STATE) {\n    return DESC_SORT_STATE;\n  }\n  return ASC_SORT_STATE;\n}\n/**\n * Get `span` DOM element inside `th` DOM element.\n *\n * @param {Element} TH th HTML element.\n * @returns {Element | null}\n */\n\nexport function getHeaderSpanElement(TH) {\n  var headerSpanElement = TH.querySelector(\".\".concat(HEADER_SPAN_CLASS));\n  return headerSpanElement;\n}\n/**\n *\n * Get if handled header is first level column header.\n *\n * @param {Number} column Visual column index.\n * @param {Element} TH th HTML element.\n * @returns {Boolean}\n */\n\nexport function isFirstLevelColumnHeader(column, TH) {\n  if (column < 0 || !TH.parentNode) {\n    return false;\n  }\n  var TRs = TH.parentNode.parentNode.childNodes;\n  var headerLevel = Array.from(TRs).indexOf(TH.parentNode) - TRs.length;\n  if (headerLevel !== -1) {\n    return false;\n  }\n  return true;\n}\n/**\n *  Get if header was clicked properly. Click on column header and NOT done by right click return `true`.\n *\n * @param {Number} row Visual row index.\n * @param {Number} column Visual column index.\n * @param {Event} clickEvent Click event.\n * @returns {Boolean}\n */\n\nexport function wasHeaderClickedProperly(row, column, clickEvent) {\n  return row === -1 && column >= 0 && isRightClick(clickEvent) === false;\n}","map":{"version":3,"names":["isUndefined","isObject","isRightClick","ASC_SORT_STATE","DESC_SORT_STATE","HEADER_SPAN_CLASS","isValidColumnState","columnState","column","sortOrder","Number","isInteger","includes","areValidSortStates","sortStates","Array","isArray","every","sortedColumns","map","_ref","indexOccursOnlyOnce","Set","size","length","getNextSortOrder","getHeaderSpanElement","TH","headerSpanElement","querySelector","concat","isFirstLevelColumnHeader","parentNode","TRs","childNodes","headerLevel","from","indexOf","wasHeaderClickedProperly","row","clickEvent"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/plugins/columnSorting/utils.js"],"sourcesContent":["import \"core-js/modules/es.array.every\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.includes\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.number.constructor\";\nimport \"core-js/modules/es.number.is-integer\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.set\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport { isUndefined } from '../../helpers/mixed';\nimport { isObject } from '../../helpers/object';\nimport { isRightClick } from '../../helpers/dom/event';\nexport var ASC_SORT_STATE = 'asc';\nexport var DESC_SORT_STATE = 'desc';\nexport var HEADER_SPAN_CLASS = 'colHeader';\n/**\n * Get if column state is valid.\n *\n * @param {Number} columnState Particular column state.\n * @returns {Boolean}\n */\n\nfunction isValidColumnState(columnState) {\n  if (isUndefined(columnState)) {\n    return false;\n  }\n\n  var column = columnState.column,\n      sortOrder = columnState.sortOrder;\n  return Number.isInteger(column) && [ASC_SORT_STATE, DESC_SORT_STATE].includes(sortOrder);\n}\n/**\n * Get if all sorted columns states are valid.\n *\n * @param {Array} sortStates\n * @returns {Boolean}\n */\n\n\nexport function areValidSortStates(sortStates) {\n  if (Array.isArray(sortStates) === false || sortStates.every(function (columnState) {\n    return isObject(columnState);\n  }) === false) {\n    return false;\n  }\n\n  var sortedColumns = sortStates.map(function (_ref) {\n    var column = _ref.column;\n    return column;\n  });\n  var indexOccursOnlyOnce = new Set(sortedColumns).size === sortedColumns.length;\n  return indexOccursOnlyOnce && sortStates.every(isValidColumnState);\n}\n/**\n * Get next sort order for particular column. The order sequence looks as follows: 'asc' -> 'desc' -> undefined -> 'asc'\n *\n * @param {String|undefined} sortOrder sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n * @returns {String|undefined} Next sort order (`asc` for ascending, `desc` for descending and undefined for not sorted).\n */\n\nexport function getNextSortOrder(sortOrder) {\n  if (sortOrder === DESC_SORT_STATE) {\n    return;\n  } else if (sortOrder === ASC_SORT_STATE) {\n    return DESC_SORT_STATE;\n  }\n\n  return ASC_SORT_STATE;\n}\n/**\n * Get `span` DOM element inside `th` DOM element.\n *\n * @param {Element} TH th HTML element.\n * @returns {Element | null}\n */\n\nexport function getHeaderSpanElement(TH) {\n  var headerSpanElement = TH.querySelector(\".\".concat(HEADER_SPAN_CLASS));\n  return headerSpanElement;\n}\n/**\n *\n * Get if handled header is first level column header.\n *\n * @param {Number} column Visual column index.\n * @param {Element} TH th HTML element.\n * @returns {Boolean}\n */\n\nexport function isFirstLevelColumnHeader(column, TH) {\n  if (column < 0 || !TH.parentNode) {\n    return false;\n  }\n\n  var TRs = TH.parentNode.parentNode.childNodes;\n  var headerLevel = Array.from(TRs).indexOf(TH.parentNode) - TRs.length;\n\n  if (headerLevel !== -1) {\n    return false;\n  }\n\n  return true;\n}\n/**\n *  Get if header was clicked properly. Click on column header and NOT done by right click return `true`.\n *\n * @param {Number} row Visual row index.\n * @param {Number} column Visual column index.\n * @param {Event} clickEvent Click event.\n * @returns {Boolean}\n */\n\nexport function wasHeaderClickedProperly(row, column, clickEvent) {\n  return row === -1 && column >= 0 && isRightClick(clickEvent) === false;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}