{"ast":null,"code":"import \"core-js/modules/es.array.concat\";\nimport { addClass, hasClass } from './../helpers/dom/element';\nimport EventManager from './../eventManager';\nimport { CellCoords } from './../3rdparty/walkontable/src';\nimport { getRenderer } from './index';\n/**\n * Autocomplete renderer\n *\n * @private\n * @renderer AutocompleteRenderer\n * @param {Object} instance Handsontable instance\n * @param {Element} TD Table cell where to render\n * @param {Number} row\n * @param {Number} col\n * @param {String|Number} prop Row object property name\n * @param value Value to render (remember to escape unsafe HTML before inserting to DOM!)\n * @param {Object} cellProperties Cell properites (shared by cell renderer and editor)\n */\n\nfunction autocompleteRenderer(instance, TD, row, col, prop, value, cellProperties) {\n  var rootDocument = instance.rootDocument;\n  var rendererType = cellProperties.allowHtml ? 'html' : 'text';\n  var ARROW = rootDocument.createElement('DIV');\n  ARROW.className = 'htAutocompleteArrow';\n  ARROW.appendChild(rootDocument.createTextNode(String.fromCharCode(9660)));\n  for (var _len = arguments.length, args = new Array(_len > 7 ? _len - 7 : 0), _key = 7; _key < _len; _key++) {\n    args[_key - 7] = arguments[_key];\n  }\n  getRenderer(rendererType).apply(this, [instance, TD, row, col, prop, value, cellProperties].concat(args));\n  if (!TD.firstChild) {\n    // http://jsperf.com/empty-node-if-needed\n    // otherwise empty fields appear borderless in demo/renderers.html (IE)\n    TD.appendChild(rootDocument.createTextNode(String.fromCharCode(160))); // workaround for https://github.com/handsontable/handsontable/issues/1946\n    // this is faster than innerHTML. See: https://github.com/handsontable/handsontable/wiki/JavaScript-&-DOM-performance-tips\n  }\n\n  TD.insertBefore(ARROW, TD.firstChild);\n  addClass(TD, 'htAutocomplete');\n  if (!instance.acArrowListener) {\n    var eventManager = new EventManager(instance); // not very elegant but easy and fast\n\n    instance.acArrowListener = function (event) {\n      if (hasClass(event.target, 'htAutocompleteArrow')) {\n        instance.view.wt.getSetting('onCellDblClick', null, new CellCoords(row, col), TD);\n      }\n    };\n    eventManager.addEventListener(instance.rootElement, 'mousedown', instance.acArrowListener); // We need to unbind the listener after the table has been destroyed\n\n    instance.addHookOnce('afterDestroy', function () {\n      eventManager.destroy();\n    });\n  }\n}\nexport default autocompleteRenderer;","map":{"version":3,"names":["addClass","hasClass","EventManager","CellCoords","getRenderer","autocompleteRenderer","instance","TD","row","col","prop","value","cellProperties","rootDocument","rendererType","allowHtml","ARROW","createElement","className","appendChild","createTextNode","String","fromCharCode","_len","arguments","length","args","Array","_key","apply","concat","firstChild","insertBefore","acArrowListener","eventManager","event","target","view","wt","getSetting","addEventListener","rootElement","addHookOnce","destroy"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/renderers/autocompleteRenderer.js"],"sourcesContent":["import \"core-js/modules/es.array.concat\";\nimport { addClass, hasClass } from './../helpers/dom/element';\nimport EventManager from './../eventManager';\nimport { CellCoords } from './../3rdparty/walkontable/src';\nimport { getRenderer } from './index';\n/**\n * Autocomplete renderer\n *\n * @private\n * @renderer AutocompleteRenderer\n * @param {Object} instance Handsontable instance\n * @param {Element} TD Table cell where to render\n * @param {Number} row\n * @param {Number} col\n * @param {String|Number} prop Row object property name\n * @param value Value to render (remember to escape unsafe HTML before inserting to DOM!)\n * @param {Object} cellProperties Cell properites (shared by cell renderer and editor)\n */\n\nfunction autocompleteRenderer(instance, TD, row, col, prop, value, cellProperties) {\n  var rootDocument = instance.rootDocument;\n  var rendererType = cellProperties.allowHtml ? 'html' : 'text';\n  var ARROW = rootDocument.createElement('DIV');\n  ARROW.className = 'htAutocompleteArrow';\n  ARROW.appendChild(rootDocument.createTextNode(String.fromCharCode(9660)));\n\n  for (var _len = arguments.length, args = new Array(_len > 7 ? _len - 7 : 0), _key = 7; _key < _len; _key++) {\n    args[_key - 7] = arguments[_key];\n  }\n\n  getRenderer(rendererType).apply(this, [instance, TD, row, col, prop, value, cellProperties].concat(args));\n\n  if (!TD.firstChild) {\n    // http://jsperf.com/empty-node-if-needed\n    // otherwise empty fields appear borderless in demo/renderers.html (IE)\n    TD.appendChild(rootDocument.createTextNode(String.fromCharCode(160))); // workaround for https://github.com/handsontable/handsontable/issues/1946\n    // this is faster than innerHTML. See: https://github.com/handsontable/handsontable/wiki/JavaScript-&-DOM-performance-tips\n  }\n\n  TD.insertBefore(ARROW, TD.firstChild);\n  addClass(TD, 'htAutocomplete');\n\n  if (!instance.acArrowListener) {\n    var eventManager = new EventManager(instance); // not very elegant but easy and fast\n\n    instance.acArrowListener = function (event) {\n      if (hasClass(event.target, 'htAutocompleteArrow')) {\n        instance.view.wt.getSetting('onCellDblClick', null, new CellCoords(row, col), TD);\n      }\n    };\n\n    eventManager.addEventListener(instance.rootElement, 'mousedown', instance.acArrowListener); // We need to unbind the listener after the table has been destroyed\n\n    instance.addHookOnce('afterDestroy', function () {\n      eventManager.destroy();\n    });\n  }\n}\n\nexport default autocompleteRenderer;"],"mappings":"AAAA,OAAO,iCAAiC;AACxC,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,0BAA0B;AAC7D,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,SAASC,UAAU,QAAQ,+BAA+B;AAC1D,SAASC,WAAW,QAAQ,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,oBAAoB,CAACC,QAAQ,EAAEC,EAAE,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,cAAc,EAAE;EACjF,IAAIC,YAAY,GAAGP,QAAQ,CAACO,YAAY;EACxC,IAAIC,YAAY,GAAGF,cAAc,CAACG,SAAS,GAAG,MAAM,GAAG,MAAM;EAC7D,IAAIC,KAAK,GAAGH,YAAY,CAACI,aAAa,CAAC,KAAK,CAAC;EAC7CD,KAAK,CAACE,SAAS,GAAG,qBAAqB;EACvCF,KAAK,CAACG,WAAW,CAACN,YAAY,CAACO,cAAc,CAACC,MAAM,CAACC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;EAEzE,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;IAC1GF,IAAI,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;EAClC;EAEAxB,WAAW,CAACU,YAAY,CAAC,CAACe,KAAK,CAAC,IAAI,EAAE,CAACvB,QAAQ,EAAEC,EAAE,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,cAAc,CAAC,CAACkB,MAAM,CAACJ,IAAI,CAAC,CAAC;EAEzG,IAAI,CAACnB,EAAE,CAACwB,UAAU,EAAE;IAClB;IACA;IACAxB,EAAE,CAACY,WAAW,CAACN,YAAY,CAACO,cAAc,CAACC,MAAM,CAACC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE;EACF;;EAEAf,EAAE,CAACyB,YAAY,CAAChB,KAAK,EAAET,EAAE,CAACwB,UAAU,CAAC;EACrC/B,QAAQ,CAACO,EAAE,EAAE,gBAAgB,CAAC;EAE9B,IAAI,CAACD,QAAQ,CAAC2B,eAAe,EAAE;IAC7B,IAAIC,YAAY,GAAG,IAAIhC,YAAY,CAACI,QAAQ,CAAC,CAAC,CAAC;;IAE/CA,QAAQ,CAAC2B,eAAe,GAAG,UAAUE,KAAK,EAAE;MAC1C,IAAIlC,QAAQ,CAACkC,KAAK,CAACC,MAAM,EAAE,qBAAqB,CAAC,EAAE;QACjD9B,QAAQ,CAAC+B,IAAI,CAACC,EAAE,CAACC,UAAU,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAIpC,UAAU,CAACK,GAAG,EAAEC,GAAG,CAAC,EAAEF,EAAE,CAAC;MACnF;IACF,CAAC;IAED2B,YAAY,CAACM,gBAAgB,CAAClC,QAAQ,CAACmC,WAAW,EAAE,WAAW,EAAEnC,QAAQ,CAAC2B,eAAe,CAAC,CAAC,CAAC;;IAE5F3B,QAAQ,CAACoC,WAAW,CAAC,cAAc,EAAE,YAAY;MAC/CR,YAAY,CAACS,OAAO,EAAE;IACxB,CAAC,CAAC;EACJ;AACF;AAEA,eAAetC,oBAAoB"},"metadata":{},"sourceType":"module"}