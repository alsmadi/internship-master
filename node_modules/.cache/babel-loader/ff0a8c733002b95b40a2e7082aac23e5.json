{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * Row utils class contains all necessary information about sizes of the rows.\n *\n * @class {RowUtils}\n */\nvar RowUtils = /*#__PURE__*/\nfunction () {\n  function RowUtils(wot) {\n    _classCallCheck(this, RowUtils);\n    this.wot = wot;\n  }\n  /**\n   * Returns row height based on passed source index.\n   *\n   * @param {Number} sourceIndex Row source index.\n   * @returns {Number}\n   */\n\n  _createClass(RowUtils, [{\n    key: \"getHeight\",\n    value: function getHeight(sourceIndex) {\n      var height = this.wot.wtSettings.settings.rowHeight(sourceIndex);\n      var oversizedHeight = this.wot.wtViewport.oversizedRows[sourceIndex];\n      if (oversizedHeight !== void 0) {\n        height = height === void 0 ? oversizedHeight : Math.max(height, oversizedHeight);\n      }\n      return height;\n    }\n  }]);\n  return RowUtils;\n}();\nexport { RowUtils as default };","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","RowUtils","wot","value","getHeight","sourceIndex","height","wtSettings","settings","rowHeight","oversizedHeight","wtViewport","oversizedRows","Math","max","default"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/3rdparty/walkontable/src/utils/row.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Row utils class contains all necessary information about sizes of the rows.\n *\n * @class {RowUtils}\n */\nvar RowUtils =\n/*#__PURE__*/\nfunction () {\n  function RowUtils(wot) {\n    _classCallCheck(this, RowUtils);\n\n    this.wot = wot;\n  }\n  /**\n   * Returns row height based on passed source index.\n   *\n   * @param {Number} sourceIndex Row source index.\n   * @returns {Number}\n   */\n\n\n  _createClass(RowUtils, [{\n    key: \"getHeight\",\n    value: function getHeight(sourceIndex) {\n      var height = this.wot.wtSettings.settings.rowHeight(sourceIndex);\n      var oversizedHeight = this.wot.wtViewport.oversizedRows[sourceIndex];\n\n      if (oversizedHeight !== void 0) {\n        height = height === void 0 ? oversizedHeight : Math.max(height, oversizedHeight);\n      }\n\n      return height;\n    }\n  }]);\n\n  return RowUtils;\n}();\n\nexport { RowUtils as default };"],"mappings":"AAAA,SAASA,eAAe,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAExJ,SAASC,iBAAiB,CAACC,MAAM,EAAEC,KAAK,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IAAE,IAAIE,UAAU,GAAGH,KAAK,CAACC,CAAC,CAAC;IAAEE,UAAU,CAACC,UAAU,GAAGD,UAAU,CAACC,UAAU,IAAI,KAAK;IAAED,UAAU,CAACE,YAAY,GAAG,IAAI;IAAE,IAAI,OAAO,IAAIF,UAAU,EAAEA,UAAU,CAACG,QAAQ,GAAG,IAAI;IAAEC,MAAM,CAACC,cAAc,CAACT,MAAM,EAAEI,UAAU,CAACM,GAAG,EAAEN,UAAU,CAAC;EAAE;AAAE;AAE5T,SAASO,YAAY,CAACd,WAAW,EAAEe,UAAU,EAAEC,WAAW,EAAE;EAAE,IAAID,UAAU,EAAEb,iBAAiB,CAACF,WAAW,CAACiB,SAAS,EAAEF,UAAU,CAAC;EAAE,IAAIC,WAAW,EAAEd,iBAAiB,CAACF,WAAW,EAAEgB,WAAW,CAAC;EAAE,OAAOhB,WAAW;AAAE;;AAEtN;AACA;AACA;AACA;AACA;AACA,IAAIkB,QAAQ,GACZ;AACA,YAAY;EACV,SAASA,QAAQ,CAACC,GAAG,EAAE;IACrBrB,eAAe,CAAC,IAAI,EAAEoB,QAAQ,CAAC;IAE/B,IAAI,CAACC,GAAG,GAAGA,GAAG;EAChB;EACA;AACF;AACA;AACA;AACA;AACA;;EAGEL,YAAY,CAACI,QAAQ,EAAE,CAAC;IACtBL,GAAG,EAAE,WAAW;IAChBO,KAAK,EAAE,SAASC,SAAS,CAACC,WAAW,EAAE;MACrC,IAAIC,MAAM,GAAG,IAAI,CAACJ,GAAG,CAACK,UAAU,CAACC,QAAQ,CAACC,SAAS,CAACJ,WAAW,CAAC;MAChE,IAAIK,eAAe,GAAG,IAAI,CAACR,GAAG,CAACS,UAAU,CAACC,aAAa,CAACP,WAAW,CAAC;MAEpE,IAAIK,eAAe,KAAK,KAAK,CAAC,EAAE;QAC9BJ,MAAM,GAAGA,MAAM,KAAK,KAAK,CAAC,GAAGI,eAAe,GAAGG,IAAI,CAACC,GAAG,CAACR,MAAM,EAAEI,eAAe,CAAC;MAClF;MAEA,OAAOJ,MAAM;IACf;EACF,CAAC,CAAC,CAAC;EAEH,OAAOL,QAAQ;AACjB,CAAC,EAAE;AAEH,SAASA,QAAQ,IAAIc,OAAO"},"metadata":{},"sourceType":"module"}