{"ast":null,"code":"import \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.keys\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.weak-map\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\n/**\n * Utility to register plugins and common namespace for keeping reference to all plugins classes\n */\nimport Hooks from './pluginHooks';\nimport { objectEach } from './helpers/object';\nimport { toUpperCaseFirst } from './helpers/string';\nvar registeredPlugins = new WeakMap();\n/**\n * Registers plugin under given name\n *\n * @param {String} pluginName\n * @param {Function} PluginClass\n */\n\nfunction registerPlugin(pluginName, PluginClass) {\n  var correctedPluginName = toUpperCaseFirst(pluginName);\n  Hooks.getSingleton().add('construct', function () {\n    if (!registeredPlugins.has(this)) {\n      registeredPlugins.set(this, {});\n    }\n    var holder = registeredPlugins.get(this);\n    if (!holder[correctedPluginName]) {\n      holder[correctedPluginName] = new PluginClass(this);\n    }\n  });\n  Hooks.getSingleton().add('afterDestroy', function () {\n    if (registeredPlugins.has(this)) {\n      var pluginsHolder = registeredPlugins.get(this);\n      objectEach(pluginsHolder, function (plugin) {\n        return plugin.destroy();\n      });\n      registeredPlugins.delete(this);\n    }\n  });\n}\n/**\n * @param {Object} instance\n * @param {String|Function} pluginName\n * @returns {Function} pluginClass Returns plugin instance if exists or `undefined` if not exists.\n */\n\nfunction getPlugin(instance, pluginName) {\n  if (typeof pluginName !== 'string') {\n    throw Error('Only strings can be passed as \"plugin\" parameter');\n  }\n  var _pluginName = toUpperCaseFirst(pluginName);\n  if (!registeredPlugins.has(instance) || !registeredPlugins.get(instance)[_pluginName]) {\n    return void 0;\n  }\n  return registeredPlugins.get(instance)[_pluginName];\n}\n/**\n * Get all registred plugins names for concrete Handsontable instance.\n *\n * @param {Object} hotInstance\n * @returns {Array}\n */\n\nfunction getRegistredPluginNames(hotInstance) {\n  return registeredPlugins.has(hotInstance) ? Object.keys(registeredPlugins.get(hotInstance)) : [];\n}\n/**\n * Get plugin name.\n *\n * @param {Object} hotInstance\n * @param {Object} plugin\n * @returns {String|null}\n */\n\nfunction getPluginName(hotInstance, plugin) {\n  var pluginName = null;\n  if (registeredPlugins.has(hotInstance)) {\n    objectEach(registeredPlugins.get(hotInstance), function (pluginInstance, name) {\n      if (pluginInstance === plugin) {\n        pluginName = name;\n      }\n    });\n  }\n  return pluginName;\n}\nexport { registerPlugin, getPlugin, getRegistredPluginNames, getPluginName };","map":{"version":3,"names":["Hooks","objectEach","toUpperCaseFirst","registeredPlugins","WeakMap","registerPlugin","pluginName","PluginClass","correctedPluginName","getSingleton","add","has","set","holder","get","pluginsHolder","plugin","destroy","delete","getPlugin","instance","Error","_pluginName","getRegistredPluginNames","hotInstance","Object","keys","getPluginName","pluginInstance","name"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/plugins.js"],"sourcesContent":["import \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.keys\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.weak-map\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\n/**\n * Utility to register plugins and common namespace for keeping reference to all plugins classes\n */\nimport Hooks from './pluginHooks';\nimport { objectEach } from './helpers/object';\nimport { toUpperCaseFirst } from './helpers/string';\nvar registeredPlugins = new WeakMap();\n/**\n * Registers plugin under given name\n *\n * @param {String} pluginName\n * @param {Function} PluginClass\n */\n\nfunction registerPlugin(pluginName, PluginClass) {\n  var correctedPluginName = toUpperCaseFirst(pluginName);\n  Hooks.getSingleton().add('construct', function () {\n    if (!registeredPlugins.has(this)) {\n      registeredPlugins.set(this, {});\n    }\n\n    var holder = registeredPlugins.get(this);\n\n    if (!holder[correctedPluginName]) {\n      holder[correctedPluginName] = new PluginClass(this);\n    }\n  });\n  Hooks.getSingleton().add('afterDestroy', function () {\n    if (registeredPlugins.has(this)) {\n      var pluginsHolder = registeredPlugins.get(this);\n      objectEach(pluginsHolder, function (plugin) {\n        return plugin.destroy();\n      });\n      registeredPlugins.delete(this);\n    }\n  });\n}\n/**\n * @param {Object} instance\n * @param {String|Function} pluginName\n * @returns {Function} pluginClass Returns plugin instance if exists or `undefined` if not exists.\n */\n\n\nfunction getPlugin(instance, pluginName) {\n  if (typeof pluginName !== 'string') {\n    throw Error('Only strings can be passed as \"plugin\" parameter');\n  }\n\n  var _pluginName = toUpperCaseFirst(pluginName);\n\n  if (!registeredPlugins.has(instance) || !registeredPlugins.get(instance)[_pluginName]) {\n    return void 0;\n  }\n\n  return registeredPlugins.get(instance)[_pluginName];\n}\n/**\n * Get all registred plugins names for concrete Handsontable instance.\n *\n * @param {Object} hotInstance\n * @returns {Array}\n */\n\n\nfunction getRegistredPluginNames(hotInstance) {\n  return registeredPlugins.has(hotInstance) ? Object.keys(registeredPlugins.get(hotInstance)) : [];\n}\n/**\n * Get plugin name.\n *\n * @param {Object} hotInstance\n * @param {Object} plugin\n * @returns {String|null}\n */\n\n\nfunction getPluginName(hotInstance, plugin) {\n  var pluginName = null;\n\n  if (registeredPlugins.has(hotInstance)) {\n    objectEach(registeredPlugins.get(hotInstance), function (pluginInstance, name) {\n      if (pluginInstance === plugin) {\n        pluginName = name;\n      }\n    });\n  }\n\n  return pluginName;\n}\n\nexport { registerPlugin, getPlugin, getRegistredPluginNames, getPluginName };"],"mappings":"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"},"metadata":{},"sourceType":"module"}