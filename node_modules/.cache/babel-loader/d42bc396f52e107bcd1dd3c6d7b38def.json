{"ast":null,"code":"import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.map\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nexport var collection = new Map();\nexport default function staticRegister() {\n  var namespace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'common';\n  if (!collection.has(namespace)) {\n    collection.set(namespace, new Map());\n  }\n  var subCollection = collection.get(namespace);\n  /**\n   * Register an item to the collection. If the item under the same was exist earlier then this item will be replaced with new one.\n   *\n   * @param {String} name Identification of the item.\n   * @param {*} item Item to save in the collection.\n   */\n\n  function register(name, item) {\n    subCollection.set(name, item);\n  }\n  /**\n   * Retrieve the item from the collection.\n   *\n   * @param {String} name Identification of the item.\n   * @returns {*} Returns item which was saved in the collection.\n   */\n\n  function getItem(name) {\n    return subCollection.get(name);\n  }\n  /**\n   * Check if item under specyfied name is exists.\n   *\n   * @param {String} name Identification of the item.\n   * @returns {Boolean} Returns `true` or `false` depends on if element exists in the collection.\n   */\n\n  function hasItem(name) {\n    return subCollection.has(name);\n  }\n  /**\n   * Retrieve list of names registered from the collection.\n   *\n   * @returns {Array} Returns an array of strings with all names under which objects are stored.\n   */\n\n  function getNames() {\n    return _toConsumableArray(subCollection.keys());\n  }\n  /**\n   * Retrieve all registered values from the collection.\n   *\n   * @returns {Array} Returns an array with all values stored in the collection.\n   */\n\n  function getValues() {\n    return _toConsumableArray(subCollection.values());\n  }\n  return {\n    register: register,\n    getItem: getItem,\n    hasItem: hasItem,\n    getNames: getNames,\n    getValues: getValues\n  };\n}","map":{"version":3,"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","collection","Map","staticRegister","namespace","arguments","undefined","has","set","subCollection","get","register","name","item","getItem","hasItem","getNames","keys","getValues","values"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/utils/staticRegister.js"],"sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.map\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nexport var collection = new Map();\nexport default function staticRegister() {\n  var namespace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'common';\n\n  if (!collection.has(namespace)) {\n    collection.set(namespace, new Map());\n  }\n\n  var subCollection = collection.get(namespace);\n  /**\n   * Register an item to the collection. If the item under the same was exist earlier then this item will be replaced with new one.\n   *\n   * @param {String} name Identification of the item.\n   * @param {*} item Item to save in the collection.\n   */\n\n  function register(name, item) {\n    subCollection.set(name, item);\n  }\n  /**\n   * Retrieve the item from the collection.\n   *\n   * @param {String} name Identification of the item.\n   * @returns {*} Returns item which was saved in the collection.\n   */\n\n\n  function getItem(name) {\n    return subCollection.get(name);\n  }\n  /**\n   * Check if item under specyfied name is exists.\n   *\n   * @param {String} name Identification of the item.\n   * @returns {Boolean} Returns `true` or `false` depends on if element exists in the collection.\n   */\n\n\n  function hasItem(name) {\n    return subCollection.has(name);\n  }\n  /**\n   * Retrieve list of names registered from the collection.\n   *\n   * @returns {Array} Returns an array of strings with all names under which objects are stored.\n   */\n\n\n  function getNames() {\n    return _toConsumableArray(subCollection.keys());\n  }\n  /**\n   * Retrieve all registered values from the collection.\n   *\n   * @returns {Array} Returns an array with all values stored in the collection.\n   */\n\n\n  function getValues() {\n    return _toConsumableArray(subCollection.values());\n  }\n\n  return {\n    register: register,\n    getItem: getItem,\n    hasItem: hasItem,\n    getNames: getNames,\n    getValues: getValues\n  };\n}"],"mappings":"AAAA,OAAO,2BAA2B;AAClC,OAAO,uCAAuC;AAC9C,OAAO,oCAAoC;AAC3C,OAAO,+BAA+B;AACtC,OAAO,mCAAmC;AAC1C,OAAO,wBAAwB;AAC/B,OAAO,qCAAqC;AAC5C,OAAO,qCAAqC;AAC5C,OAAO,oCAAoC;AAC3C,OAAO,8CAA8C;AAErD,SAASA,kBAAkB,CAACC,GAAG,EAAE;EAAE,OAAOC,kBAAkB,CAACD,GAAG,CAAC,IAAIE,gBAAgB,CAACF,GAAG,CAAC,IAAIG,kBAAkB,EAAE;AAAE;AAEpH,SAASA,kBAAkB,GAAG;EAAE,MAAM,IAAIC,SAAS,CAAC,iDAAiD,CAAC;AAAE;AAExG,SAASF,gBAAgB,CAACG,IAAI,EAAE;EAAE,IAAIC,MAAM,CAACC,QAAQ,IAAIC,MAAM,CAACH,IAAI,CAAC,IAAIG,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACN,IAAI,CAAC,KAAK,oBAAoB,EAAE,OAAOO,KAAK,CAACC,IAAI,CAACR,IAAI,CAAC;AAAE;AAEjK,SAASJ,kBAAkB,CAACD,GAAG,EAAE;EAAE,IAAIY,KAAK,CAACE,OAAO,CAACd,GAAG,CAAC,EAAE;IAAE,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEC,IAAI,GAAG,IAAIJ,KAAK,CAACZ,GAAG,CAACiB,MAAM,CAAC,EAAEF,CAAC,GAAGf,GAAG,CAACiB,MAAM,EAAEF,CAAC,EAAE,EAAE;MAAEC,IAAI,CAACD,CAAC,CAAC,GAAGf,GAAG,CAACe,CAAC,CAAC;IAAE;IAAE,OAAOC,IAAI;EAAE;AAAE;AAErK,OAAO,IAAIE,UAAU,GAAG,IAAIC,GAAG,EAAE;AACjC,eAAe,SAASC,cAAc,GAAG;EACvC,IAAIC,SAAS,GAAGC,SAAS,CAACL,MAAM,GAAG,CAAC,IAAIK,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ;EAE5F,IAAI,CAACJ,UAAU,CAACM,GAAG,CAACH,SAAS,CAAC,EAAE;IAC9BH,UAAU,CAACO,GAAG,CAACJ,SAAS,EAAE,IAAIF,GAAG,EAAE,CAAC;EACtC;EAEA,IAAIO,aAAa,GAAGR,UAAU,CAACS,GAAG,CAACN,SAAS,CAAC;EAC7C;AACF;AACA;AACA;AACA;AACA;;EAEE,SAASO,QAAQ,CAACC,IAAI,EAAEC,IAAI,EAAE;IAC5BJ,aAAa,CAACD,GAAG,CAACI,IAAI,EAAEC,IAAI,CAAC;EAC/B;EACA;AACF;AACA;AACA;AACA;AACA;;EAGE,SAASC,OAAO,CAACF,IAAI,EAAE;IACrB,OAAOH,aAAa,CAACC,GAAG,CAACE,IAAI,CAAC;EAChC;EACA;AACF;AACA;AACA;AACA;AACA;;EAGE,SAASG,OAAO,CAACH,IAAI,EAAE;IACrB,OAAOH,aAAa,CAACF,GAAG,CAACK,IAAI,CAAC;EAChC;EACA;AACF;AACA;AACA;AACA;;EAGE,SAASI,QAAQ,GAAG;IAClB,OAAOlC,kBAAkB,CAAC2B,aAAa,CAACQ,IAAI,EAAE,CAAC;EACjD;EACA;AACF;AACA;AACA;AACA;;EAGE,SAASC,SAAS,GAAG;IACnB,OAAOpC,kBAAkB,CAAC2B,aAAa,CAACU,MAAM,EAAE,CAAC;EACnD;EAEA,OAAO;IACLR,QAAQ,EAAEA,QAAQ;IAClBG,OAAO,EAAEA,OAAO;IAChBC,OAAO,EAAEA,OAAO;IAChBC,QAAQ,EAAEA,QAAQ;IAClBE,SAAS,EAAEA;EACb,CAAC;AACH"},"metadata":{},"sourceType":"module"}