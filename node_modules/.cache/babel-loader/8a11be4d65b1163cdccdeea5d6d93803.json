{"ast":null,"code":"import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nimport { stopImmediatePropagation } from '../../../helpers/dom/event';\nimport { arrayEach } from '../../../helpers/array';\nimport { rangeEach } from '../../../helpers/number';\nimport { hasClass } from '../../../helpers/dom/element';\nimport BaseUI from './_base';\nimport HeadersUI from './headers';\n/**\n * Class responsible for the UI for collapsing and expanding groups.\n *\n * @class\n * @util\n * @extends BaseUI\n */\n\nvar CollapsingUI = /*#__PURE__*/\nfunction (_BaseUI) {\n  _inherits(CollapsingUI, _BaseUI);\n  function CollapsingUI(nestedRowsPlugin, hotInstance) {\n    var _this;\n    _classCallCheck(this, CollapsingUI);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CollapsingUI).call(this, nestedRowsPlugin, hotInstance));\n    /**\n     * Reference to the Trim Rows plugin.\n     */\n\n    _this.trimRowsPlugin = nestedRowsPlugin.trimRowsPlugin;\n    _this.dataManager = _this.plugin.dataManager;\n    _this.collapsedRows = [];\n    _this.collapsedRowsStash = {\n      stash: function stash() {\n        _this.lastCollapsedRows = _this.collapsedRows.slice(0); // Workaround for wrong indexes being set in the trimRows plugin\n\n        _this.expandMultipleChildren(_this.lastCollapsedRows, false);\n      },\n      shiftStash: function shiftStash(index) {\n        var delta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var elementIndex = _this.translateTrimmedRow(index);\n        arrayEach(_this.lastCollapsedRows, function (elem, i) {\n          if (elem > elementIndex - 1) {\n            _this.lastCollapsedRows[i] = elem + delta;\n          }\n        });\n      },\n      applyStash: function applyStash() {\n        // Workaround for wrong indexes being set in the trimRows plugin\n        _this.hot.runHooks('skipLengthCache', 100);\n        _this.collapseMultipleChildren(_this.lastCollapsedRows, true);\n        _this.lastCollapsedRows = void 0;\n      },\n      trimStash: function trimStash(realElementIndex, amount) {\n        rangeEach(realElementIndex, realElementIndex + amount - 1, function (i) {\n          var indexOfElement = _this.lastCollapsedRows.indexOf(i);\n          if (indexOfElement > -1) {\n            _this.lastCollapsedRows.splice(indexOfElement, 1);\n          }\n        });\n      }\n    };\n    return _this;\n  }\n  /**\n   * Collapse the children of the row passed as an argument.\n   *\n   * @param {Number|Object} row The parent row.\n   * @param {Boolean} [forceRender=true] Whether to render the table after the function ends.\n   */\n\n  _createClass(CollapsingUI, [{\n    key: \"collapseChildren\",\n    value: function collapseChildren(row) {\n      var _this2 = this;\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToCollapse = [];\n      var rowObject = null;\n      var rowIndex = null;\n      var rowsToTrim = null;\n      if (isNaN(row)) {\n        rowObject = row;\n        rowIndex = this.dataManager.getRowIndex(rowObject);\n      } else {\n        rowObject = this.dataManager.getDataObject(row);\n        rowIndex = row;\n      }\n      if (this.dataManager.hasChildren(rowObject)) {\n        arrayEach(rowObject.__children, function (elem) {\n          rowsToCollapse.push(_this2.dataManager.getRowIndex(elem));\n        });\n      }\n      rowsToTrim = this.collapseRows(rowsToCollapse, true, false);\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n      if (this.collapsedRows.indexOf(rowIndex) === -1) {\n        this.collapsedRows.push(rowIndex);\n      }\n      return rowsToTrim;\n    }\n    /**\n     * Collapse multiple children.\n     *\n     * @param {Array} rows Rows to collapse (including their children)\n     * @param {Boolean} [forceRender = true] `true` if the table should be rendered after finishing the function.\n     * @param {Boolean} [doTrimming = true] `true` if the table should trim the provided rows.\n     */\n  }, {\n    key: \"collapseMultipleChildren\",\n    value: function collapseMultipleChildren(rows) {\n      var _this3 = this;\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToTrim = [];\n      arrayEach(rows, function (elem) {\n        rowsToTrim.push.apply(rowsToTrim, _toConsumableArray(_this3.collapseChildren(elem, false, false)));\n      });\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n    }\n    /**\n     * Collapse a single row.\n     *\n     * @param {Number} rowIndex Index of the row to collapse.\n     * @param {Boolean} [recursive = true] `true` if it should collapse the row's children.\n     */\n  }, {\n    key: \"collapseRow\",\n    value: function collapseRow(rowIndex) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.collapseRows([rowIndex], recursive);\n    }\n    /**\n     * Collapse multiple rows.\n     *\n     * @param {Array} rowIndexes Array of row indexes to collapse.\n     * @param {Boolean} [recursive = true] `true` if it should collapse the rows' children.\n     * @param {Boolean} [doTrimming = false] `true` if the provided rows should be collapsed.\n     * @returns {Array} Rows prepared for trimming (or trimmed, if doTrimming == true)\n     */\n  }, {\n    key: \"collapseRows\",\n    value: function collapseRows(rowIndexes) {\n      var _this4 = this;\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsToTrim = [];\n      arrayEach(rowIndexes, function (elem) {\n        rowsToTrim.push(elem);\n        if (recursive) {\n          _this4.collapseChildRows(elem, rowsToTrim);\n        }\n      });\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n      return rowsToTrim;\n    }\n    /**\n     * Collapse child rows of the row at the provided index.\n     *\n     * @param {Number} parentIndex Index of the parent node.\n     * @param {Array} [rowsToTrim = []] Array of rows to trim. Defaults to an empty array.\n     * @param {Boolean} [recursive] `true` if the collapsing process should be recursive.\n     * @param {Boolean} [doTrimming = false] `true` if rows should be trimmed.\n     */\n  }, {\n    key: \"collapseChildRows\",\n    value: function collapseChildRows(parentIndex) {\n      var _this5 = this;\n      var rowsToTrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var recursive = arguments.length > 2 ? arguments[2] : undefined;\n      var doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (this.dataManager.hasChildren(parentIndex)) {\n        var parentObject = this.dataManager.getDataObject(parentIndex);\n        arrayEach(parentObject.__children, function (elem) {\n          var elemIndex = _this5.dataManager.getRowIndex(elem);\n          rowsToTrim.push(elemIndex);\n          _this5.collapseChildRows(elemIndex, rowsToTrim);\n        });\n      }\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n    }\n    /**\n     * Expand a single row.\n     *\n     * @param {Number} rowIndex Index of the row to expand.\n     * @param {Boolean} [recursive = true] `true` if it should expand the row's children recursively.\n     */\n  }, {\n    key: \"expandRow\",\n    value: function expandRow(rowIndex) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.expandRows([rowIndex], recursive);\n    }\n    /**\n     * Expand multiple rows.\n     *\n     * @param {Array} rowIndexes Array of indexes of the rows to expand.\n     * @param {Boolean} [recursive = true] `true` if it should expand the rows' children recursively.\n     * @param {Boolean} [doTrimming = false] `true` if rows should be untrimmed.\n     * @returns {Array} Array of row indexes to be untrimmed.\n     */\n  }, {\n    key: \"expandRows\",\n    value: function expandRows(rowIndexes) {\n      var _this6 = this;\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsToUntrim = [];\n      arrayEach(rowIndexes, function (elem) {\n        rowsToUntrim.push(elem);\n        if (recursive) {\n          _this6.expandChildRows(elem, rowsToUntrim);\n        }\n      });\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n      return rowsToUntrim;\n    }\n    /**\n     * Expand child rows of the provided index.\n     *\n     * @param {Number} parentIndex Index of the parent row.\n     * @param {Array} [rowsToUntrim = []] Array of the rows to be untrimmed.\n     * @param {Boolean} [recursive] `true` if it should expand the rows' children recursively.\n     * @param {Boolean} [doTrimming = false] `true` if rows should be untrimmed.\n     */\n  }, {\n    key: \"expandChildRows\",\n    value: function expandChildRows(parentIndex) {\n      var _this7 = this;\n      var rowsToUntrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var recursive = arguments.length > 2 ? arguments[2] : undefined;\n      var doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (this.dataManager.hasChildren(parentIndex)) {\n        var parentObject = this.dataManager.getDataObject(parentIndex);\n        arrayEach(parentObject.__children, function (elem) {\n          if (!_this7.isAnyParentCollapsed(elem)) {\n            var elemIndex = _this7.dataManager.getRowIndex(elem);\n            rowsToUntrim.push(elemIndex);\n            _this7.expandChildRows(elemIndex, rowsToUntrim);\n          }\n        });\n      }\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n    }\n    /**\n     * Expand the children of the row passed as an argument.\n     *\n     * @param {Number|Object} row Parent row.\n     * @param {Boolean} [forceRender=true] Whether to render the table after the function ends.\n     * @param {Boolean} [doTrimming=true] If set to `true`, the trimming will be applied when the function finishes.\n     */\n  }, {\n    key: \"expandChildren\",\n    value: function expandChildren(row) {\n      var _this8 = this;\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToExpand = [];\n      var rowObject = null;\n      var rowIndex = null;\n      var rowsToUntrim = null;\n      if (isNaN(row)) {\n        rowObject = row;\n        rowIndex = this.dataManager.getRowIndex(row);\n      } else {\n        rowObject = this.dataManager.getDataObject(row);\n        rowIndex = row;\n      }\n      this.collapsedRows.splice(this.collapsedRows.indexOf(rowIndex), 1);\n      if (this.dataManager.hasChildren(rowObject)) {\n        arrayEach(rowObject.__children, function (elem) {\n          var childIndex = _this8.dataManager.getRowIndex(elem);\n          rowsToExpand.push(childIndex);\n        });\n      }\n      rowsToUntrim = this.expandRows(rowsToExpand, true, false);\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n      return rowsToUntrim;\n    }\n    /**\n     * Expand multiple rows' children.\n     *\n     * @param {Array} rows Array of rows which children are about to be expanded.\n     * @param {Boolean} [forceRender = true] `true` if the table should render after finishing the function.\n     * @param {Boolean} [doTrimming = true] `true` if the rows should be untrimmed after finishing the function.\n     */\n  }, {\n    key: \"expandMultipleChildren\",\n    value: function expandMultipleChildren(rows) {\n      var _this9 = this;\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToUntrim = [];\n      arrayEach(rows, function (elem) {\n        rowsToUntrim.push.apply(rowsToUntrim, _toConsumableArray(_this9.expandChildren(elem, false, false)));\n      });\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n    }\n    /**\n     * Collapse all collapsable rows.\n     */\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      var _this10 = this;\n      var sourceData = this.hot.getSourceData();\n      var parentsToCollapse = [];\n      arrayEach(sourceData, function (elem) {\n        if (_this10.dataManager.hasChildren(elem)) {\n          parentsToCollapse.push(elem);\n        }\n      });\n      this.collapseMultipleChildren(parentsToCollapse);\n      this.renderAndAdjust();\n    }\n    /**\n     * Expand all collapsable rows.\n     */\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      var _this11 = this;\n      var sourceData = this.hot.getSourceData();\n      var parentsToExpand = [];\n      arrayEach(sourceData, function (elem) {\n        if (_this11.dataManager.hasChildren(elem)) {\n          parentsToExpand.push(elem);\n        }\n      });\n      this.expandMultipleChildren(parentsToExpand);\n      this.renderAndAdjust();\n    }\n    /**\n     * Check if all child rows are collapsed.\n     *\n     * @param {Number|Object} row The parent row.\n     * @private\n     */\n  }, {\n    key: \"areChildrenCollapsed\",\n    value: function areChildrenCollapsed(row) {\n      var _this12 = this;\n      var rowObj = null;\n      var allCollapsed = true;\n      if (isNaN(row)) {\n        rowObj = row;\n      } else {\n        rowObj = this.dataManager.getDataObject(row);\n      }\n      if (this.dataManager.hasChildren(rowObj)) {\n        arrayEach(rowObj.__children, function (elem) {\n          var rowIndex = _this12.dataManager.getRowIndex(elem);\n          if (!_this12.trimRowsPlugin.isTrimmed(rowIndex)) {\n            allCollapsed = false;\n            return false;\n          }\n        });\n      }\n      return allCollapsed;\n    }\n    /**\n     * Check if any of the row object parents are collapsed.\n     *\n     * @private\n     * @param {Object} rowObj Row object.\n     * @returns {Boolean}\n     */\n  }, {\n    key: \"isAnyParentCollapsed\",\n    value: function isAnyParentCollapsed(rowObj) {\n      var parent = rowObj;\n      while (parent !== null) {\n        parent = this.dataManager.getRowParent(parent);\n        var parentIndex = this.dataManager.getRowIndex(parent);\n        if (this.collapsedRows.indexOf(parentIndex) > -1) {\n          return true;\n        }\n      }\n      return false;\n    }\n    /**\n     * Toggle collapsed state. Callback for the `beforeOnCellMousedown` hook.\n     *\n     * @private\n     * @param {MouseEvent} event `mousedown` event\n     * @param {Object} coords Coordinates of the clicked cell/header.\n     */\n  }, {\n    key: \"toggleState\",\n    value: function toggleState(event, coords) {\n      if (coords.col >= 0) {\n        return;\n      }\n      var row = this.translateTrimmedRow(coords.row);\n      if (hasClass(event.target, HeadersUI.CSS_CLASSES.button)) {\n        if (this.areChildrenCollapsed(row)) {\n          this.expandChildren(row);\n        } else {\n          this.collapseChildren(row);\n        }\n        stopImmediatePropagation(event);\n      }\n    }\n    /**\n     * Translate physical row after trimming to physical base row index.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @returns {Number} Base row index.\n     */\n  }, {\n    key: \"translateTrimmedRow\",\n    value: function translateTrimmedRow(row) {\n      return this.trimRowsPlugin.rowsMapper.getValueByIndex(row);\n    }\n    /**\n     * Helper function to render the table and call the `adjustElementsSize` method.\n     *\n     * @private\n     */\n  }, {\n    key: \"renderAndAdjust\",\n    value: function renderAndAdjust() {\n      this.hot.render(); // Dirty workaround to prevent scroll height not adjusting to the table height. Needs refactoring in the future.\n\n      this.hot.view.wt.wtOverlays.adjustElementsSize();\n    }\n  }]);\n  return CollapsingUI;\n}(BaseUI);\nexport default CollapsingUI;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Object","toString","call","Array","from","isArray","i","arr2","length","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","stopImmediatePropagation","arrayEach","rangeEach","hasClass","BaseUI","HeadersUI","CollapsingUI","_BaseUI","nestedRowsPlugin","hotInstance","_this","trimRowsPlugin","dataManager","plugin","collapsedRows","collapsedRowsStash","stash","lastCollapsedRows","slice","expandMultipleChildren","shiftStash","index","delta","arguments","undefined","elementIndex","translateTrimmedRow","elem","applyStash","hot","runHooks","collapseMultipleChildren","trimStash","realElementIndex","amount","indexOfElement","indexOf","splice","collapseChildren","row","_this2","forceRender","doTrimming","rowsToCollapse","rowObject","rowIndex","rowsToTrim","isNaN","getRowIndex","getDataObject","hasChildren","__children","push","collapseRows","trimRows","renderAndAdjust","rows","_this3","apply","collapseRow","recursive","rowIndexes","_this4","collapseChildRows","parentIndex","_this5","parentObject","elemIndex","expandRow","expandRows","_this6","rowsToUntrim","expandChildRows","untrimRows","_this7","isAnyParentCollapsed","expandChildren","_this8","rowsToExpand","childIndex","_this9","collapseAll","_this10","sourceData","getSourceData","parentsToCollapse","expandAll","_this11","parentsToExpand","areChildrenCollapsed","_this12","rowObj","allCollapsed","isTrimmed","parent","getRowParent","toggleState","event","coords","col","CSS_CLASSES","button","rowsMapper","getValueByIndex","render","view","wt","wtOverlays","adjustElementsSize"],"sources":["C:/Users/mrezy/VSCode/internships-master/node_modules/handsontable/es/plugins/nestedRows/ui/collapsing.js"],"sourcesContent":["import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { stopImmediatePropagation } from '../../../helpers/dom/event';\nimport { arrayEach } from '../../../helpers/array';\nimport { rangeEach } from '../../../helpers/number';\nimport { hasClass } from '../../../helpers/dom/element';\nimport BaseUI from './_base';\nimport HeadersUI from './headers';\n/**\n * Class responsible for the UI for collapsing and expanding groups.\n *\n * @class\n * @util\n * @extends BaseUI\n */\n\nvar CollapsingUI =\n/*#__PURE__*/\nfunction (_BaseUI) {\n  _inherits(CollapsingUI, _BaseUI);\n\n  function CollapsingUI(nestedRowsPlugin, hotInstance) {\n    var _this;\n\n    _classCallCheck(this, CollapsingUI);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CollapsingUI).call(this, nestedRowsPlugin, hotInstance));\n    /**\n     * Reference to the Trim Rows plugin.\n     */\n\n    _this.trimRowsPlugin = nestedRowsPlugin.trimRowsPlugin;\n    _this.dataManager = _this.plugin.dataManager;\n    _this.collapsedRows = [];\n    _this.collapsedRowsStash = {\n      stash: function stash() {\n        _this.lastCollapsedRows = _this.collapsedRows.slice(0); // Workaround for wrong indexes being set in the trimRows plugin\n\n        _this.expandMultipleChildren(_this.lastCollapsedRows, false);\n      },\n      shiftStash: function shiftStash(index) {\n        var delta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n        var elementIndex = _this.translateTrimmedRow(index);\n\n        arrayEach(_this.lastCollapsedRows, function (elem, i) {\n          if (elem > elementIndex - 1) {\n            _this.lastCollapsedRows[i] = elem + delta;\n          }\n        });\n      },\n      applyStash: function applyStash() {\n        // Workaround for wrong indexes being set in the trimRows plugin\n        _this.hot.runHooks('skipLengthCache', 100);\n\n        _this.collapseMultipleChildren(_this.lastCollapsedRows, true);\n\n        _this.lastCollapsedRows = void 0;\n      },\n      trimStash: function trimStash(realElementIndex, amount) {\n        rangeEach(realElementIndex, realElementIndex + amount - 1, function (i) {\n          var indexOfElement = _this.lastCollapsedRows.indexOf(i);\n\n          if (indexOfElement > -1) {\n            _this.lastCollapsedRows.splice(indexOfElement, 1);\n          }\n        });\n      }\n    };\n    return _this;\n  }\n  /**\n   * Collapse the children of the row passed as an argument.\n   *\n   * @param {Number|Object} row The parent row.\n   * @param {Boolean} [forceRender=true] Whether to render the table after the function ends.\n   */\n\n\n  _createClass(CollapsingUI, [{\n    key: \"collapseChildren\",\n    value: function collapseChildren(row) {\n      var _this2 = this;\n\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToCollapse = [];\n      var rowObject = null;\n      var rowIndex = null;\n      var rowsToTrim = null;\n\n      if (isNaN(row)) {\n        rowObject = row;\n        rowIndex = this.dataManager.getRowIndex(rowObject);\n      } else {\n        rowObject = this.dataManager.getDataObject(row);\n        rowIndex = row;\n      }\n\n      if (this.dataManager.hasChildren(rowObject)) {\n        arrayEach(rowObject.__children, function (elem) {\n          rowsToCollapse.push(_this2.dataManager.getRowIndex(elem));\n        });\n      }\n\n      rowsToTrim = this.collapseRows(rowsToCollapse, true, false);\n\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n\n      if (this.collapsedRows.indexOf(rowIndex) === -1) {\n        this.collapsedRows.push(rowIndex);\n      }\n\n      return rowsToTrim;\n    }\n    /**\n     * Collapse multiple children.\n     *\n     * @param {Array} rows Rows to collapse (including their children)\n     * @param {Boolean} [forceRender = true] `true` if the table should be rendered after finishing the function.\n     * @param {Boolean} [doTrimming = true] `true` if the table should trim the provided rows.\n     */\n\n  }, {\n    key: \"collapseMultipleChildren\",\n    value: function collapseMultipleChildren(rows) {\n      var _this3 = this;\n\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToTrim = [];\n      arrayEach(rows, function (elem) {\n        rowsToTrim.push.apply(rowsToTrim, _toConsumableArray(_this3.collapseChildren(elem, false, false)));\n      });\n\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n    }\n    /**\n     * Collapse a single row.\n     *\n     * @param {Number} rowIndex Index of the row to collapse.\n     * @param {Boolean} [recursive = true] `true` if it should collapse the row's children.\n     */\n\n  }, {\n    key: \"collapseRow\",\n    value: function collapseRow(rowIndex) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.collapseRows([rowIndex], recursive);\n    }\n    /**\n     * Collapse multiple rows.\n     *\n     * @param {Array} rowIndexes Array of row indexes to collapse.\n     * @param {Boolean} [recursive = true] `true` if it should collapse the rows' children.\n     * @param {Boolean} [doTrimming = false] `true` if the provided rows should be collapsed.\n     * @returns {Array} Rows prepared for trimming (or trimmed, if doTrimming == true)\n     */\n\n  }, {\n    key: \"collapseRows\",\n    value: function collapseRows(rowIndexes) {\n      var _this4 = this;\n\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsToTrim = [];\n      arrayEach(rowIndexes, function (elem) {\n        rowsToTrim.push(elem);\n\n        if (recursive) {\n          _this4.collapseChildRows(elem, rowsToTrim);\n        }\n      });\n\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n\n      return rowsToTrim;\n    }\n    /**\n     * Collapse child rows of the row at the provided index.\n     *\n     * @param {Number} parentIndex Index of the parent node.\n     * @param {Array} [rowsToTrim = []] Array of rows to trim. Defaults to an empty array.\n     * @param {Boolean} [recursive] `true` if the collapsing process should be recursive.\n     * @param {Boolean} [doTrimming = false] `true` if rows should be trimmed.\n     */\n\n  }, {\n    key: \"collapseChildRows\",\n    value: function collapseChildRows(parentIndex) {\n      var _this5 = this;\n\n      var rowsToTrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var recursive = arguments.length > 2 ? arguments[2] : undefined;\n      var doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (this.dataManager.hasChildren(parentIndex)) {\n        var parentObject = this.dataManager.getDataObject(parentIndex);\n        arrayEach(parentObject.__children, function (elem) {\n          var elemIndex = _this5.dataManager.getRowIndex(elem);\n\n          rowsToTrim.push(elemIndex);\n\n          _this5.collapseChildRows(elemIndex, rowsToTrim);\n        });\n      }\n\n      if (doTrimming) {\n        this.trimRowsPlugin.trimRows(rowsToTrim);\n      }\n    }\n    /**\n     * Expand a single row.\n     *\n     * @param {Number} rowIndex Index of the row to expand.\n     * @param {Boolean} [recursive = true] `true` if it should expand the row's children recursively.\n     */\n\n  }, {\n    key: \"expandRow\",\n    value: function expandRow(rowIndex) {\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.expandRows([rowIndex], recursive);\n    }\n    /**\n     * Expand multiple rows.\n     *\n     * @param {Array} rowIndexes Array of indexes of the rows to expand.\n     * @param {Boolean} [recursive = true] `true` if it should expand the rows' children recursively.\n     * @param {Boolean} [doTrimming = false] `true` if rows should be untrimmed.\n     * @returns {Array} Array of row indexes to be untrimmed.\n     */\n\n  }, {\n    key: \"expandRows\",\n    value: function expandRows(rowIndexes) {\n      var _this6 = this;\n\n      var recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var rowsToUntrim = [];\n      arrayEach(rowIndexes, function (elem) {\n        rowsToUntrim.push(elem);\n\n        if (recursive) {\n          _this6.expandChildRows(elem, rowsToUntrim);\n        }\n      });\n\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n\n      return rowsToUntrim;\n    }\n    /**\n     * Expand child rows of the provided index.\n     *\n     * @param {Number} parentIndex Index of the parent row.\n     * @param {Array} [rowsToUntrim = []] Array of the rows to be untrimmed.\n     * @param {Boolean} [recursive] `true` if it should expand the rows' children recursively.\n     * @param {Boolean} [doTrimming = false] `true` if rows should be untrimmed.\n     */\n\n  }, {\n    key: \"expandChildRows\",\n    value: function expandChildRows(parentIndex) {\n      var _this7 = this;\n\n      var rowsToUntrim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var recursive = arguments.length > 2 ? arguments[2] : undefined;\n      var doTrimming = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (this.dataManager.hasChildren(parentIndex)) {\n        var parentObject = this.dataManager.getDataObject(parentIndex);\n        arrayEach(parentObject.__children, function (elem) {\n          if (!_this7.isAnyParentCollapsed(elem)) {\n            var elemIndex = _this7.dataManager.getRowIndex(elem);\n\n            rowsToUntrim.push(elemIndex);\n\n            _this7.expandChildRows(elemIndex, rowsToUntrim);\n          }\n        });\n      }\n\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n    }\n    /**\n     * Expand the children of the row passed as an argument.\n     *\n     * @param {Number|Object} row Parent row.\n     * @param {Boolean} [forceRender=true] Whether to render the table after the function ends.\n     * @param {Boolean} [doTrimming=true] If set to `true`, the trimming will be applied when the function finishes.\n     */\n\n  }, {\n    key: \"expandChildren\",\n    value: function expandChildren(row) {\n      var _this8 = this;\n\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToExpand = [];\n      var rowObject = null;\n      var rowIndex = null;\n      var rowsToUntrim = null;\n\n      if (isNaN(row)) {\n        rowObject = row;\n        rowIndex = this.dataManager.getRowIndex(row);\n      } else {\n        rowObject = this.dataManager.getDataObject(row);\n        rowIndex = row;\n      }\n\n      this.collapsedRows.splice(this.collapsedRows.indexOf(rowIndex), 1);\n\n      if (this.dataManager.hasChildren(rowObject)) {\n        arrayEach(rowObject.__children, function (elem) {\n          var childIndex = _this8.dataManager.getRowIndex(elem);\n\n          rowsToExpand.push(childIndex);\n        });\n      }\n\n      rowsToUntrim = this.expandRows(rowsToExpand, true, false);\n\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n\n      return rowsToUntrim;\n    }\n    /**\n     * Expand multiple rows' children.\n     *\n     * @param {Array} rows Array of rows which children are about to be expanded.\n     * @param {Boolean} [forceRender = true] `true` if the table should render after finishing the function.\n     * @param {Boolean} [doTrimming = true] `true` if the rows should be untrimmed after finishing the function.\n     */\n\n  }, {\n    key: \"expandMultipleChildren\",\n    value: function expandMultipleChildren(rows) {\n      var _this9 = this;\n\n      var forceRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var doTrimming = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var rowsToUntrim = [];\n      arrayEach(rows, function (elem) {\n        rowsToUntrim.push.apply(rowsToUntrim, _toConsumableArray(_this9.expandChildren(elem, false, false)));\n      });\n\n      if (doTrimming) {\n        this.trimRowsPlugin.untrimRows(rowsToUntrim);\n      }\n\n      if (forceRender) {\n        this.renderAndAdjust();\n      }\n    }\n    /**\n     * Collapse all collapsable rows.\n     */\n\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      var _this10 = this;\n\n      var sourceData = this.hot.getSourceData();\n      var parentsToCollapse = [];\n      arrayEach(sourceData, function (elem) {\n        if (_this10.dataManager.hasChildren(elem)) {\n          parentsToCollapse.push(elem);\n        }\n      });\n      this.collapseMultipleChildren(parentsToCollapse);\n      this.renderAndAdjust();\n    }\n    /**\n     * Expand all collapsable rows.\n     */\n\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      var _this11 = this;\n\n      var sourceData = this.hot.getSourceData();\n      var parentsToExpand = [];\n      arrayEach(sourceData, function (elem) {\n        if (_this11.dataManager.hasChildren(elem)) {\n          parentsToExpand.push(elem);\n        }\n      });\n      this.expandMultipleChildren(parentsToExpand);\n      this.renderAndAdjust();\n    }\n    /**\n     * Check if all child rows are collapsed.\n     *\n     * @param {Number|Object} row The parent row.\n     * @private\n     */\n\n  }, {\n    key: \"areChildrenCollapsed\",\n    value: function areChildrenCollapsed(row) {\n      var _this12 = this;\n\n      var rowObj = null;\n      var allCollapsed = true;\n\n      if (isNaN(row)) {\n        rowObj = row;\n      } else {\n        rowObj = this.dataManager.getDataObject(row);\n      }\n\n      if (this.dataManager.hasChildren(rowObj)) {\n        arrayEach(rowObj.__children, function (elem) {\n          var rowIndex = _this12.dataManager.getRowIndex(elem);\n\n          if (!_this12.trimRowsPlugin.isTrimmed(rowIndex)) {\n            allCollapsed = false;\n            return false;\n          }\n        });\n      }\n\n      return allCollapsed;\n    }\n    /**\n     * Check if any of the row object parents are collapsed.\n     *\n     * @private\n     * @param {Object} rowObj Row object.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isAnyParentCollapsed\",\n    value: function isAnyParentCollapsed(rowObj) {\n      var parent = rowObj;\n\n      while (parent !== null) {\n        parent = this.dataManager.getRowParent(parent);\n        var parentIndex = this.dataManager.getRowIndex(parent);\n\n        if (this.collapsedRows.indexOf(parentIndex) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Toggle collapsed state. Callback for the `beforeOnCellMousedown` hook.\n     *\n     * @private\n     * @param {MouseEvent} event `mousedown` event\n     * @param {Object} coords Coordinates of the clicked cell/header.\n     */\n\n  }, {\n    key: \"toggleState\",\n    value: function toggleState(event, coords) {\n      if (coords.col >= 0) {\n        return;\n      }\n\n      var row = this.translateTrimmedRow(coords.row);\n\n      if (hasClass(event.target, HeadersUI.CSS_CLASSES.button)) {\n        if (this.areChildrenCollapsed(row)) {\n          this.expandChildren(row);\n        } else {\n          this.collapseChildren(row);\n        }\n\n        stopImmediatePropagation(event);\n      }\n    }\n    /**\n     * Translate physical row after trimming to physical base row index.\n     *\n     * @private\n     * @param {Number} row Row index.\n     * @returns {Number} Base row index.\n     */\n\n  }, {\n    key: \"translateTrimmedRow\",\n    value: function translateTrimmedRow(row) {\n      return this.trimRowsPlugin.rowsMapper.getValueByIndex(row);\n    }\n    /**\n     * Helper function to render the table and call the `adjustElementsSize` method.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"renderAndAdjust\",\n    value: function renderAndAdjust() {\n      this.hot.render(); // Dirty workaround to prevent scroll height not adjusting to the table height. Needs refactoring in the future.\n\n      this.hot.view.wt.wtOverlays.adjustElementsSize();\n    }\n  }]);\n\n  return CollapsingUI;\n}(BaseUI);\n\nexport default CollapsingUI;"],"mappings":"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"},"metadata":{},"sourceType":"module"}